{
  "KSampler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "KSampler",
    "display_name": "KSampler",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "CheckpointLoaderSimple": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoaderSimple",
    "display_name": "Load Checkpoint",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPTextEncode": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncode",
    "display_name": "CLIP Text Encode (Prompt)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "CLIPSetLastLayer": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "stop_at_clip_layer": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPSetLastLayer",
    "display_name": "CLIP Set Last Layer",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "VAEDecode": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "VAEDecode",
    "display_name": "VAE Decode",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "VAEEncode": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncode",
    "display_name": "VAE Encode",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "VAEEncodeForInpaint": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "mask": [
          "MASK"
        ],
        "grow_mask_by": [
          "INT",
          {
            "default": 6,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncodeForInpaint",
    "display_name": "VAE Encode (for Inpainting)",
    "description": "",
    "category": "latent/inpaint",
    "output_node": false
  },
  "VAELoader": {
    "input": {
      "required": {
        "vae_name": [
          [
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ]
      }
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [false],
    "output_name": [
      "VAE"
    ],
    "name": "VAELoader",
    "display_name": "Load VAE",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "EmptyLatentImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "EmptyLatentImage",
    "display_name": "Empty Latent Image",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentUpscale": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscale",
    "display_name": "Upscale Latent",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentUpscaleBy": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.01,
            "max": 8,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscaleBy",
    "display_name": "Upscale Latent By",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentFromBatch": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 63
          }
        ],
        "length": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentFromBatch",
    "display_name": "Latent From Batch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "RepeatLatentBatch": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "amount": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "RepeatLatentBatch",
    "display_name": "Repeat Latent Batch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "SaveImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveImage",
    "display_name": "Save Image",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "PreviewImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "PreviewImage",
    "display_name": "Preview Image",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "LoadImage": {
    "input": {
      "required": {
        "image": [
          [
            "0B2160D7-D05E-4ADC-91CC-D38354EBC43C.JPG",
            "IMG_6552.jpg",
            "IMG_6747.jpg",
            "IMG_6750.jpg",
            "WhatsApp Image 2024-06-01 at 14.21.58.jpeg",
            "WhatsApp Image 2024-06-01 at 14.21.59.jpeg",
            "cavallo.png",
            "example.png",
            "giancarlo.png",
            "ilmanu (1).jpg",
            "ilmanu.jpg",
            "luca.png",
            "minchietti.png",
            "mountains.png",
            "sunset.png"
          ],
          {
            "image_upload": true
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LoadImage",
    "display_name": "Load Image",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImageMask": {
    "input": {
      "required": {
        "image": [
          [
            "0B2160D7-D05E-4ADC-91CC-D38354EBC43C.JPG",
            "IMG_6552.jpg",
            "IMG_6747.jpg",
            "IMG_6750.jpg",
            "WhatsApp Image 2024-06-01 at 14.21.58.jpeg",
            "WhatsApp Image 2024-06-01 at 14.21.59.jpeg",
            "cavallo.png",
            "example.png",
            "giancarlo.png",
            "ilmanu (1).jpg",
            "ilmanu.jpg",
            "luca.png",
            "minchietti.png",
            "mountains.png",
            "sunset.png"
          ],
          {
            "image_upload": true
          }
        ],
        "channel": [
          [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "LoadImageMask",
    "display_name": "Load Image (as Mask)",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageScale": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScale",
    "display_name": "Upscale Image",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageScaleBy": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 8,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleBy",
    "display_name": "Upscale Image By",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageInvert": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageInvert",
    "display_name": "Invert Image",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImageBatch": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatch",
    "display_name": "Batch Images",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImagePadForOutpaint": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 40,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImagePadForOutpaint",
    "display_name": "Pad Image for Outpainting",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "EmptyImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "color": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16777215,
            "step": 1,
            "display": "color"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "EmptyImage",
    "display_name": "EmptyImage",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ConditioningAverage": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "conditioning_from": [
          "CONDITIONING"
        ],
        "conditioning_to_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningAverage",
    "display_name": "ConditioningAverage",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningCombine": {
    "input": {
      "required": {
        "conditioning_1": [
          "CONDITIONING"
        ],
        "conditioning_2": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningCombine",
    "display_name": "Conditioning (Combine)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningConcat": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "conditioning_from": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningConcat",
    "display_name": "Conditioning (Concat)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetArea": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "INT",
          {
            "default": 64,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 64,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetArea",
    "display_name": "Conditioning (Set Area)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetAreaPercentage": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "height": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "x": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "y": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetAreaPercentage",
    "display_name": "Conditioning (Set Area with Percentage)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetAreaStrength": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetAreaStrength",
    "display_name": "ConditioningSetAreaStrength",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetMask": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "mask": [
          "MASK"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetMask",
    "display_name": "Conditioning (Set Mask)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "KSamplerAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "KSamplerAdvanced",
    "display_name": "KSampler (Advanced)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "SetLatentNoiseMask": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "SetLatentNoiseMask",
    "display_name": "Set Latent Noise Mask",
    "description": "",
    "category": "latent/inpaint",
    "output_node": false
  },
  "LatentComposite": {
    "input": {
      "required": {
        "samples_to": [
          "LATENT"
        ],
        "samples_from": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentComposite",
    "display_name": "Latent Composite",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentBlend": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBlend",
    "display_name": "Latent Blend",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "LatentRotate": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "rotation": [
          [
            "none",
            "90 degrees",
            "180 degrees",
            "270 degrees"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentRotate",
    "display_name": "Rotate Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LatentFlip": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "flip_method": [
          [
            "x-axis: vertically",
            "y-axis: horizontally"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentFlip",
    "display_name": "Flip Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LatentCrop": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentCrop",
    "display_name": "Crop Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LoraLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "LoraLoader",
    "display_name": "Load LoRA",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPLoader": {
    "input": {
      "required": {
        "clip_name": [
          [
            "clip_vision_g.safetensors"
          ]
        ],
        "type": [
          [
            "stable_diffusion",
            "stable_cascade"
          ]
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPLoader",
    "display_name": "Load CLIP",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "UNETLoader": {
    "input": {
      "required": {
        "unet_name": [
          []
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "UNETLoader",
    "display_name": "UNETLoader",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "DualCLIPLoader": {
    "input": {
      "required": {
        "clip_name1": [
          [
            "clip_vision_g.safetensors"
          ]
        ],
        "clip_name2": [
          [
            "clip_vision_g.safetensors"
          ]
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "DualCLIPLoader",
    "display_name": "DualCLIPLoader",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "CLIPVisionEncode": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "CLIP_VISION_OUTPUT"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP_VISION_OUTPUT"
    ],
    "name": "CLIPVisionEncode",
    "display_name": "CLIP Vision Encode",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "StyleModelApply": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "style_model": [
          "STYLE_MODEL"
        ],
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "StyleModelApply",
    "display_name": "Apply Style Model",
    "description": "",
    "category": "conditioning/style_model",
    "output_node": false
  },
  "unCLIPConditioning": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "unCLIPConditioning",
    "display_name": "unCLIPConditioning",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetApply": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ControlNetApply",
    "display_name": "Apply ControlNet",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetApplyAdvanced": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "ControlNetApplyAdvanced",
    "display_name": "Apply ControlNet (Advanced)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetLoader": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "control_v11f1p_sd15_depth.pth",
            "control_v11p_sd15_lineart.pth",
            "depth-sdxl/diffusion_pytorch_model.fp16.safetensors",
            "depth/control_v11f1p_sd15_depth.pth",
            "depth/diffusion_pytorch_model.safetensors",
            "diffusion_pytorch_model.safetensors",
            "instantIDSDXL_ipAdapterInstantId.bin",
            "instantid/diffusion_pytorch_model.safetensors",
            "instantid/ip-adapter.bin",
            "lineart/control_v11p_sd15_lineart.pth",
            "lineart/diffusion_pytorch_model.safetensors",
            "stable_cascade_canny.safetensors",
            "stable_cascade_inpainting.safetensors",
            "stable_cascade_super_resolution.safetensors",
            "t2i-adapter-lineart-sdxl-1.0/diffusion_pytorch_model.safetensors",
            "t2iadapter_depth_sd15v2/diffusion_pytorch_model.bin"
          ]
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ControlNetLoader",
    "display_name": "Load ControlNet Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "DiffControlNetLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "control_net_name": [
          [
            "control_v11f1p_sd15_depth.pth",
            "control_v11p_sd15_lineart.pth",
            "depth-sdxl/diffusion_pytorch_model.fp16.safetensors",
            "depth/control_v11f1p_sd15_depth.pth",
            "depth/diffusion_pytorch_model.safetensors",
            "diffusion_pytorch_model.safetensors",
            "instantIDSDXL_ipAdapterInstantId.bin",
            "instantid/diffusion_pytorch_model.safetensors",
            "instantid/ip-adapter.bin",
            "lineart/control_v11p_sd15_lineart.pth",
            "lineart/diffusion_pytorch_model.safetensors",
            "stable_cascade_canny.safetensors",
            "stable_cascade_inpainting.safetensors",
            "stable_cascade_super_resolution.safetensors",
            "t2i-adapter-lineart-sdxl-1.0/diffusion_pytorch_model.safetensors",
            "t2iadapter_depth_sd15v2/diffusion_pytorch_model.bin"
          ]
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "DiffControlNetLoader",
    "display_name": "Load ControlNet Model (diff)",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "StyleModelLoader": {
    "input": {
      "required": {
        "style_model_name": [
          []
        ]
      }
    },
    "output": [
      "STYLE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "STYLE_MODEL"
    ],
    "name": "StyleModelLoader",
    "display_name": "Load Style Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPVisionLoader": {
    "input": {
      "required": {
        "clip_name": [
          [
            "ip_adapter_sd_image_encoder/model.safetensors",
            "ip_adapter_sdxl_image_encoder/model.safetensors"
          ]
        ]
      }
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP_VISION"
    ],
    "name": "CLIPVisionLoader",
    "display_name": "Load CLIP Vision",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "VAEDecodeTiled": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "VAEDecodeTiled",
    "display_name": "VAE Decode (Tiled)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "VAEEncodeTiled": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncodeTiled",
    "display_name": "VAE Encode (Tiled)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "unCLIPCheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "name": "unCLIPCheckpointLoader",
    "display_name": "unCLIPCheckpointLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "GLIGENLoader": {
    "input": {
      "required": {
        "gligen_name": [
          []
        ]
      }
    },
    "output": [
      "GLIGEN"
    ],
    "output_is_list": [false],
    "output_name": [
      "GLIGEN"
    ],
    "name": "GLIGENLoader",
    "display_name": "GLIGENLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "GLIGENTextBoxApply": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "clip": [
          "CLIP"
        ],
        "gligen_textbox_model": [
          "GLIGEN"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ],
        "width": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 16384,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "GLIGENTextBoxApply",
    "display_name": "GLIGENTextBoxApply",
    "description": "",
    "category": "conditioning/gligen",
    "output_node": false
  },
  "InpaintModelConditioning": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "pixels": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "InpaintModelConditioning",
    "display_name": "InpaintModelConditioning",
    "description": "",
    "category": "conditioning/inpaint",
    "output_node": false
  },
  "CheckpointLoader": {
    "input": {
      "required": {
        "config_name": [
          [
            "anything_v3.yaml",
            "illuminatiDiffusionV1_v11_ec40.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ]
        ],
        "ckpt_name": [
          [
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoader",
    "display_name": "Load Checkpoint With Config (DEPRECATED)",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "DiffusersLoader": {
    "input": {
      "required": {
        "model_path": [
          []
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "DiffusersLoader",
    "display_name": "DiffusersLoader",
    "description": "",
    "category": "advanced/loaders/deprecated",
    "output_node": false
  },
  "LoadLatent": {
    "input": {
      "required": {
        "latent": [
          []
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LoadLatent",
    "display_name": "LoadLatent",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "SaveLatent": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "latents/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveLatent",
    "display_name": "SaveLatent",
    "description": "",
    "category": "_for_testing",
    "output_node": true
  },
  "ConditioningZeroOut": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningZeroOut",
    "display_name": "ConditioningZeroOut",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "ConditioningSetTimestepRange": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "start": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetTimestepRange",
    "display_name": "ConditioningSetTimestepRange",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "LoraLoaderModelOnly": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "lora_name": [
          [
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "LoraLoaderModelOnly",
    "display_name": "LoraLoaderModelOnly",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "LatentAdd": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentAdd",
    "display_name": "LatentAdd",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentSubtract": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentSubtract",
    "display_name": "LatentSubtract",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentMultiply": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentMultiply",
    "display_name": "LatentMultiply",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentInterpolate": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentInterpolate",
    "display_name": "LatentInterpolate",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentBatch": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBatch",
    "display_name": "LatentBatch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "LatentBatchSeedBehavior": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "seed_behavior": [
          [
            "random",
            "fixed"
          ],
          {
            "default": "fixed"
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBatchSeedBehavior",
    "display_name": "LatentBatchSeedBehavior",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "HypernetworkLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "hypernetwork_name": [
          []
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "HypernetworkLoader",
    "display_name": "HypernetworkLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "UpscaleModelLoader": {
    "input": {
      "required": {
        "model_name": [
          [
            "4x-UltraSharp.pth",
            "4x_NMKD-Siax_200k.pth",
            "4x_fatal_Anime_500000_G.pth"
          ]
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "name": "UpscaleModelLoader",
    "display_name": "Load Upscale Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "ImageUpscaleWithModel": {
    "input": {
      "required": {
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageUpscaleWithModel",
    "display_name": "Upscale Image (using Model)",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageBlend": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multiply",
            "screen",
            "overlay",
            "soft_light",
            "difference"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBlend",
    "display_name": "ImageBlend",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageBlur": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "blur_radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 31,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBlur",
    "display_name": "ImageBlur",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageQuantize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "colors": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "dither": [
          [
            "none",
            "floyd-steinberg",
            "bayer-2",
            "bayer-4",
            "bayer-8",
            "bayer-16"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageQuantize",
    "display_name": "ImageQuantize",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageSharpen": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "sharpen_radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 31,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.01
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageSharpen",
    "display_name": "ImageSharpen",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageScaleToTotalPixels": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "megapixels": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 16,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleToTotalPixels",
    "display_name": "ImageScaleToTotalPixels",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "LatentCompositeMasked": {
    "input": {
      "required": {
        "destination": [
          "LATENT"
        ],
        "source": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
          }
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentCompositeMasked",
    "display_name": "LatentCompositeMasked",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "ImageCompositeMasked": {
    "input": {
      "required": {
        "destination": [
          "IMAGE"
        ],
        "source": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCompositeMasked",
    "display_name": "ImageCompositeMasked",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "MaskToImage": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "MaskToImage",
    "display_name": "Convert Mask to Image",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageToMask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "channel": [
          [
            "red",
            "green",
            "blue",
            "alpha"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ImageToMask",
    "display_name": "Convert Image to Mask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageColorToMask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "color": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16777215,
            "step": 1,
            "display": "color"
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ImageColorToMask",
    "display_name": "ImageColorToMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "SolidMask": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "SolidMask",
    "display_name": "SolidMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "InvertMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "InvertMask",
    "display_name": "InvertMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "CropMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "CropMask",
    "display_name": "CropMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "MaskComposite": {
    "input": {
      "required": {
        "destination": [
          "MASK"
        ],
        "source": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "operation": [
          [
            "multiply",
            "add",
            "subtract",
            "and",
            "or",
            "xor"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskComposite",
    "display_name": "MaskComposite",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "FeatherMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "FeatherMask",
    "display_name": "FeatherMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "GrowMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "expand": [
          "INT",
          {
            "default": 0,
            "min": -16384,
            "max": 16384,
            "step": 1
          }
        ],
        "tapered_corners": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "GrowMask",
    "display_name": "GrowMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ThresholdMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "value": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "ThresholdMask",
    "display_name": "ThresholdMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "PorterDuffImageComposite": {
    "input": {
      "required": {
        "source": [
          "IMAGE"
        ],
        "source_alpha": [
          "MASK"
        ],
        "destination": [
          "IMAGE"
        ],
        "destination_alpha": [
          "MASK"
        ],
        "mode": [
          [
            "ADD",
            "CLEAR",
            "DARKEN",
            "DST",
            "DST_ATOP",
            "DST_IN",
            "DST_OUT",
            "DST_OVER",
            "LIGHTEN",
            "MULTIPLY",
            "OVERLAY",
            "SCREEN",
            "SRC",
            "SRC_ATOP",
            "SRC_IN",
            "SRC_OUT",
            "SRC_OVER",
            "XOR"
          ],
          {
            "default": "DST"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "PorterDuffImageComposite",
    "display_name": "Porter-Duff Image Composite",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "SplitImageWithAlpha": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "SplitImageWithAlpha",
    "display_name": "Split Image with Alpha",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "JoinImageWithAlpha": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "alpha": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "JoinImageWithAlpha",
    "display_name": "Join Image with Alpha",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "RebatchLatents": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [true],
    "output_name": [
      "LATENT"
    ],
    "name": "RebatchLatents",
    "display_name": "Rebatch Latents",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "RebatchImages": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [true],
    "output_name": [
      "IMAGE"
    ],
    "name": "RebatchImages",
    "display_name": "Rebatch Images",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ModelMergeSimple": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSimple",
    "display_name": "ModelMergeSimple",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeBlocks": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "input": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeBlocks",
    "display_name": "ModelMergeBlocks",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeSubtract": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSubtract",
    "display_name": "ModelMergeSubtract",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeAdd": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeAdd",
    "display_name": "ModelMergeAdd",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CheckpointSave": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CheckpointSave",
    "display_name": "CheckpointSave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "CLIPMergeSimple": {
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPMergeSimple",
    "display_name": "CLIPMergeSimple",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CLIPMergeSubtract": {
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPMergeSubtract",
    "display_name": "CLIPMergeSubtract",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CLIPMergeAdd": {
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPMergeAdd",
    "display_name": "CLIPMergeAdd",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CLIPSave": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "clip/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CLIPSave",
    "display_name": "CLIPSave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "VAESave": {
    "input": {
      "required": {
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "vae/ComfyUI_vae"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "VAESave",
    "display_name": "VAESave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "TomePatchModel": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "TomePatchModel",
    "display_name": "TomePatchModel",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "CLIPTextEncodeSDXLRefiner": {
    "input": {
      "required": {
        "ascore": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeSDXLRefiner",
    "display_name": "CLIPTextEncodeSDXLRefiner",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "CLIPTextEncodeSDXL": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 16384
          }
        ],
        "text_g": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "text_l": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeSDXL",
    "display_name": "CLIPTextEncodeSDXL",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "Canny": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "low_threshold": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "high_threshold": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Canny",
    "display_name": "Canny",
    "description": "",
    "category": "image/preprocessors",
    "output_node": false
  },
  "FreeU": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "b1": [
          "FLOAT",
          {
            "default": 1.1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.2,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "FreeU",
    "display_name": "FreeU",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "FreeU_V2": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "b1": [
          "FLOAT",
          {
            "default": 1.3,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.4,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "FreeU_V2",
    "display_name": "FreeU_V2",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "SamplerCustom": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "sampler": [
          "SAMPLER"
        ],
        "sigmas": [
          "SIGMAS"
        ],
        "latent_image": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "output",
      "denoised_output"
    ],
    "name": "SamplerCustom",
    "display_name": "SamplerCustom",
    "description": "",
    "category": "sampling/custom_sampling",
    "output_node": false
  },
  "BasicScheduler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "BasicScheduler",
    "display_name": "BasicScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "KarrasScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "rho": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "KarrasScheduler",
    "display_name": "KarrasScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "ExponentialScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "ExponentialScheduler",
    "display_name": "ExponentialScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "PolyexponentialScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "rho": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "PolyexponentialScheduler",
    "display_name": "PolyexponentialScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "VPScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "beta_d": [
          "FLOAT",
          {
            "default": 19.9,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "beta_min": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 5000,
            "step": 0.01,
            "round": false
          }
        ],
        "eps_s": [
          "FLOAT",
          {
            "default": 0.001,
            "min": 0,
            "max": 1,
            "step": 0.0001,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "VPScheduler",
    "display_name": "VPScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "SDTurboScheduler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "SDTurboScheduler",
    "display_name": "SDTurboScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "KSamplerSelect": {
    "input": {
      "required": {
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "KSamplerSelect",
    "display_name": "KSamplerSelect",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerEulerAncestral": {
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerEulerAncestral",
    "display_name": "SamplerEulerAncestral",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerLMS": {
    "input": {
      "required": {
        "order": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 100
          }
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerLMS",
    "display_name": "SamplerLMS",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_3M_SDE": {
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMPP_3M_SDE",
    "display_name": "SamplerDPMPP_3M_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_2M_SDE": {
    "input": {
      "required": {
        "solver_type": [
          [
            "midpoint",
            "heun"
          ]
        ],
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMPP_2M_SDE",
    "display_name": "SamplerDPMPP_2M_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_SDE": {
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "r": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMPP_SDE",
    "display_name": "SamplerDPMPP_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMAdaptative": {
    "input": {
      "required": {
        "order": [
          "INT",
          {
            "default": 3,
            "min": 2,
            "max": 3
          }
        ],
        "rtol": [
          "FLOAT",
          {
            "default": 0.05,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "atol": [
          "FLOAT",
          {
            "default": 0.0078,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "h_init": [
          "FLOAT",
          {
            "default": 0.05,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "pcoeff": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "icoeff": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "dcoeff": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "accept_safety": [
          "FLOAT",
          {
            "default": 0.81,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "eta": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMAdaptative",
    "display_name": "SamplerDPMAdaptative",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SplitSigmas": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ],
        "step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "SIGMAS",
      "SIGMAS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "high_sigmas",
      "low_sigmas"
    ],
    "name": "SplitSigmas",
    "display_name": "SplitSigmas",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "SplitSigmasDenoise": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SIGMAS",
      "SIGMAS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "high_sigmas",
      "low_sigmas"
    ],
    "name": "SplitSigmasDenoise",
    "display_name": "SplitSigmasDenoise",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "FlipSigmas": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "FlipSigmas",
    "display_name": "FlipSigmas",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "CFGGuider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [false],
    "output_name": [
      "GUIDER"
    ],
    "name": "CFGGuider",
    "display_name": "CFGGuider",
    "description": "",
    "category": "sampling/custom_sampling/guiders",
    "output_node": false
  },
  "DualCFGGuider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "cond1": [
          "CONDITIONING"
        ],
        "cond2": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "cfg_conds": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "cfg_cond2_negative": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [false],
    "output_name": [
      "GUIDER"
    ],
    "name": "DualCFGGuider",
    "display_name": "DualCFGGuider",
    "description": "",
    "category": "sampling/custom_sampling/guiders",
    "output_node": false
  },
  "BasicGuider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [false],
    "output_name": [
      "GUIDER"
    ],
    "name": "BasicGuider",
    "display_name": "BasicGuider",
    "description": "",
    "category": "sampling/custom_sampling/guiders",
    "output_node": false
  },
  "RandomNoise": {
    "input": {
      "required": {
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [false],
    "output_name": [
      "NOISE"
    ],
    "name": "RandomNoise",
    "display_name": "RandomNoise",
    "description": "",
    "category": "sampling/custom_sampling/noise",
    "output_node": false
  },
  "DisableNoise": {
    "input": {
      "required": {

      }
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [false],
    "output_name": [
      "NOISE"
    ],
    "name": "DisableNoise",
    "display_name": "DisableNoise",
    "description": "",
    "category": "sampling/custom_sampling/noise",
    "output_node": false
  },
  "AddNoise": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "noise": [
          "NOISE"
        ],
        "sigmas": [
          "SIGMAS"
        ],
        "latent_image": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "AddNoise",
    "display_name": "AddNoise",
    "description": "",
    "category": "_for_testing/custom_sampling/noise",
    "output_node": false
  },
  "SamplerCustomAdvanced": {
    "input": {
      "required": {
        "noise": [
          "NOISE"
        ],
        "guider": [
          "GUIDER"
        ],
        "sampler": [
          "SAMPLER"
        ],
        "sigmas": [
          "SIGMAS"
        ],
        "latent_image": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "output",
      "denoised_output"
    ],
    "name": "SamplerCustomAdvanced",
    "display_name": "SamplerCustomAdvanced",
    "description": "",
    "category": "sampling/custom_sampling",
    "output_node": false
  },
  "HyperTile": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "tile_size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 2048
          }
        ],
        "swap_size": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 128
          }
        ],
        "max_depth": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10
          }
        ],
        "scale_depth": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "HyperTile",
    "display_name": "HyperTile",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "ModelSamplingDiscrete": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          [
            "eps",
            "v_prediction",
            "lcm",
            "x0"
          ]
        ],
        "zsnr": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelSamplingDiscrete",
    "display_name": "ModelSamplingDiscrete",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "ModelSamplingContinuousEDM": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          [
            "v_prediction",
            "edm_playground_v2.5",
            "eps"
          ]
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 120,
            "min": 0,
            "max": 1000,
            "step": 0.001,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.002,
            "min": 0,
            "max": 1000,
            "step": 0.001,
            "round": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelSamplingContinuousEDM",
    "display_name": "ModelSamplingContinuousEDM",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "ModelSamplingStableCascade": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "shift": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelSamplingStableCascade",
    "display_name": "ModelSamplingStableCascade",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "RescaleCFG": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "RescaleCFG",
    "display_name": "RescaleCFG",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "PatchModelAddDownscale": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "block_number": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 32,
            "step": 1
          }
        ],
        "downscale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.1,
            "max": 9,
            "step": 0.001
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 0.35,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "downscale_after_skip": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "downscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ],
        "upscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "PatchModelAddDownscale",
    "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "ImageCrop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 16384,
            "step": 1
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCrop",
    "display_name": "ImageCrop",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "RepeatImageBatch": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "amount": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "RepeatImageBatch",
    "display_name": "RepeatImageBatch",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ImageFromBatch": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4095
          }
        ],
        "length": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFromBatch",
    "display_name": "ImageFromBatch",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "SaveAnimatedWEBP": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "default": 6,
            "min": 0.01,
            "max": 1000,
            "step": 0.01
          }
        ],
        "lossless": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "quality": [
          "INT",
          {
            "default": 80,
            "min": 0,
            "max": 100
          }
        ],
        "method": [
          [
            "default",
            "fastest",
            "slowest"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveAnimatedWEBP",
    "display_name": "SaveAnimatedWEBP",
    "description": "",
    "category": "image/animation",
    "output_node": true
  },
  "SaveAnimatedPNG": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "default": 6,
            "min": 0.01,
            "max": 1000,
            "step": 0.01
          }
        ],
        "compress_level": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 9
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveAnimatedPNG",
    "display_name": "SaveAnimatedPNG",
    "description": "",
    "category": "image/animation",
    "output_node": true
  },
  "ImageOnlyCheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "name": "ImageOnlyCheckpointLoader",
    "display_name": "Image Only Checkpoint Loader (img2vid model)",
    "description": "",
    "category": "loaders/video_models",
    "output_node": false
  },
  "SVD_img2vid_Conditioning": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "video_frames": [
          "INT",
          {
            "default": 14,
            "min": 1,
            "max": 4096
          }
        ],
        "motion_bucket_id": [
          "INT",
          {
            "default": 127,
            "min": 1,
            "max": 1023
          }
        ],
        "fps": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 1024
          }
        ],
        "augmentation_level": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SVD_img2vid_Conditioning",
    "display_name": "SVD_img2vid_Conditioning",
    "description": "",
    "category": "conditioning/video_models",
    "output_node": false
  },
  "VideoLinearCFGGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "min_cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "VideoLinearCFGGuidance",
    "display_name": "VideoLinearCFGGuidance",
    "description": "",
    "category": "sampling/video_models",
    "output_node": false
  },
  "VideoTriangleCFGGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "min_cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "VideoTriangleCFGGuidance",
    "display_name": "VideoTriangleCFGGuidance",
    "description": "",
    "category": "sampling/video_models",
    "output_node": false
  },
  "ImageOnlyCheckpointSave": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImageOnlyCheckpointSave",
    "display_name": "ImageOnlyCheckpointSave",
    "description": "",
    "category": "_for_testing",
    "output_node": true
  },
  "SelfAttentionGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scale": [
          "FLOAT",
          {
            "default": 0.5,
            "min": -2,
            "max": 5,
            "step": 0.1
          }
        ],
        "blur_sigma": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 10,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "SelfAttentionGuidance",
    "display_name": "Self-Attention Guidance",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "PerpNeg": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "empty_conditioning": [
          "CONDITIONING"
        ],
        "neg_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "PerpNeg",
    "display_name": "Perp-Neg (DEPRECATED by PerpNegGuider)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "PerpNegGuider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "empty_conditioning": [
          "CONDITIONING"
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "neg_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [false],
    "output_name": [
      "GUIDER"
    ],
    "name": "PerpNegGuider",
    "display_name": "PerpNegGuider",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "StableZero123_Conditioning": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ],
        "azimuth": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "StableZero123_Conditioning",
    "display_name": "StableZero123_Conditioning",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "StableZero123_Conditioning_Batched": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ],
        "azimuth": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ],
        "elevation_batch_increment": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ],
        "azimuth_batch_increment": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 0.1,
            "round": false
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "StableZero123_Conditioning_Batched",
    "display_name": "StableZero123_Conditioning_Batched",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "SV3D_Conditioning": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 16384,
            "step": 8
          }
        ],
        "video_frames": [
          "INT",
          {
            "default": 21,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0,
            "min": -90,
            "max": 90,
            "step": 0.1,
            "round": false
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SV3D_Conditioning",
    "display_name": "SV3D_Conditioning",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "SD_4XUpscale_Conditioning": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "scale_ratio": [
          "FLOAT",
          {
            "default": 4,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SD_4XUpscale_Conditioning",
    "display_name": "SD_4XUpscale_Conditioning",
    "description": "",
    "category": "conditioning/upscale_diffusion",
    "output_node": false
  },
  "PhotoMakerLoader": {
    "input": {
      "required": {
        "photomaker_model_name": [
          []
        ]
      }
    },
    "output": [
      "PHOTOMAKER"
    ],
    "output_is_list": [false],
    "output_name": [
      "PHOTOMAKER"
    ],
    "name": "PhotoMakerLoader",
    "display_name": "PhotoMakerLoader",
    "description": "",
    "category": "_for_testing/photomaker",
    "output_node": false
  },
  "PhotoMakerEncode": {
    "input": {
      "required": {
        "photomaker": [
          "PHOTOMAKER"
        ],
        "image": [
          "IMAGE"
        ],
        "clip": [
          "CLIP"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true,
            "default": "photograph of photomaker"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "PhotoMakerEncode",
    "display_name": "PhotoMakerEncode",
    "description": "",
    "category": "_for_testing/photomaker",
    "output_node": false
  },
  "CLIPTextEncodeControlnet": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "conditioning": [
          "CONDITIONING"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeControlnet",
    "display_name": "CLIPTextEncodeControlnet",
    "description": "",
    "category": "_for_testing/conditioning",
    "output_node": false
  },
  "Morphology": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "operation": [
          [
            "erode",
            "dilate",
            "open",
            "close",
            "gradient",
            "bottom_hat",
            "top_hat"
          ]
        ],
        "kernel_size": [
          "INT",
          {
            "default": 3,
            "min": 3,
            "max": 999,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Morphology",
    "display_name": "ImageMorphology",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "StableCascade_EmptyLatentImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 256,
            "max": 16384,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 256,
            "max": 16384,
            "step": 8
          }
        ],
        "compression": [
          "INT",
          {
            "default": 42,
            "min": 4,
            "max": 128,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "stage_c",
      "stage_b"
    ],
    "name": "StableCascade_EmptyLatentImage",
    "display_name": "StableCascade_EmptyLatentImage",
    "description": "",
    "category": "latent/stable_cascade",
    "output_node": false
  },
  "StableCascade_StageB_Conditioning": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "stage_c": [
          "LATENT"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "StableCascade_StageB_Conditioning",
    "display_name": "StableCascade_StageB_Conditioning",
    "description": "",
    "category": "conditioning/stable_cascade",
    "output_node": false
  },
  "StableCascade_StageC_VAEEncode": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "compression": [
          "INT",
          {
            "default": 42,
            "min": 4,
            "max": 128,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "stage_c",
      "stage_b"
    ],
    "name": "StableCascade_StageC_VAEEncode",
    "display_name": "StableCascade_StageC_VAEEncode",
    "description": "",
    "category": "latent/stable_cascade",
    "output_node": false
  },
  "StableCascade_SuperResolutionControlnet": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "controlnet_input",
      "stage_c",
      "stage_b"
    ],
    "name": "StableCascade_SuperResolutionControlnet",
    "display_name": "StableCascade_SuperResolutionControlnet",
    "description": "",
    "category": "_for_testing/stable_cascade",
    "output_node": false
  },
  "DifferentialDiffusion": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "DifferentialDiffusion",
    "display_name": "Differential Diffusion",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "InstructPixToPixConditioning": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "pixels": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "InstructPixToPixConditioning",
    "display_name": "InstructPixToPixConditioning",
    "description": "",
    "category": "conditioning/instructpix2pix",
    "output_node": false
  },
  "ModelMergeSD1": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSD1",
    "display_name": "ModelMergeSD1",
    "description": "",
    "category": "advanced/model_merging/model_specific",
    "output_node": false
  },
  "ModelMergeSD2": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSD2",
    "display_name": "ModelMergeSD2",
    "description": "",
    "category": "advanced/model_merging/model_specific",
    "output_node": false
  },
  "ModelMergeSDXL": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSDXL",
    "display_name": "ModelMergeSDXL",
    "description": "",
    "category": "advanced/model_merging/model_specific",
    "output_node": false
  },
  "PerturbedAttentionGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scale": [
          "FLOAT",
          {
            "default": 3,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "PerturbedAttentionGuidance",
    "display_name": "PerturbedAttentionGuidance",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "AlignYourStepsScheduler": {
    "input": {
      "required": {
        "model_type": [
          [
            "SD1",
            "SDXL",
            "SVD"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 10,
            "min": 10,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SIGMAS"
    ],
    "name": "AlignYourStepsScheduler",
    "display_name": "AlignYourStepsScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "UNetSelfAttentionMultiply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "UNetSelfAttentionMultiply",
    "display_name": "UNetSelfAttentionMultiply",
    "description": "",
    "category": "_for_testing/attention_experiments",
    "output_node": false
  },
  "UNetCrossAttentionMultiply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "UNetCrossAttentionMultiply",
    "display_name": "UNetCrossAttentionMultiply",
    "description": "",
    "category": "_for_testing/attention_experiments",
    "output_node": false
  },
  "CLIPAttentionMultiply": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPAttentionMultiply",
    "display_name": "CLIPAttentionMultiply",
    "description": "",
    "category": "_for_testing/attention_experiments",
    "output_node": false
  },
  "UNetTemporalAttentionMultiply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "self_structural": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "self_temporal": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "cross_structural": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "cross_temporal": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "UNetTemporalAttentionMultiply",
    "display_name": "UNetTemporalAttentionMultiply",
    "description": "",
    "category": "_for_testing/attention_experiments",
    "output_node": false
  },
  "SamplerLCMUpscale": {
    "input": {
      "required": {
        "scale_ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 20,
            "step": 0.01
          }
        ],
        "scale_steps": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 1000,
            "step": 1
          }
        ],
        "upscale_method": [
          [
            "bislerp",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerLCMUpscale",
    "display_name": "SamplerLCMUpscale",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "WebcamCapture": {
    "input": {
      "required": {
        "image": [
          "WEBCAM",
          {

          }
        ],
        "width": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 1
          }
        ],
        "capture_on_queue": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "WebcamCapture",
    "display_name": "Webcam Capture",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "Generation Parameter Input": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "image_width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 1024,
            "step": 8
          }
        ],
        "image_height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 1024,
            "step": 8
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 200
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 30,
            "step": 0.5
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "default": "dpmpp_2m"
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ],
          {
            "default": "karras"
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1
          }
        ]
      },
      "optional": {
        "parameters": [
          "PARAMETERS"
        ]
      }
    },
    "output": [
      "PARAMETERS"
    ],
    "output_is_list": [false],
    "output_name": [
      "parameters"
    ],
    "name": "Generation Parameter Input",
    "display_name": "Generation Parameter Input",
    "description": "",
    "category": "CFaceSwap",
    "output_node": false
  },
  "Generation Parameter Output": {
    "input": {
      "required": {
        "parameters": [
          "PARAMETERS"
        ]
      }
    },
    "output": [
      "PARAMETERS",
      "INT",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      [
        "euler",
        "euler_ancestral",
        "heun",
        "heunpp2",
        "dpm_2",
        "dpm_2_ancestral",
        "lms",
        "dpm_fast",
        "dpm_adaptive",
        "dpmpp_2s_ancestral",
        "dpmpp_sde",
        "dpmpp_sde_gpu",
        "dpmpp_2m",
        "dpmpp_2m_sde",
        "dpmpp_2m_sde_gpu",
        "dpmpp_3m_sde",
        "dpmpp_3m_sde_gpu",
        "ddpm",
        "lcm",
        "ddim",
        "uni_pc",
        "uni_pc_bh2"
      ],
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform"
      ],
      "FLOAT"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false, false],
    "output_name": [
      "parameters",
      "seed",
      "image_width",
      "image_height",
      "steps",
      "cfg",
      "sampler_name",
      "scheduler",
      "denoise"
    ],
    "name": "Generation Parameter Output",
    "display_name": "Generation Parameter Output",
    "description": "",
    "category": "CFaceSwap",
    "output_node": false
  },
  "Load RetinaFace": {
    "input": {
      "required": {

      }
    },
    "output": [
      "RETINAFACE"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Load RetinaFace",
    "display_name": "Load RetinaFace",
    "description": "",
    "category": "CFaceSwap",
    "output_node": false
  },
  "Load BiseNet": {
    "input": {
      "required": {

      }
    },
    "output": [
      "BISENET"
    ],
    "output_is_list": [false],
    "output_name": [
      "BISENET"
    ],
    "name": "Load BiseNet",
    "display_name": "Load BiseNet",
    "description": "",
    "category": "CFaceSwap",
    "output_node": false
  },
  "Uncrop Face": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "bbox": [
          "BBOX"
        ],
        "face": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Uncrop Face",
    "display_name": "Uncrop Face",
    "description": "",
    "category": "CFaceSwap",
    "output_node": false
  },
  "Crop Face": {
    "input": {
      "required": {
        "model": [
          "RETINAFACE"
        ],
        "image": [
          "IMAGE"
        ],
        "confidence": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 1
          }
        ],
        "margin": [
          "INT",
          {
            "default": 32
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "BBOX"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "face_image",
      "preview",
      "bbox"
    ],
    "name": "Crop Face",
    "display_name": "Crop Face",
    "description": "",
    "category": "CFaceSwap",
    "output_node": false
  },
  "Segment Face": {
    "input": {
      "required": {
        "model": [
          "BISENET"
        ],
        "image": [
          "IMAGE"
        ],
        "expand": [
          "INT",
          {
            "min": 0
          }
        ],
        "include_hair": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "disable"
          }
        ],
        "include_neck": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "disable"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "mask"
    ],
    "name": "Segment Face",
    "display_name": "Segment Face",
    "description": "",
    "category": "CFaceSwap",
    "output_node": false
  },
  "Image Full BBox": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "BBOX"
    ],
    "output_is_list": [false],
    "output_name": [
      "BBOX"
    ],
    "name": "Image Full BBox",
    "display_name": "Image Full BBox",
    "description": "",
    "category": "CFaceSwap",
    "output_node": false
  },
  "Color Blend": {
    "input": {
      "required": {
        "blend_image": [
          "IMAGE"
        ],
        "base_image": [
          "IMAGE"
        ],
        "mode": [
          [
            "Hue",
            "Saturation",
            "Color",
            "Luminosity"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Color Blend",
    "display_name": "Color Blend",
    "description": "",
    "category": "CFaceSwap",
    "output_node": false
  },
  "Exclude Facial Feature": {
    "input": {
      "required": {
        "face": [
          "IMAGE"
        ],
        "model": [
          "BISENET"
        ],
        "image": [
          "IMAGE"
        ],
        "expand": [
          "INT",
          {
            "min": 0
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Exclude Facial Feature",
    "display_name": "Exclude Facial Feature",
    "description": "",
    "category": "CFaceSwap",
    "output_node": false
  },
  "Mask Contour": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "Mask Contour",
    "display_name": "Mask Contour",
    "description": "",
    "category": "CFaceSwap",
    "output_node": false
  },
  "CM_BoolToInt": {
    "input": {
      "required": {
        "a": [
          "BOOL",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "CM_BoolToInt",
    "display_name": "BoolToInt",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_IntToBool": {
    "input": {
      "required": {
        "a": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_IntToBool",
    "display_name": "IntToBool",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_FloatToInt": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "CM_FloatToInt",
    "display_name": "FloatToInt",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_IntToFloat": {
    "input": {
      "required": {
        "a": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "CM_IntToFloat",
    "display_name": "IntToFloat",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_IntToNumber": {
    "input": {
      "required": {
        "a": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [false],
    "output_name": [
      "NUMBER"
    ],
    "name": "CM_IntToNumber",
    "display_name": "IntToNumber",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_NumberToInt": {
    "input": {
      "required": {
        "a": [
          "NUMBER",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "CM_NumberToInt",
    "display_name": "NumberToInt",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_FloatToNumber": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [false],
    "output_name": [
      "NUMBER"
    ],
    "name": "CM_FloatToNumber",
    "display_name": "FloatToNumber",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_NumberToFloat": {
    "input": {
      "required": {
        "a": [
          "NUMBER",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "CM_NumberToFloat",
    "display_name": "NumberToFloat",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_ComposeVec2": {
    "input": {
      "required": {
        "x": [
          "FLOAT",
          {
            "default": 0
          }
        ],
        "y": [
          "FLOAT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "VEC2"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC2"
    ],
    "name": "CM_ComposeVec2",
    "display_name": "ComposeVec2",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_ComposeVec3": {
    "input": {
      "required": {
        "x": [
          "FLOAT",
          {
            "default": 0
          }
        ],
        "y": [
          "FLOAT",
          {
            "default": 0
          }
        ],
        "z": [
          "FLOAT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "VEC3"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC3"
    ],
    "name": "CM_ComposeVec3",
    "display_name": "ComposeVec3",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_ComposeVec4": {
    "input": {
      "required": {
        "x": [
          "FLOAT",
          {
            "default": 0
          }
        ],
        "y": [
          "FLOAT",
          {
            "default": 0
          }
        ],
        "z": [
          "FLOAT",
          {
            "default": 0
          }
        ],
        "w": [
          "FLOAT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "VEC4"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC4"
    ],
    "name": "CM_ComposeVec4",
    "display_name": "ComposeVec4",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_BreakoutVec2": {
    "input": {
      "required": {
        "a": [
          "VEC2",
          {
            "default": [0, 0]
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "FLOAT",
      "FLOAT"
    ],
    "name": "CM_BreakoutVec2",
    "display_name": "BreakoutVec2",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_BreakoutVec3": {
    "input": {
      "required": {
        "a": [
          "VEC3",
          {
            "default": [0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "FLOAT",
      "FLOAT",
      "FLOAT"
    ],
    "name": "CM_BreakoutVec3",
    "display_name": "BreakoutVec3",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_BreakoutVec4": {
    "input": {
      "required": {
        "a": [
          "VEC4",
          {
            "default": [0, 0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT"
    ],
    "name": "CM_BreakoutVec4",
    "display_name": "BreakoutVec4",
    "description": "",
    "category": "math/conversion",
    "output_node": false
  },
  "CM_BoolUnaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Not"
          ]
        ],
        "a": [
          "BOOL",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_BoolUnaryOperation",
    "display_name": "BoolUnaryOperation",
    "description": "",
    "category": "math/bool",
    "output_node": false
  },
  "CM_BoolBinaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Nor",
            "Xor",
            "Nand",
            "And",
            "Xnor",
            "Or",
            "Eq",
            "Neq"
          ]
        ],
        "a": [
          "BOOL",
          {
            "default": false
          }
        ],
        "b": [
          "BOOL",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_BoolBinaryOperation",
    "display_name": "BoolBinaryOperation",
    "description": "",
    "category": "math/bool",
    "output_node": false
  },
  "CM_IntUnaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Abs",
            "Neg",
            "Inc",
            "Dec",
            "Sqr",
            "Cube",
            "Not",
            "Factorial"
          ]
        ],
        "a": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "CM_IntUnaryOperation",
    "display_name": "IntUnaryOperation",
    "description": "",
    "category": "math/int",
    "output_node": false
  },
  "CM_IntUnaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "IsZero",
            "IsNonZero",
            "IsPositive",
            "IsNegative",
            "IsEven",
            "IsOdd"
          ]
        ],
        "a": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_IntUnaryCondition",
    "display_name": "IntUnaryCondition",
    "description": "",
    "category": "math/int",
    "output_node": false
  },
  "CM_IntBinaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Add",
            "Sub",
            "Mul",
            "Div",
            "Mod",
            "Pow",
            "And",
            "Nand",
            "Or",
            "Nor",
            "Xor",
            "Xnor",
            "Shl",
            "Shr",
            "Max",
            "Min"
          ]
        ],
        "a": [
          "INT",
          {
            "default": 0
          }
        ],
        "b": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "CM_IntBinaryOperation",
    "display_name": "IntBinaryOperation",
    "description": "",
    "category": "math/int",
    "output_node": false
  },
  "CM_IntBinaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "Eq",
            "Neq",
            "Gt",
            "Lt",
            "Geq",
            "Leq"
          ]
        ],
        "a": [
          "INT",
          {
            "default": 0
          }
        ],
        "b": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_IntBinaryCondition",
    "display_name": "IntBinaryCondition",
    "description": "",
    "category": "math/int",
    "output_node": false
  },
  "CM_FloatUnaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Neg",
            "Inc",
            "Dec",
            "Abs",
            "Sqr",
            "Cube",
            "Sqrt",
            "Exp",
            "Ln",
            "Log10",
            "Log2",
            "Sin",
            "Cos",
            "Tan",
            "Asin",
            "Acos",
            "Atan",
            "Sinh",
            "Cosh",
            "Tanh",
            "Asinh",
            "Acosh",
            "Atanh",
            "Round",
            "Floor",
            "Ceil",
            "Trunc",
            "Erf",
            "Erfc",
            "Gamma",
            "Radians",
            "Degrees"
          ]
        ],
        "a": [
          "FLOAT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "CM_FloatUnaryOperation",
    "display_name": "FloatUnaryOperation",
    "description": "",
    "category": "math/float",
    "output_node": false
  },
  "CM_FloatUnaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "IsZero",
            "IsPositive",
            "IsNegative",
            "IsNonZero",
            "IsPositiveInfinity",
            "IsNegativeInfinity",
            "IsNaN",
            "IsFinite",
            "IsInfinite",
            "IsEven",
            "IsOdd"
          ]
        ],
        "a": [
          "FLOAT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_FloatUnaryCondition",
    "display_name": "FloatUnaryCondition",
    "description": "",
    "category": "math/float",
    "output_node": false
  },
  "CM_FloatBinaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Add",
            "Sub",
            "Mul",
            "Div",
            "Mod",
            "Pow",
            "FloorDiv",
            "Max",
            "Min",
            "Log",
            "Atan2"
          ]
        ],
        "a": [
          "FLOAT",
          {
            "default": 0
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "CM_FloatBinaryOperation",
    "display_name": "FloatBinaryOperation",
    "description": "",
    "category": "math/float",
    "output_node": false
  },
  "CM_FloatBinaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "Eq",
            "Neq",
            "Gt",
            "Gte",
            "Lt",
            "Lte"
          ]
        ],
        "a": [
          "FLOAT",
          {
            "default": 0
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_FloatBinaryCondition",
    "display_name": "FloatBinaryCondition",
    "description": "",
    "category": "math/float",
    "output_node": false
  },
  "CM_NumberUnaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Neg",
            "Inc",
            "Dec",
            "Abs",
            "Sqr",
            "Cube",
            "Sqrt",
            "Exp",
            "Ln",
            "Log10",
            "Log2",
            "Sin",
            "Cos",
            "Tan",
            "Asin",
            "Acos",
            "Atan",
            "Sinh",
            "Cosh",
            "Tanh",
            "Asinh",
            "Acosh",
            "Atanh",
            "Round",
            "Floor",
            "Ceil",
            "Trunc",
            "Erf",
            "Erfc",
            "Gamma",
            "Radians",
            "Degrees"
          ]
        ],
        "a": [
          "NUMBER",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [false],
    "output_name": [
      "NUMBER"
    ],
    "name": "CM_NumberUnaryOperation",
    "display_name": "NumberUnaryOperation",
    "description": "",
    "category": "math/number",
    "output_node": false
  },
  "CM_NumberUnaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "IsZero",
            "IsPositive",
            "IsNegative",
            "IsNonZero",
            "IsPositiveInfinity",
            "IsNegativeInfinity",
            "IsNaN",
            "IsFinite",
            "IsInfinite",
            "IsEven",
            "IsOdd"
          ]
        ],
        "a": [
          "NUMBER",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_NumberUnaryCondition",
    "display_name": "NumberUnaryCondition",
    "description": "",
    "category": "math/number",
    "output_node": false
  },
  "CM_NumberBinaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Add",
            "Sub",
            "Mul",
            "Div",
            "Mod",
            "Pow",
            "FloorDiv",
            "Max",
            "Min",
            "Log",
            "Atan2"
          ]
        ],
        "a": [
          "NUMBER",
          {
            "default": 0
          }
        ],
        "b": [
          "NUMBER",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [false],
    "output_name": [
      "NUMBER"
    ],
    "name": "CM_NumberBinaryOperation",
    "display_name": "NumberBinaryOperation",
    "description": "",
    "category": "math/number",
    "output_node": false
  },
  "CM_NumberBinaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "Eq",
            "Neq",
            "Gt",
            "Gte",
            "Lt",
            "Lte"
          ]
        ],
        "a": [
          "NUMBER",
          {
            "default": 0
          }
        ],
        "b": [
          "NUMBER",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_NumberBinaryCondition",
    "display_name": "NumberBinaryCondition",
    "description": "",
    "category": "math/float",
    "output_node": false
  },
  "CM_Vec2UnaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Neg",
            "Normalize"
          ]
        ],
        "a": [
          "VEC2",
          {
            "default": [0, 0]
          }
        ]
      }
    },
    "output": [
      "VEC2"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC2"
    ],
    "name": "CM_Vec2UnaryOperation",
    "display_name": "Vec2UnaryOperation",
    "description": "",
    "category": "math/vec2",
    "output_node": false
  },
  "CM_Vec2UnaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "IsZero",
            "IsNotZero",
            "IsNormalized",
            "IsNotNormalized"
          ]
        ],
        "a": [
          "VEC2",
          {
            "default": [0, 0]
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_Vec2UnaryCondition",
    "display_name": "Vec2UnaryCondition",
    "description": "",
    "category": "math/vec2",
    "output_node": false
  },
  "CM_Vec2ToScalarUnaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Norm"
          ]
        ],
        "a": [
          "VEC2",
          {
            "default": [0, 0]
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "CM_Vec2ToScalarUnaryOperation",
    "display_name": "Vec2ToScalarUnaryOperation",
    "description": "",
    "category": "math/vec2",
    "output_node": false
  },
  "CM_Vec2BinaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Add",
            "Sub",
            "Cross"
          ]
        ],
        "a": [
          "VEC2",
          {
            "default": [0, 0]
          }
        ],
        "b": [
          "VEC2",
          {
            "default": [0, 0]
          }
        ]
      }
    },
    "output": [
      "VEC2"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC2"
    ],
    "name": "CM_Vec2BinaryOperation",
    "display_name": "Vec2BinaryOperation",
    "description": "",
    "category": "math/vec2",
    "output_node": false
  },
  "CM_Vec2BinaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "Eq",
            "Neq"
          ]
        ],
        "a": [
          "VEC2",
          {
            "default": [0, 0]
          }
        ],
        "b": [
          "VEC2",
          {
            "default": [0, 0]
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_Vec2BinaryCondition",
    "display_name": "Vec2BinaryCondition",
    "description": "",
    "category": "math/vec2",
    "output_node": false
  },
  "CM_Vec2ToScalarBinaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Dot",
            "Distance"
          ]
        ],
        "a": [
          "VEC2",
          {
            "default": [0, 0]
          }
        ],
        "b": [
          "VEC2",
          {
            "default": [0, 0]
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "CM_Vec2ToScalarBinaryOperation",
    "display_name": "Vec2ToScalarBinaryOperation",
    "description": "",
    "category": "math/vec2",
    "output_node": false
  },
  "CM_Vec2ScalarOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Mul",
            "Div"
          ]
        ],
        "a": [
          "VEC2",
          {
            "default": [0, 0]
          }
        ],
        "b": [
          "FLOAT"
        ]
      }
    },
    "output": [
      "VEC2"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC2"
    ],
    "name": "CM_Vec2ScalarOperation",
    "display_name": "Vec2ScalarOperation",
    "description": "",
    "category": "math/vec2",
    "output_node": false
  },
  "CM_Vec3UnaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Neg",
            "Normalize"
          ]
        ],
        "a": [
          "VEC3",
          {
            "default": [0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "VEC3"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC3"
    ],
    "name": "CM_Vec3UnaryOperation",
    "display_name": "Vec3UnaryOperation",
    "description": "",
    "category": "math/vec3",
    "output_node": false
  },
  "CM_Vec3UnaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "IsZero",
            "IsNotZero",
            "IsNormalized",
            "IsNotNormalized"
          ]
        ],
        "a": [
          "VEC3",
          {
            "default": [0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_Vec3UnaryCondition",
    "display_name": "Vec3UnaryCondition",
    "description": "",
    "category": "math/vec3",
    "output_node": false
  },
  "CM_Vec3ToScalarUnaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Norm"
          ]
        ],
        "a": [
          "VEC3",
          {
            "default": [0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "CM_Vec3ToScalarUnaryOperation",
    "display_name": "Vec3ToScalarUnaryOperation",
    "description": "",
    "category": "math/vec3",
    "output_node": false
  },
  "CM_Vec3BinaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Add",
            "Sub",
            "Cross"
          ]
        ],
        "a": [
          "VEC3",
          {
            "default": [0, 0, 0]
          }
        ],
        "b": [
          "VEC3",
          {
            "default": [0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "VEC3"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC3"
    ],
    "name": "CM_Vec3BinaryOperation",
    "display_name": "Vec3BinaryOperation",
    "description": "",
    "category": "math/vec3",
    "output_node": false
  },
  "CM_Vec3BinaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "Eq",
            "Neq"
          ]
        ],
        "a": [
          "VEC3",
          {
            "default": [0, 0, 0]
          }
        ],
        "b": [
          "VEC3",
          {
            "default": [0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_Vec3BinaryCondition",
    "display_name": "Vec3BinaryCondition",
    "description": "",
    "category": "math/vec3",
    "output_node": false
  },
  "CM_Vec3ToScalarBinaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Dot",
            "Distance"
          ]
        ],
        "a": [
          "VEC3",
          {
            "default": [0, 0, 0]
          }
        ],
        "b": [
          "VEC3",
          {
            "default": [0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "CM_Vec3ToScalarBinaryOperation",
    "display_name": "Vec3ToScalarBinaryOperation",
    "description": "",
    "category": "math/vec3",
    "output_node": false
  },
  "CM_Vec3ScalarOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Mul",
            "Div"
          ]
        ],
        "a": [
          "VEC3",
          {
            "default": [0, 0, 0]
          }
        ],
        "b": [
          "FLOAT"
        ]
      }
    },
    "output": [
      "VEC3"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC3"
    ],
    "name": "CM_Vec3ScalarOperation",
    "display_name": "Vec3ScalarOperation",
    "description": "",
    "category": "math/vec3",
    "output_node": false
  },
  "CM_Vec4UnaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Neg",
            "Normalize"
          ]
        ],
        "a": [
          "VEC4",
          {
            "default": [0, 0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "VEC4"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC4"
    ],
    "name": "CM_Vec4UnaryOperation",
    "display_name": "Vec4UnaryOperation",
    "description": "",
    "category": "math/vec4",
    "output_node": false
  },
  "CM_Vec4UnaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "IsZero",
            "IsNotZero",
            "IsNormalized",
            "IsNotNormalized"
          ]
        ],
        "a": [
          "VEC4",
          {
            "default": [0, 0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_Vec4UnaryCondition",
    "display_name": "Vec4UnaryCondition",
    "description": "",
    "category": "math/vec4",
    "output_node": false
  },
  "CM_Vec4ToScalarUnaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Norm"
          ]
        ],
        "a": [
          "VEC4",
          {
            "default": [0, 0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "CM_Vec4ToScalarUnaryOperation",
    "display_name": "Vec4ToScalarUnaryOperation",
    "description": "",
    "category": "math/vec4",
    "output_node": false
  },
  "CM_Vec4BinaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Add",
            "Sub",
            "Cross"
          ]
        ],
        "a": [
          "VEC4",
          {
            "default": [0, 0, 0, 0]
          }
        ],
        "b": [
          "VEC4",
          {
            "default": [0, 0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "VEC4"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC4"
    ],
    "name": "CM_Vec4BinaryOperation",
    "display_name": "Vec4BinaryOperation",
    "description": "",
    "category": "math/vec4",
    "output_node": false
  },
  "CM_Vec4BinaryCondition": {
    "input": {
      "required": {
        "op": [
          [
            "Eq",
            "Neq"
          ]
        ],
        "a": [
          "VEC4",
          {
            "default": [0, 0, 0, 0]
          }
        ],
        "b": [
          "VEC4",
          {
            "default": [0, 0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "BOOL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOL"
    ],
    "name": "CM_Vec4BinaryCondition",
    "display_name": "Vec4BinaryCondition",
    "description": "",
    "category": "math/vec4",
    "output_node": false
  },
  "CM_Vec4ToScalarBinaryOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Dot",
            "Distance"
          ]
        ],
        "a": [
          "VEC4",
          {
            "default": [0, 0, 0, 0]
          }
        ],
        "b": [
          "VEC4",
          {
            "default": [0, 0, 0, 0]
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "CM_Vec4ToScalarBinaryOperation",
    "display_name": "Vec4ToScalarBinaryOperation",
    "description": "",
    "category": "math/vec4",
    "output_node": false
  },
  "CM_Vec4ScalarOperation": {
    "input": {
      "required": {
        "op": [
          [
            "Mul",
            "Div"
          ]
        ],
        "a": [
          "VEC4",
          {
            "default": [0, 0, 0, 0]
          }
        ],
        "b": [
          "FLOAT"
        ]
      }
    },
    "output": [
      "VEC4"
    ],
    "output_is_list": [false],
    "output_name": [
      "VEC4"
    ],
    "name": "CM_Vec4ScalarOperation",
    "display_name": "Vec4ScalarOperation",
    "description": "",
    "category": "math/vec4",
    "output_node": false
  },
  "CM_SDXLResolution": {
    "input": {
      "required": {
        "resolution": [
          [
            "1024x1024",
            "1152x896",
            "896x1152",
            "1216x832",
            "832x1216",
            "1344x768",
            "768x1344",
            "1536x640",
            "640x1536"
          ]
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "width",
      "height"
    ],
    "name": "CM_SDXLResolution",
    "display_name": "SDXLResolution",
    "description": "",
    "category": "math/graphics",
    "output_node": false
  },
  "CM_NearestSDXLResolution": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "width",
      "height"
    ],
    "name": "CM_NearestSDXLResolution",
    "display_name": "NearestSDXLResolution",
    "description": "",
    "category": "math/graphics",
    "output_node": false
  },
  "TimestepKeyframe": {
    "input": {
      "required": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_timestep_kf": [
          "TIMESTEP_KEYFRAME"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "cn_weights": [
          "CONTROL_NET_WEIGHTS"
        ],
        "latent_keyframe": [
          "LATENT_KEYFRAME"
        ],
        "null_latent_kf_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "inherit_missing": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "guarantee_steps": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9007199254740991
          }
        ],
        "mask_optional": [
          "MASK"
        ]
      }
    },
    "output": [
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "TIMESTEP_KF"
    ],
    "name": "TimestepKeyframe",
    "display_name": "Timestep Keyframe 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "ACN_TimestepKeyframeInterpolation": {
    "input": {
      "required": {
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "strength_start": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "strength_end": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease-in",
            "ease-out",
            "ease-in-out"
          ]
        ],
        "intervals": [
          "INT",
          {
            "default": 50,
            "min": 2,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {
        "prev_timestep_kf": [
          "TIMESTEP_KEYFRAME"
        ],
        "cn_weights": [
          "CONTROL_NET_WEIGHTS"
        ],
        "latent_keyframe": [
          "LATENT_KEYFRAME"
        ],
        "null_latent_kf_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "inherit_missing": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "mask_optional": [
          "MASK"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "TIMESTEP_KF"
    ],
    "name": "ACN_TimestepKeyframeInterpolation",
    "display_name": "Timestep Keyframe Interpolation 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "ACN_TimestepKeyframeFromStrengthList": {
    "input": {
      "required": {
        "float_strengths": [
          "FLOAT",
          {
            "default": -1,
            "min": -1,
            "step": 0.001,
            "forceInput": true
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_timestep_kf": [
          "TIMESTEP_KEYFRAME"
        ],
        "cn_weights": [
          "CONTROL_NET_WEIGHTS"
        ],
        "latent_keyframe": [
          "LATENT_KEYFRAME"
        ],
        "null_latent_kf_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "inherit_missing": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "mask_optional": [
          "MASK"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "TIMESTEP_KF"
    ],
    "name": "ACN_TimestepKeyframeFromStrengthList",
    "display_name": "Timestep Keyframe From List 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "LatentKeyframe": {
    "input": {
      "required": {
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframe",
    "display_name": "Latent Keyframe 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "LatentKeyframeTiming": {
    "input": {
      "required": {
        "batch_index_from": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "batch_index_to_excl": [
          "INT",
          {
            "default": 0,
            "min": -9007199254740991,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "strength_from": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "strength_to": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "interpolation": [
          [
            "linear",
            "ease-in",
            "ease-out",
            "ease-in-out"
          ]
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframeTiming",
    "display_name": "Latent Keyframe Interpolation 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "LatentKeyframeBatchedGroup": {
    "input": {
      "required": {
        "float_strengths": [
          "FLOAT",
          {
            "default": -1,
            "min": -1,
            "step": 0.001,
            "forceInput": true
          }
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframeBatchedGroup",
    "display_name": "Latent Keyframe From List 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "LatentKeyframeGroup": {
    "input": {
      "required": {
        "index_strengths": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      },
      "optional": {
        "prev_latent_kf": [
          "LATENT_KEYFRAME"
        ],
        "latent_optional": [
          "LATENT"
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "LATENT_KEYFRAME"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT_KF"
    ],
    "name": "LatentKeyframeGroup",
    "display_name": "Latent Keyframe Group 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
    "output_node": false
  },
  "ACN_AdvancedControlNetApply": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask_optional": [
          "MASK"
        ],
        "timestep_kf": [
          "TIMESTEP_KEYFRAME"
        ],
        "latent_kf_override": [
          "LATENT_KEYFRAME"
        ],
        "weights_override": [
          "CONTROL_NET_WEIGHTS"
        ],
        "model_optional": [
          "MODEL"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "MODEL"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "positive",
      "negative",
      "model_opt"
    ],
    "name": "ACN_AdvancedControlNetApply",
    "display_name": "Apply Advanced ControlNet 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝",
    "output_node": false
  },
  "ControlNetLoaderAdvanced": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "control_v11f1p_sd15_depth.pth",
            "control_v11p_sd15_lineart.pth",
            "depth-sdxl/diffusion_pytorch_model.fp16.safetensors",
            "depth/control_v11f1p_sd15_depth.pth",
            "depth/diffusion_pytorch_model.safetensors",
            "diffusion_pytorch_model.safetensors",
            "instantIDSDXL_ipAdapterInstantId.bin",
            "instantid/diffusion_pytorch_model.safetensors",
            "instantid/ip-adapter.bin",
            "lineart/control_v11p_sd15_lineart.pth",
            "lineart/diffusion_pytorch_model.safetensors",
            "stable_cascade_canny.safetensors",
            "stable_cascade_inpainting.safetensors",
            "stable_cascade_super_resolution.safetensors",
            "t2i-adapter-lineart-sdxl-1.0/diffusion_pytorch_model.safetensors",
            "t2iadapter_depth_sd15v2/diffusion_pytorch_model.bin"
          ]
        ]
      },
      "optional": {
        "timestep_keyframe": [
          "TIMESTEP_KEYFRAME"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ControlNetLoaderAdvanced",
    "display_name": "Load Advanced ControlNet Model 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝",
    "output_node": false
  },
  "DiffControlNetLoaderAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "control_net_name": [
          [
            "control_v11f1p_sd15_depth.pth",
            "control_v11p_sd15_lineart.pth",
            "depth-sdxl/diffusion_pytorch_model.fp16.safetensors",
            "depth/control_v11f1p_sd15_depth.pth",
            "depth/diffusion_pytorch_model.safetensors",
            "diffusion_pytorch_model.safetensors",
            "instantIDSDXL_ipAdapterInstantId.bin",
            "instantid/diffusion_pytorch_model.safetensors",
            "instantid/ip-adapter.bin",
            "lineart/control_v11p_sd15_lineart.pth",
            "lineart/diffusion_pytorch_model.safetensors",
            "stable_cascade_canny.safetensors",
            "stable_cascade_inpainting.safetensors",
            "stable_cascade_super_resolution.safetensors",
            "t2i-adapter-lineart-sdxl-1.0/diffusion_pytorch_model.safetensors",
            "t2iadapter_depth_sd15v2/diffusion_pytorch_model.bin"
          ]
        ]
      },
      "optional": {
        "timestep_keyframe": [
          "TIMESTEP_KEYFRAME"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "DiffControlNetLoaderAdvanced",
    "display_name": "Load Advanced ControlNet Model (diff) 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝",
    "output_node": false
  },
  "ScaledSoftControlNetWeights": {
    "input": {
      "required": {
        "base_multiplier": [
          "FLOAT",
          {
            "default": 0.825,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "ScaledSoftControlNetWeights",
    "display_name": "Scaled Soft Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights",
    "output_node": false
  },
  "ScaledSoftMaskedUniversalWeights": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "min_base_multiplier": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "max_base_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "ScaledSoftMaskedUniversalWeights",
    "display_name": "Scaled Soft Masked Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights",
    "output_node": false
  },
  "SoftControlNetWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 0.0994139620633712,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 0.120501772198026,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 0.146062754179425,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 0.177045762641727,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_04": [
          "FLOAT",
          {
            "default": 0.214600924414215,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_05": [
          "FLOAT",
          {
            "default": 0.260122332623291,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_06": [
          "FLOAT",
          {
            "default": 0.315299797119141,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_07": [
          "FLOAT",
          {
            "default": 0.382181572265625,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_08": [
          "FLOAT",
          {
            "default": 0.463250390625,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_09": [
          "FLOAT",
          {
            "default": 0.561515625,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_10": [
          "FLOAT",
          {
            "default": 0.680625,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_11": [
          "FLOAT",
          {
            "default": 0.825,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_12": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "SoftControlNetWeights",
    "display_name": "ControlNet Soft Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights/ControlNet",
    "output_node": false
  },
  "CustomControlNetWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_04": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_05": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_06": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_07": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_08": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_09": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_10": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_11": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_12": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "CustomControlNetWeights",
    "display_name": "ControlNet Custom Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights/ControlNet",
    "output_node": false
  },
  "SoftT2IAdapterWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 0.62,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 0.825,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "SoftT2IAdapterWeights",
    "display_name": "T2IAdapter Soft Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights/T2IAdapter",
    "output_node": false
  },
  "CustomT2IAdapterWeights": {
    "input": {
      "required": {
        "weight_00": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_01": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_02": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "weight_03": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "flip_weights": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "uncond_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "CustomT2IAdapterWeights",
    "display_name": "T2IAdapter Custom Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights/T2IAdapter",
    "output_node": false
  },
  "ACN_DefaultUniversalWeights": {
    "input": {
      "optional": {
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ]
      }
    },
    "output": [
      "CONTROL_NET_WEIGHTS",
      "TIMESTEP_KEYFRAME"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CN_WEIGHTS",
      "TK_SHORTCUT"
    ],
    "name": "ACN_DefaultUniversalWeights",
    "display_name": "Default Weights 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/weights",
    "output_node": false
  },
  "ACN_SparseCtrlRGBPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "latent_size": [
          "LATENT"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "proc_IMAGE"
    ],
    "name": "ACN_SparseCtrlRGBPreprocessor",
    "display_name": "RGB SparseCtrl 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/preprocess",
    "output_node": false
  },
  "ACN_SparseCtrlLoaderAdvanced": {
    "input": {
      "required": {
        "sparsectrl_name": [
          [
            "control_v11f1p_sd15_depth.pth",
            "control_v11p_sd15_lineart.pth",
            "depth-sdxl/diffusion_pytorch_model.fp16.safetensors",
            "depth/control_v11f1p_sd15_depth.pth",
            "depth/diffusion_pytorch_model.safetensors",
            "diffusion_pytorch_model.safetensors",
            "instantIDSDXL_ipAdapterInstantId.bin",
            "instantid/diffusion_pytorch_model.safetensors",
            "instantid/ip-adapter.bin",
            "lineart/control_v11p_sd15_lineart.pth",
            "lineart/diffusion_pytorch_model.safetensors",
            "stable_cascade_canny.safetensors",
            "stable_cascade_inpainting.safetensors",
            "stable_cascade_super_resolution.safetensors",
            "t2i-adapter-lineart-sdxl-1.0/diffusion_pytorch_model.safetensors",
            "t2iadapter_depth_sd15v2/diffusion_pytorch_model.bin"
          ]
        ],
        "use_motion": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "motion_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "sparse_method": [
          "SPARSE_METHOD"
        ],
        "tk_optional": [
          "TIMESTEP_KEYFRAME"
        ],
        "context_aware": [
          [
            "nearest_hint",
            "off"
          ]
        ],
        "sparse_hint_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "sparse_nonhint_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "sparse_mask_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_SparseCtrlLoaderAdvanced",
    "display_name": "Load SparseCtrl Model 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl",
    "output_node": false
  },
  "ACN_SparseCtrlMergedLoaderAdvanced": {
    "input": {
      "required": {
        "sparsectrl_name": [
          [
            "control_v11f1p_sd15_depth.pth",
            "control_v11p_sd15_lineart.pth",
            "depth-sdxl/diffusion_pytorch_model.fp16.safetensors",
            "depth/control_v11f1p_sd15_depth.pth",
            "depth/diffusion_pytorch_model.safetensors",
            "diffusion_pytorch_model.safetensors",
            "instantIDSDXL_ipAdapterInstantId.bin",
            "instantid/diffusion_pytorch_model.safetensors",
            "instantid/ip-adapter.bin",
            "lineart/control_v11p_sd15_lineart.pth",
            "lineart/diffusion_pytorch_model.safetensors",
            "stable_cascade_canny.safetensors",
            "stable_cascade_inpainting.safetensors",
            "stable_cascade_super_resolution.safetensors",
            "t2i-adapter-lineart-sdxl-1.0/diffusion_pytorch_model.safetensors",
            "t2iadapter_depth_sd15v2/diffusion_pytorch_model.bin"
          ]
        ],
        "control_net_name": [
          [
            "control_v11f1p_sd15_depth.pth",
            "control_v11p_sd15_lineart.pth",
            "depth-sdxl/diffusion_pytorch_model.fp16.safetensors",
            "depth/control_v11f1p_sd15_depth.pth",
            "depth/diffusion_pytorch_model.safetensors",
            "diffusion_pytorch_model.safetensors",
            "instantIDSDXL_ipAdapterInstantId.bin",
            "instantid/diffusion_pytorch_model.safetensors",
            "instantid/ip-adapter.bin",
            "lineart/control_v11p_sd15_lineart.pth",
            "lineart/diffusion_pytorch_model.safetensors",
            "stable_cascade_canny.safetensors",
            "stable_cascade_inpainting.safetensors",
            "stable_cascade_super_resolution.safetensors",
            "t2i-adapter-lineart-sdxl-1.0/diffusion_pytorch_model.safetensors",
            "t2iadapter_depth_sd15v2/diffusion_pytorch_model.bin"
          ]
        ],
        "use_motion": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "motion_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "motion_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "sparse_method": [
          "SPARSE_METHOD"
        ],
        "tk_optional": [
          "TIMESTEP_KEYFRAME"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_SparseCtrlMergedLoaderAdvanced",
    "display_name": "🧪Load Merged SparseCtrl Model 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/experimental",
    "output_node": false
  },
  "ACN_SparseCtrlIndexMethodNode": {
    "input": {
      "required": {
        "indexes": [
          "STRING",
          {
            "default": "0"
          }
        ]
      }
    },
    "output": [
      "SPARSE_METHOD"
    ],
    "output_is_list": [false],
    "output_name": [
      "SPARSE_METHOD"
    ],
    "name": "ACN_SparseCtrlIndexMethodNode",
    "display_name": "SparseCtrl Index Method 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl",
    "output_node": false
  },
  "ACN_SparseCtrlSpreadMethodNode": {
    "input": {
      "required": {
        "spread": [
          [
            "uniform",
            "starting",
            "ending",
            "center"
          ]
        ]
      }
    },
    "output": [
      "SPARSE_METHOD"
    ],
    "output_is_list": [false],
    "output_name": [
      "SPARSE_METHOD"
    ],
    "name": "ACN_SparseCtrlSpreadMethodNode",
    "display_name": "SparseCtrl Spread Method 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl",
    "output_node": false
  },
  "ACN_SparseCtrlWeightExtras": {
    "input": {
      "optional": {
        "cn_extras": [
          "CN_WEIGHTS_EXTRAS"
        ],
        "sparse_hint_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "sparse_nonhint_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ],
        "sparse_mask_mult": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CN_WEIGHTS_EXTRAS"
    ],
    "output_is_list": [false],
    "output_name": [
      "cn_extras"
    ],
    "name": "ACN_SparseCtrlWeightExtras",
    "display_name": "SparseCtrl Weight Extras 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/extras",
    "output_node": false
  },
  "ACN_ReferencePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "latent_size": [
          "LATENT"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "proc_IMAGE"
    ],
    "name": "ACN_ReferencePreprocessor",
    "display_name": "Reference Preproccessor 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/Reference/preprocess",
    "output_node": false
  },
  "ACN_ReferenceControlNet": {
    "input": {
      "required": {
        "reference_type": [
          [
            "reference_attn",
            "reference_adain",
            "reference_attn+adain"
          ]
        ],
        "style_fidelity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "ref_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_ReferenceControlNet",
    "display_name": "Reference ControlNet 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/Reference",
    "output_node": false
  },
  "ACN_ReferenceControlNetFinetune": {
    "input": {
      "required": {
        "attn_style_fidelity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "attn_ref_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "attn_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "adain_style_fidelity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "adain_ref_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "adain_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ACN_ReferenceControlNetFinetune",
    "display_name": "Reference ControlNet (Finetune) 🛂🅐🅒🅝",
    "description": "",
    "category": "Adv-ControlNet 🛂🅐🅒🅝/Reference",
    "output_node": false
  },
  "LoadImagesFromDirectory": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9007199254740991,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "LoadImagesFromDirectory",
    "display_name": "🚫Load Images [DEPRECATED] 🛂🅐🅒🅝",
    "description": "",
    "category": "",
    "output_node": false
  },
  "AlphaChanelAdd": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AlphaChanelAdd",
    "display_name": "AlphaChanelAdd",
    "description": "",
    "category": "image/alpha",
    "output_node": false
  },
  "AlphaChanelAddByMask": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "method": [
          [
            "default",
            "invert"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AlphaChanelAddByMask",
    "display_name": "AlphaChanelAddByMask",
    "description": "",
    "category": "image/alpha",
    "output_node": false
  },
  "AlphaChanelAsMask": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "method": [
          [
            "default",
            "invert"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "AlphaChanelAsMask",
    "display_name": "AlphaChanelAsMask",
    "description": "",
    "category": "image/alpha",
    "output_node": false
  },
  "AlphaChanelRestore": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AlphaChanelRestore",
    "display_name": "AlphaChanelRestore",
    "description": "",
    "category": "image/alpha",
    "output_node": false
  },
  "AlphaChanelRemove": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AlphaChanelRemove",
    "display_name": "AlphaChanelRemove",
    "description": "",
    "category": "image/alpha",
    "output_node": false
  },
  "ClipClamp": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "ClipClamp",
    "display_name": "ClipClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "ClipVisionClamp": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP_VISION"
    ],
    "name": "ClipVisionClamp",
    "display_name": "ClipVisionClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "ClipVisionOutputClamp": {
    "input": {
      "required": {
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ]
      }
    },
    "output": [
      "CLIP_VISION_OUTPUT"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP_VISION_OUTPUT"
    ],
    "name": "ClipVisionOutputClamp",
    "display_name": "ClipVisionOutputClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "ConditioningClamp": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningClamp",
    "display_name": "ConditioningClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "ControlNetClamp": {
    "input": {
      "required": {
        "control_net_clamp": [
          "CONTROL_NET"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ControlNetClamp",
    "display_name": "ControlNetClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "GligenClamp": {
    "input": {
      "required": {
        "gligen": [
          "GLIGEN"
        ]
      }
    },
    "output": [
      "GLIGEN"
    ],
    "output_is_list": [false],
    "output_name": [
      "GLIGEN"
    ],
    "name": "GligenClamp",
    "display_name": "GligenClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "ImageClamp": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageClamp",
    "display_name": "ImageClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "LatentClamp": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentClamp",
    "display_name": "LatentClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "MaskClamp": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "MaskClamp",
    "display_name": "MaskClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "ModelClamp": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelClamp",
    "display_name": "ModelClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "StyleModelClamp": {
    "input": {
      "required": {
        "style_model": [
          "STYLE_MODEL"
        ]
      }
    },
    "output": [
      "STYLE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "STYLE_MODEL"
    ],
    "name": "StyleModelClamp",
    "display_name": "StyleModelClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "UpscaleModelClamp": {
    "input": {
      "required": {
        "upscale_model": [
          "UPSCALE_MODEL"
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "name": "UpscaleModelClamp",
    "display_name": "UpscaleModelClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "VaeClamp": {
    "input": {
      "required": {
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [false],
    "output_name": [
      "VAE"
    ],
    "name": "VaeClamp",
    "display_name": "VaeClamp",
    "description": "",
    "category": "clamp",
    "output_node": false
  },
  "ImageBatchGet": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "index": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchGet",
    "display_name": "ImageBatchGet",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ImageBatchCopy": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "index": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ],
        "quantity": [
          "INT",
          {
            "default": 1,
            "min": 2,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchCopy",
    "display_name": "ImageBatchCopy",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ImageBatchRemove": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "index": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchRemove",
    "display_name": "ImageBatchRemove",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ImageBatchFork": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "priority": [
          [
            "first",
            "second"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "ImageBatchFork",
    "display_name": "ImageBatchFork",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ImageBatchJoin": {
    "input": {
      "required": {
        "images_a": [
          "IMAGE"
        ],
        "images_b": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchJoin",
    "display_name": "ImageBatchJoin",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ImageBatchPermute": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "permute": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "start_with_zero": [
          "BOOLEAN"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatchPermute",
    "display_name": "ImageBatchPermute",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ImageCompositeAbsolute": {
    "input": {
      "required": {
        "images_a": [
          "IMAGE"
        ],
        "images_b": [
          "IMAGE"
        ],
        "images_a_x": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "images_a_y": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "images_b_x": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "images_b_y": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "container_width": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "container_height": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "background": [
          [
            "images_a",
            "images_b"
          ]
        ],
        "method": [
          [
            "pair",
            "matrix"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCompositeAbsolute",
    "display_name": "ImageCompositeAbsolute",
    "description": "",
    "category": "image/composite",
    "output_node": false
  },
  "ImageCompositeAbsoluteByContainer": {
    "input": {
      "required": {
        "container": [
          "IMAGE"
        ],
        "images_a": [
          "IMAGE"
        ],
        "images_b": [
          "IMAGE"
        ],
        "images_a_x": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "images_a_y": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "images_b_x": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "images_b_y": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "background": [
          [
            "images_a",
            "images_b"
          ]
        ],
        "method": [
          [
            "pair",
            "matrix"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCompositeAbsoluteByContainer",
    "display_name": "ImageCompositeAbsoluteByContainer",
    "description": "",
    "category": "image/composite",
    "output_node": false
  },
  "ImageCompositeRelative": {
    "input": {
      "required": {
        "images_a": [
          "IMAGE"
        ],
        "images_b": [
          "IMAGE"
        ],
        "images_a_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "images_a_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "images_b_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "images_b_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "background": [
          [
            "images_a",
            "images_b"
          ]
        ],
        "container_size_type": [
          [
            "max",
            "sum",
            "sum_width",
            "sum_height"
          ]
        ],
        "method": [
          [
            "pair",
            "matrix"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCompositeRelative",
    "display_name": "ImageCompositeRelative",
    "description": "",
    "category": "image/composite",
    "output_node": false
  },
  "ImageCompositeRelativeByContainer": {
    "input": {
      "required": {
        "container": [
          "IMAGE"
        ],
        "images_a": [
          "IMAGE"
        ],
        "images_b": [
          "IMAGE"
        ],
        "images_a_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "images_a_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "images_b_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "images_b_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "background": [
          [
            "images_a",
            "images_b"
          ]
        ],
        "method": [
          [
            "pair",
            "matrix"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCompositeRelativeByContainer",
    "display_name": "ImageCompositeRelativeByContainer",
    "description": "",
    "category": "image/composite",
    "output_node": false
  },
  "ImageContainer": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageContainer",
    "display_name": "ImageContainer",
    "description": "",
    "category": "image/container",
    "output_node": false
  },
  "ImageContainerInheritanceAdd": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "add_width": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "add_height": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "method": [
          [
            "single",
            "for_each"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageContainerInheritanceAdd",
    "display_name": "ImageContainerInheritanceAdd",
    "description": "",
    "category": "image/container",
    "output_node": false
  },
  "ImageContainerInheritanceScale": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "scale_width": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.1
          }
        ],
        "scale_height": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "method": [
          [
            "single",
            "for_each"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageContainerInheritanceScale",
    "display_name": "ImageContainerInheritanceScale",
    "description": "",
    "category": "image/container",
    "output_node": false
  },
  "ImageContainerInheritanceMax": {
    "input": {
      "required": {
        "images_a": [
          "IMAGE"
        ],
        "images_b": [
          "IMAGE"
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "method": [
          [
            "single",
            "for_each_pair",
            "for_each_matrix"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageContainerInheritanceMax",
    "display_name": "ImageContainerInheritanceMax",
    "description": "",
    "category": "image/container",
    "output_node": false
  },
  "ImageContainerInheritanceSum": {
    "input": {
      "required": {
        "images_a": [
          "IMAGE"
        ],
        "images_b": [
          "IMAGE"
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "container_size_type": [
          [
            "sum",
            "sum_width",
            "sum_height"
          ]
        ],
        "method": [
          [
            "single",
            "for_each_pair",
            "for_each_matrix"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageContainerInheritanceSum",
    "display_name": "ImageContainerInheritanceSum",
    "description": "",
    "category": "image/container",
    "output_node": false
  },
  "ImageDrawArc": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "start": [
          "INT",
          {
            "default": 0,
            "max": 360,
            "step": 1
          }
        ],
        "end": [
          "INT",
          {
            "default": 180,
            "max": 360,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawArc",
    "display_name": "ImageDrawArc",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawArcByContainer": {
    "input": {
      "required": {
        "container": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "start": [
          "INT",
          {
            "default": 0,
            "max": 360,
            "step": 1
          }
        ],
        "end": [
          "INT",
          {
            "default": 180,
            "max": 360,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawArcByContainer",
    "display_name": "ImageDrawArcByContainer",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawChord": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "start": [
          "INT",
          {
            "default": 0,
            "max": 360,
            "step": 1
          }
        ],
        "end": [
          "INT",
          {
            "default": 180,
            "max": 360,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawChord",
    "display_name": "ImageDrawChord",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawChordByContainer": {
    "input": {
      "required": {
        "container": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "start": [
          "INT",
          {
            "default": 0,
            "max": 360,
            "step": 1
          }
        ],
        "end": [
          "INT",
          {
            "default": 180,
            "max": 360,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawChordByContainer",
    "display_name": "ImageDrawChordByContainer",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawEllipse": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "outline_size": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ],
        "outline_red": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_green": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_blue": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "fill_red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawEllipse",
    "display_name": "ImageDrawEllipse",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawEllipseByContainer": {
    "input": {
      "required": {
        "container": [
          "IMAGE"
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "outline_size": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ],
        "outline_red": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_green": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_blue": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "fill_red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawEllipseByContainer",
    "display_name": "ImageDrawEllipseByContainer",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawLine": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawLine",
    "display_name": "ImageDrawLine",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawLineByContainer": {
    "input": {
      "required": {
        "container": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawLineByContainer",
    "display_name": "ImageDrawLineByContainer",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawPieslice": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "start": [
          "INT",
          {
            "default": 0,
            "max": 360,
            "step": 1
          }
        ],
        "end": [
          "INT",
          {
            "default": 240,
            "max": 360,
            "step": 1
          }
        ],
        "outline_size": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ],
        "outline_red": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_green": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_blue": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "fill_red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawPieslice",
    "display_name": "ImageDrawPieslice",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawPiesliceByContainer": {
    "input": {
      "required": {
        "container": [
          "IMAGE"
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "start": [
          "INT",
          {
            "default": 0,
            "max": 360,
            "step": 1
          }
        ],
        "end": [
          "INT",
          {
            "default": 240,
            "max": 360,
            "step": 1
          }
        ],
        "outline_size": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ],
        "outline_red": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_green": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_blue": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "fill_red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawPiesliceByContainer",
    "display_name": "ImageDrawPiesliceByContainer",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawRectangle": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0.1,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0.2,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 0.9,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 0.8,
            "max": 1,
            "step": 0.01
          }
        ],
        "outline_size": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ],
        "outline_red": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_green": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_blue": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "fill_red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawRectangle",
    "display_name": "ImageDrawRectangle",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawRectangleByContainer": {
    "input": {
      "required": {
        "container": [
          "IMAGE"
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0.1,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0.2,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 0.9,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 0.8,
            "max": 1,
            "step": 0.01
          }
        ],
        "outline_size": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ],
        "outline_red": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_green": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_blue": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "fill_red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawRectangleByContainer",
    "display_name": "ImageDrawRectangleByContainer",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawRectangleRounded": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0.1,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0.2,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 0.9,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 0.8,
            "max": 1,
            "step": 0.01
          }
        ],
        "radius": [
          "INT",
          {
            "default": 180,
            "max": 360,
            "step": 1
          }
        ],
        "outline_size": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ],
        "outline_red": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_green": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_blue": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "fill_red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "top_left_corner": [
          [
            "true",
            "false"
          ]
        ],
        "top_right_corner": [
          [
            "true",
            "false"
          ]
        ],
        "bottom_right_corner": [
          [
            "true",
            "false"
          ]
        ],
        "bottom_left_corner": [
          [
            "true",
            "false"
          ]
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawRectangleRounded",
    "display_name": "ImageDrawRectangleRounded",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawRectangleRoundedByContainer": {
    "input": {
      "required": {
        "container": [
          "IMAGE"
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0.1,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0.2,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 0.9,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 0.8,
            "max": 1,
            "step": 0.01
          }
        ],
        "radius": [
          "INT",
          {
            "default": 180,
            "max": 360,
            "step": 1
          }
        ],
        "outline_size": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ],
        "outline_red": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_green": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_blue": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "fill_red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "top_left_corner": [
          [
            "true",
            "false"
          ]
        ],
        "top_right_corner": [
          [
            "true",
            "false"
          ]
        ],
        "bottom_right_corner": [
          [
            "true",
            "false"
          ]
        ],
        "bottom_left_corner": [
          [
            "true",
            "false"
          ]
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawRectangleRoundedByContainer",
    "display_name": "ImageDrawRectangleRoundedByContainer",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageDrawPolygon": {
    "input": {
      "required": {
        "size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "sides": [
          "INT",
          {
            "default": 5,
            "min": 3,
            "step": 1
          }
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "max": 360,
            "step": 1
          }
        ],
        "outline_size": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ],
        "outline_red": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_green": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_blue": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "fill_red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "fill_alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageDrawPolygon",
    "display_name": "ImageDrawPolygon",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageEffectsAdjustment": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ],
        "hue": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 1,
            "step": 0.01
          }
        ],
        "gamma": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ],
        "red": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ],
        "green": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ],
        "blue": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageEffectsAdjustment",
    "display_name": "ImageEffectsAdjustment",
    "description": "",
    "category": "image/effects",
    "output_node": false
  },
  "ImageEffectsGrayscale": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageEffectsGrayscale",
    "display_name": "ImageEffectsGrayscale",
    "description": "",
    "category": "image/effects",
    "output_node": false
  },
  "ImageEffectsNegative": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageEffectsNegative",
    "display_name": "ImageEffectsNegative",
    "description": "",
    "category": "image/effects",
    "output_node": false
  },
  "ImageEffectsSepia": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageEffectsSepia",
    "display_name": "ImageEffectsSepia",
    "description": "",
    "category": "image/effects",
    "output_node": false
  },
  "ImageEffectsLensZoomBurst": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "scale": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1,
            "step": 0.01
          }
        ],
        "samples": [
          "INT",
          {
            "default": 100,
            "min": 1
          }
        ],
        "position_x": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 1,
            "step": 0.01
          }
        ],
        "position_y": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 1,
            "step": 0.01
          }
        ],
        "rotation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 360
          }
        ],
        "method": [
          [
            "circle",
            "point"
          ]
        ],
        "stabilization": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageEffectsLensZoomBurst",
    "display_name": "ImageEffectsLensZoomBurst",
    "description": "",
    "category": "image/effects/lens",
    "output_node": false
  },
  "ImageEffectsLensChromaticAberration": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "shift": [
          "INT",
          {
            "default": 10,
            "step": 1
          }
        ],
        "method": [
          [
            "reflect",
            "edge",
            "constant"
          ]
        ],
        "shift_type": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4,
            "step": 1
          }
        ],
        "mixing_type": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4,
            "step": 1
          }
        ],
        "transpose": [
          [
            "none",
            "rotate",
            "reflect"
          ]
        ],
        "colors": [
          [
            "rb",
            "rg",
            "gb"
          ]
        ],
        "lens_curvy": [
          "FLOAT",
          {
            "default": 1,
            "max": 15,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageEffectsLensChromaticAberration",
    "display_name": "ImageEffectsLensChromaticAberration",
    "description": "",
    "category": "image/effects/lens",
    "output_node": false
  },
  "ImageEffectsLensBokeh": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "blades_shape": [
          "INT",
          {
            "default": 5,
            "min": 3
          }
        ],
        "blades_radius": [
          "INT",
          {
            "default": 10,
            "min": 1
          }
        ],
        "blades_rotation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 360
          }
        ],
        "blur_size": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "step": 2
          }
        ],
        "blur_type": [
          [
            "bilateral",
            "stack",
            "none"
          ]
        ],
        "method": [
          [
            "dilate",
            "filter"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageEffectsLensBokeh",
    "display_name": "ImageEffectsLensBokeh",
    "description": "",
    "category": "image/effects/lens",
    "output_node": false
  },
  "ImageEffectsLensOpticAxis": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "lens_shape": [
          [
            "circle",
            "square",
            "rectangle",
            "corners"
          ]
        ],
        "lens_edge": [
          [
            "around",
            "symmetric"
          ]
        ],
        "lens_curvy": [
          "FLOAT",
          {
            "default": 4,
            "max": 15,
            "step": 0.1
          }
        ],
        "lens_zoom": [
          "FLOAT",
          {
            "default": 2,
            "step": 0.1
          }
        ],
        "lens_aperture": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 10,
            "step": 0.1
          }
        ],
        "blur_intensity": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "step": 2
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImageEffectsLensOpticAxis",
    "display_name": "ImageEffectsLensOpticAxis",
    "description": "",
    "category": "image/effects/lens",
    "output_node": false
  },
  "ImageEffectsLensVignette": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "lens_shape": [
          [
            "circle",
            "rectangle"
          ]
        ],
        "lens_edge": [
          [
            "around",
            "symmetric"
          ]
        ],
        "lens_curvy": [
          "FLOAT",
          {
            "default": 3,
            "max": 15,
            "step": 0.1
          }
        ],
        "lens_zoom": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.1
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 0.25,
            "max": 1,
            "step": 0.01
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImageEffectsLensVignette",
    "display_name": "ImageEffectsLensVignette",
    "description": "",
    "category": "image/effects/lens",
    "output_node": false
  },
  "ImageFilterSmooth": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterSmooth",
    "display_name": "ImageFilterSmooth",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterSmoothMore": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterSmoothMore",
    "display_name": "ImageFilterSmoothMore",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterBlur": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size_x": [
          "INT",
          {
            "default": 10,
            "min": 1
          }
        ],
        "size_y": [
          "INT",
          {
            "default": 10,
            "min": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterBlur",
    "display_name": "ImageFilterBlur",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterBoxBlur": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size_x": [
          "INT",
          {
            "default": 10,
            "min": 1
          }
        ],
        "size_y": [
          "INT",
          {
            "default": 10,
            "min": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterBoxBlur",
    "display_name": "ImageFilterBoxBlur",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterGaussianBlur": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size_x": [
          "INT",
          {
            "default": 10,
            "min": 2,
            "step": 2
          }
        ],
        "size_y": [
          "INT",
          {
            "default": 10,
            "min": 2,
            "step": 2
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterGaussianBlur",
    "display_name": "ImageFilterGaussianBlur",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterGaussianBlurAdvanced": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size_x": [
          "INT",
          {
            "default": 10,
            "min": 2,
            "step": 2
          }
        ],
        "size_y": [
          "INT",
          {
            "default": 10,
            "min": 2,
            "step": 2
          }
        ],
        "sigma_x": [
          "INT",
          {
            "default": 0
          }
        ],
        "sigma_y": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterGaussianBlurAdvanced",
    "display_name": "ImageFilterGaussianBlurAdvanced",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterStackBlur": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size_x": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "step": 2
          }
        ],
        "size_y": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "step": 2
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterStackBlur",
    "display_name": "ImageFilterStackBlur",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterMedianBlur": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "step": 2
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterMedianBlur",
    "display_name": "ImageFilterMedianBlur",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterBilateralBlur": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "step": 2
          }
        ],
        "sigma_color": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "sigma_intensity": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterBilateralBlur",
    "display_name": "ImageFilterBilateralBlur",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterContour": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterContour",
    "display_name": "ImageFilterContour",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterDetail": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterDetail",
    "display_name": "ImageFilterDetail",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterEdgeEnhance": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterEdgeEnhance",
    "display_name": "ImageFilterEdgeEnhance",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterEdgeEnhanceMore": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterEdgeEnhanceMore",
    "display_name": "ImageFilterEdgeEnhanceMore",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterEmboss": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterEmboss",
    "display_name": "ImageFilterEmboss",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterFindEdges": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterFindEdges",
    "display_name": "ImageFilterFindEdges",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterSharpen": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterSharpen",
    "display_name": "ImageFilterSharpen",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterRank": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "step": 2
          }
        ],
        "rank": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterRank",
    "display_name": "ImageFilterRank",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterMin": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "step": 2
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterMin",
    "display_name": "ImageFilterMin",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterMax": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "step": 2
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterMax",
    "display_name": "ImageFilterMax",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageFilterMode": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "size": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "step": 2
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageFilterMode",
    "display_name": "ImageFilterMode",
    "description": "",
    "category": "image/filter",
    "output_node": false
  },
  "ImageNoiseBeta": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "a": [
          "INT",
          {
            "default": 1,
            "min": 1
          }
        ],
        "b": [
          "INT",
          {
            "default": 1,
            "min": 1
          }
        ],
        "monochromatic": [
          [
            "false",
            "true"
          ]
        ],
        "invert": [
          [
            "false",
            "true"
          ]
        ],
        "channels": [
          [
            "rgb",
            "rgba",
            "rg",
            "rb",
            "ra",
            "gb",
            "ga",
            "ba",
            "r",
            "g",
            "b",
            "a"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageNoiseBeta",
    "display_name": "ImageNoiseBeta",
    "description": "",
    "category": "image/noise",
    "output_node": false
  },
  "ImageNoiseBinomial": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "n": [
          "INT",
          {
            "default": 128,
            "min": 1,
            "max": 255
          }
        ],
        "p": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 1,
            "step": 0.01
          }
        ],
        "monochromatic": [
          [
            "false",
            "true"
          ]
        ],
        "invert": [
          [
            "false",
            "true"
          ]
        ],
        "channels": [
          [
            "rgb",
            "rgba",
            "rg",
            "rb",
            "ra",
            "gb",
            "ga",
            "ba",
            "r",
            "g",
            "b",
            "a"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageNoiseBinomial",
    "display_name": "ImageNoiseBinomial",
    "description": "",
    "category": "image/noise",
    "output_node": false
  },
  "ImageNoiseBytes": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "monochromatic": [
          [
            "false",
            "true"
          ]
        ],
        "invert": [
          [
            "false",
            "true"
          ]
        ],
        "channels": [
          [
            "rgb",
            "rgba",
            "rg",
            "rb",
            "ra",
            "gb",
            "ga",
            "ba",
            "r",
            "g",
            "b",
            "a"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageNoiseBytes",
    "display_name": "ImageNoiseBytes",
    "description": "",
    "category": "image/noise",
    "output_node": false
  },
  "ImageNoiseGaussian": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 0.5,
            "step": 0.01
          }
        ],
        "monochromatic": [
          [
            "false",
            "true"
          ]
        ],
        "invert": [
          [
            "false",
            "true"
          ]
        ],
        "channels": [
          [
            "rgb",
            "rgba",
            "rg",
            "rb",
            "ra",
            "gb",
            "ga",
            "ba",
            "r",
            "g",
            "b",
            "a"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageNoiseGaussian",
    "display_name": "ImageNoiseGaussian",
    "description": "",
    "category": "image/noise",
    "output_node": false
  },
  "ImageSegmentation": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "model": [
          [
            "u2net",
            "u2netp",
            "u2net_human_seg",
            "u2net_cloth_seg",
            "silueta",
            "isnet-general-use",
            "isnetis",
            "modnet-p",
            "modnet-w"
          ]
        ],
        "alpha_matting": [
          [
            "true",
            "false"
          ]
        ],
        "alpha_matting_foreground_threshold": [
          "INT",
          {
            "default": 240,
            "max": 250,
            "step": 5
          }
        ],
        "alpha_matting_background_threshold": [
          "INT",
          {
            "default": 20,
            "max": 250,
            "step": 5
          }
        ],
        "alpha_matting_erode_size": [
          "INT",
          {
            "default": 10,
            "step": 1
          }
        ],
        "post_process_mask": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageSegmentation",
    "display_name": "ImageSegmentation",
    "description": "",
    "category": "image/segmentation",
    "output_node": false
  },
  "ImageSegmentationCustom": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "model": [
          []
        ],
        "alpha_matting": [
          [
            "true",
            "false"
          ]
        ],
        "alpha_matting_foreground_threshold": [
          "INT",
          {
            "default": 240,
            "max": 250,
            "step": 5
          }
        ],
        "alpha_matting_background_threshold": [
          "INT",
          {
            "default": 20,
            "max": 250,
            "step": 5
          }
        ],
        "alpha_matting_erode_size": [
          "INT",
          {
            "default": 10,
            "step": 1
          }
        ],
        "post_process_mask": [
          [
            "false",
            "true"
          ]
        ],
        "mean": [
          "FLOAT",
          {
            "default": 0.485,
            "max": 1,
            "step": 0.01
          }
        ],
        "std": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "size": [
          "INT",
          {
            "default": 1024,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageSegmentationCustom",
    "display_name": "ImageSegmentationCustom",
    "description": "",
    "category": "image/segmentation",
    "output_node": false
  },
  "ImageSegmentationCustomAdvanced": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "model": [
          []
        ],
        "alpha_matting": [
          [
            "true",
            "false"
          ]
        ],
        "alpha_matting_foreground_threshold": [
          "INT",
          {
            "default": 240,
            "max": 250,
            "step": 5
          }
        ],
        "alpha_matting_background_threshold": [
          "INT",
          {
            "default": 20,
            "max": 250,
            "step": 5
          }
        ],
        "alpha_matting_erode_size": [
          "INT",
          {
            "default": 10,
            "step": 1
          }
        ],
        "post_process_mask": [
          [
            "false",
            "true"
          ]
        ],
        "mean_r": [
          "FLOAT",
          {
            "default": 0.485,
            "max": 1,
            "step": 0.01
          }
        ],
        "mean_g": [
          "FLOAT",
          {
            "default": 0.456,
            "max": 1,
            "step": 0.01
          }
        ],
        "mean_b": [
          "FLOAT",
          {
            "default": 0.406,
            "max": 1,
            "step": 0.01
          }
        ],
        "std_r": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "std_g": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "std_b": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 1024,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageSegmentationCustomAdvanced",
    "display_name": "ImageSegmentationCustomAdvanced",
    "description": "",
    "category": "image/segmentation",
    "output_node": false
  },
  "ImageText": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "font": [
          []
        ],
        "size": [
          "INT",
          {
            "default": 28,
            "min": 1,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "margin_x": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "margin_y": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageText",
    "display_name": "ImageText",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageTextOutlined": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "font": [
          []
        ],
        "size": [
          "INT",
          {
            "default": 28,
            "min": 1,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "outline_size": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ],
        "outline_red": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_green": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_blue": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "margin_x": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "margin_y": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTextOutlined",
    "display_name": "ImageTextOutlined",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageTextMultiline": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "font": [
          []
        ],
        "align": [
          [
            "left",
            "center",
            "right"
          ]
        ],
        "size": [
          "INT",
          {
            "default": 28,
            "min": 1,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "margin_x": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "margin_y": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTextMultiline",
    "display_name": "ImageTextMultiline",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageTextMultilineOutlined": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "font": [
          []
        ],
        "align": [
          [
            "left",
            "center",
            "right"
          ]
        ],
        "size": [
          "INT",
          {
            "default": 28,
            "min": 1,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "max": 255,
            "step": 1
          }
        ],
        "outline_size": [
          "INT",
          {
            "default": 1,
            "step": 1
          }
        ],
        "outline_red": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_green": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "outline_blue": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "step": 1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "max": 1,
            "step": 0.01
          }
        ],
        "margin_x": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "margin_y": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTextMultilineOutlined",
    "display_name": "ImageTextMultilineOutlined",
    "description": "",
    "category": "image/draw",
    "output_node": false
  },
  "ImageTransformResizeAbsolute": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformResizeAbsolute",
    "display_name": "ImageTransformResizeAbsolute",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "ImageTransformResizeRelative": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "scale_width": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.1
          }
        ],
        "scale_height": [
          "FLOAT",
          {
            "default": 1,
            "step": 0.1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformResizeRelative",
    "display_name": "ImageTransformResizeRelative",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "ImageTransformResizeClip": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "max_width": [
          "INT",
          {
            "default": 1024
          }
        ],
        "max_height": [
          "INT",
          {
            "default": 1024
          }
        ],
        "min_width": [
          "INT",
          {
            "default": 0
          }
        ],
        "min_height": [
          "INT",
          {
            "default": 0
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformResizeClip",
    "display_name": "ImageTransformResizeClip",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "ImageTransformCropAbsolute": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "start_x": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "start_y": [
          "INT",
          {
            "default": 0,
            "step": 1
          }
        ],
        "end_x": [
          "INT",
          {
            "default": 128,
            "step": 1
          }
        ],
        "end_y": [
          "INT",
          {
            "default": 128,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformCropAbsolute",
    "display_name": "ImageTransformCropAbsolute",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "ImageTransformCropRelative": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "start_x": [
          "FLOAT",
          {
            "default": 0.25,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_y": [
          "FLOAT",
          {
            "default": 0.25,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_x": [
          "FLOAT",
          {
            "default": 0.75,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_y": [
          "FLOAT",
          {
            "default": 0.75,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformCropRelative",
    "display_name": "ImageTransformCropRelative",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "ImageTransformCropCorners": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "radius": [
          "INT",
          {
            "default": 180,
            "max": 360,
            "step": 1
          }
        ],
        "top_left_corner": [
          [
            "true",
            "false"
          ]
        ],
        "top_right_corner": [
          [
            "true",
            "false"
          ]
        ],
        "bottom_right_corner": [
          [
            "true",
            "false"
          ]
        ],
        "bottom_left_corner": [
          [
            "true",
            "false"
          ]
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformCropCorners",
    "display_name": "ImageTransformCropCorners",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "ImageTransformPaddingAbsolute": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "add_width": [
          "INT",
          {
            "default": 64,
            "min": 0
          }
        ],
        "add_height": [
          "INT",
          {
            "default": 64,
            "min": 0
          }
        ],
        "method": [
          [
            "reflect",
            "edge",
            "constant"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformPaddingAbsolute",
    "display_name": "ImageTransformPaddingAbsolute",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "ImageTransformPaddingRelative": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "scale_width": [
          "FLOAT",
          {
            "default": 0.25,
            "step": 0.1
          }
        ],
        "scale_height": [
          "FLOAT",
          {
            "default": 0.25,
            "step": 0.1
          }
        ],
        "method": [
          [
            "reflect",
            "edge",
            "constant"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformPaddingRelative",
    "display_name": "ImageTransformPaddingRelative",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "ImageTransformRotate": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "angle": [
          "FLOAT",
          {
            "default": 35,
            "max": 360,
            "step": 0.1
          }
        ],
        "expand": [
          [
            "true",
            "false"
          ]
        ],
        "SSAA": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ],
        "method": [
          [
            "lanczos",
            "bicubic",
            "hamming",
            "bilinear",
            "box",
            "nearest"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformRotate",
    "display_name": "ImageTransformRotate",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "ImageTransformTranspose": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "method": [
          [
            "flip_horizontally",
            "flip_vertically",
            "rotate_90",
            "rotate_180",
            "rotate_270",
            "transpose",
            "transverse"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageTransformTranspose",
    "display_name": "ImageTransformTranspose",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "LoraLoader|pysssss": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            {
              "content": "3DMM_V12.safetensors",
              "image": "loras/3DMM_V12.preview.jpeg"
            },
            {
              "content": "add-detail-xl.safetensors",
              "image": "loras/add-detail-xl.preview.jpeg"
            },
            {
              "content": "add_detail.safetensors",
              "image": "loras/add_detail.preview.jpeg"
            },
            {
              "content": "animetarotV51.safetensors",
              "image": "loras/animetarotV51.preview.jpeg"
            },
            {
              "content": "ClothingAdjuster3.safetensors",
              "image": "loras/ClothingAdjuster3.preview.jpeg"
            },
            {
              "content": "epi_noiseoffset2.pt",
              "image": "loras/epi_noiseoffset2.preview.jpeg"
            },
            {
              "content": "LowRA.safetensors",
              "image": "loras/LowRA.preview.jpeg"
            }
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "LoraLoader|pysssss",
    "display_name": "Lora Loader 🐍",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CheckpointLoader|pysssss": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            {
              "content": "3dAnimationDiffusion_v10.safetensors",
              "image": "checkpoints/3dAnimationDiffusion_v10.preview.jpeg"
            },
            {
              "content": "aniverse_v40.safetensors",
              "image": "checkpoints/aniverse_v40.preview.jpeg"
            },
            {
              "content": "aniverse_v40Pruned.safetensors",
              "image": "checkpoints/aniverse_v40Pruned.preview.jpeg"
            },
            {
              "content": "cinematix_l8.safetensors",
              "image": "checkpoints/cinematix_l8.preview.jpeg"
            },
            {
              "content": "colorful_v80.safetensors",
              "image": "checkpoints/colorful_v80.preview.jpeg"
            },
            {
              "content": "colorfulxl_v42.safetensors",
              "image": "checkpoints/colorfulxl_v42.preview.jpeg"
            },
            {
              "content": "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
              "image": "checkpoints/comfyui_checkpoints/stable_cascade_stage_b.preview.jpeg"
            },
            {
              "content": "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
              "image": "checkpoints/comfyui_checkpoints/stable_cascade_stage_c.preview.jpeg"
            },
            {
              "content": "control_v11f1p_sd15_depth_fp16.safetensors",
              "image": null
            },
            {
              "content": "control_v11p_sd15_lineart_fp16.safetensors",
              "image": null
            },
            {
              "content": "dreamshaper_8.safetensors",
              "image": "checkpoints/dreamshaper_8.preview.jpeg"
            },
            {
              "content": "dreamshaperXL_v21TurboDPMSDE.safetensors",
              "image": "checkpoints/dreamshaperXL_v21TurboDPMSDE.preview.jpeg"
            },
            {
              "content": "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
              "image": "checkpoints/duchaitenPonyXLNo_ponyNoScoreV40.preview.jpeg"
            },
            {
              "content": "epic25D_v10.safetensors",
              "image": "checkpoints/epic25D_v10.preview.jpeg"
            },
            {
              "content": "epicrealismXL_v7FinalDestination.safetensors",
              "image": "checkpoints/epicrealismXL_v7FinalDestination.preview.jpeg"
            },
            {
              "content": "illuminatiDiffusionV1_v11.safetensors",
              "image": "checkpoints/illuminatiDiffusionV1_v11.preview.jpeg"
            },
            {
              "content": "juggernautXL_juggXRundiffusion.safetensors",
              "image": "checkpoints/juggernautXL_juggXRundiffusion.preview.jpeg"
            },
            {
              "content": "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
              "image": "checkpoints/pastelMixStylizedAnime_pastelMixPrunedFP16.preview.jpeg"
            },
            {
              "content": "ponyRealism_v21VAE.safetensors",
              "image": "checkpoints/ponyRealism_v21VAE.preview.jpeg"
            },
            {
              "content": "realisticVisionV60B1_v51HyperVAE.safetensors",
              "image": "checkpoints/realisticVisionV60B1_v51HyperVAE.preview.jpeg"
            },
            {
              "content": "sd21-unclip-h.ckpt",
              "image": null
            },
            {
              "content": "sd_xl_base_1.0_0.9vae.safetensors",
              "image": "checkpoints/sd_xl_base_1.0_0.9vae.preview.jpeg"
            },
            {
              "content": "sd_xl_offset_example-lora_1.0.safetensors",
              "image": "checkpoints/sd_xl_offset_example-lora_1.0.preview.jpeg"
            },
            {
              "content": "sd_xl_refiner_1.0_0.9vae.safetensors",
              "image": "checkpoints/sd_xl_refiner_1.0_0.9vae.preview.jpeg"
            },
            {
              "content": "sd_xl_turbo_1.0_fp16.safetensors",
              "image": "checkpoints/sd_xl_turbo_1.0_fp16.preview.jpeg"
            },
            {
              "content": "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
              "image": null
            },
            {
              "content": "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
              "image": null
            },
            {
              "content": "svd.safetensors",
              "image": null
            },
            {
              "content": "v1-5-pruned-emaonly.safetensors",
              "image": "checkpoints/v1-5-pruned-emaonly.preview.jpeg"
            },
            {
              "content": "v2-1_768-ema-pruned.safetensors",
              "image": null
            },
            {
              "content": "zavychromaxl_v70.safetensors",
              "image": "checkpoints/zavychromaxl_v70.preview.jpeg"
            }
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoader|pysssss",
    "display_name": "Checkpoint Loader 🐍",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "ConstrainImage|pysssss": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "max_width": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "max_height": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "min_width": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "min_height": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "crop_if_required": [
          [
            "yes",
            "no"
          ],
          {
            "default": "no"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [true],
    "output_name": [
      "IMAGE"
    ],
    "name": "ConstrainImage|pysssss",
    "display_name": "Constrain Image 🐍",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ConstrainImageforVideo|pysssss": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "max_width": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "max_height": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "min_width": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "min_height": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "crop_if_required": [
          [
            "yes",
            "no"
          ],
          {
            "default": "no"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ConstrainImageforVideo|pysssss",
    "display_name": "Constrain Image for Video 🐍",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "MathExpression|pysssss": {
    "input": {
      "required": {
        "expression": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": {
              "words": [
                {
                  "text": "round",
                  "value": "round()",
                  "showValue": false,
                  "hint": "number, dp? = 0",
                  "caretOffset": -1
                },
                {
                  "text": "ceil",
                  "value": "ceil()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "floor",
                  "value": "floor()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "min",
                  "value": "min()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "max",
                  "value": "max()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "randomint",
                  "value": "randomint()",
                  "showValue": false,
                  "hint": "min, max",
                  "caretOffset": -1
                },
                {
                  "text": "randomchoice",
                  "value": "randomchoice()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "sqrt",
                  "value": "sqrt()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "int",
                  "value": "int()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "iif",
                  "value": "iif()",
                  "showValue": false,
                  "hint": "value, truepart, falsepart",
                  "caretOffset": -1
                }
              ],
              "separator": ""
            }
          }
        ]
      },
      "optional": {
        "a": [
          "INT,FLOAT,IMAGE,LATENT"
        ],
        "b": [
          "INT,FLOAT,IMAGE,LATENT"
        ],
        "c": [
          "INT,FLOAT,IMAGE,LATENT"
        ]
      },
      "hidden": {
        "extra_pnginfo": "EXTRA_PNGINFO",
        "prompt": "PROMPT"
      }
    },
    "output": [
      "INT",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "FLOAT"
    ],
    "name": "MathExpression|pysssss",
    "display_name": "Math Expression 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "PlaySound|pysssss": {
    "input": {
      "required": {
        "any": [
          "*",
          {

          }
        ],
        "mode": [
          [
            "always",
            "on empty queue"
          ],
          {

          }
        ],
        "volume": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.1,
            "default": 0.5
          }
        ],
        "file": [
          "STRING",
          {
            "default": "notify.mp3"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [true],
    "output_name": [
      "*"
    ],
    "name": "PlaySound|pysssss",
    "display_name": "PlaySound 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "Repeater|pysssss": {
    "input": {
      "required": {
        "source": [
          "*",
          {

          }
        ],
        "repeats": [
          "INT",
          {
            "min": 0,
            "max": 5000,
            "default": 2
          }
        ],
        "output": [
          [
            "single",
            "multi"
          ],
          {

          }
        ],
        "node_mode": [
          [
            "reuse",
            "create"
          ],
          {

          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [true],
    "output_name": [
      "*"
    ],
    "name": "Repeater|pysssss",
    "display_name": "Repeater 🐍",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "ReroutePrimitive|pysssss": {
    "input": {
      "required": {
        "value": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "*"
    ],
    "name": "ReroutePrimitive|pysssss",
    "display_name": "Reroute Primitive 🐍",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "ShowText|pysssss": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [true],
    "output_name": [
      "STRING"
    ],
    "name": "ShowText|pysssss",
    "display_name": "Show Text 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "StringFunction|pysssss": {
    "input": {
      "required": {
        "action": [
          [
            "append",
            "replace"
          ],
          {

          }
        ],
        "tidy_tags": [
          [
            "yes",
            "no"
          ],
          {

          }
        ]
      },
      "optional": {
        "text_a": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "text_b": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "text_c": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "StringFunction|pysssss",
    "display_name": "String Function 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "SystemNotification|pysssss": {
    "input": {
      "required": {
        "message": [
          "STRING",
          {
            "default": "Your notification has triggered."
          }
        ],
        "any": [
          "*",
          {

          }
        ],
        "mode": [
          [
            "always",
            "on empty queue"
          ],
          {

          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [true],
    "output_name": [
      "*"
    ],
    "name": "SystemNotification|pysssss",
    "display_name": "SystemNotification 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "LoadText|pysssss": {
    "input": {
      "required": {
        "root_dir": [
          [
            "input",
            "output",
            "temp"
          ],
          {

          }
        ],
        "file": [
          [
            "[none]"
          ],
          {
            "pysssss.binding": [
              {
                "source": "root_dir",
                "callback": [
                  {
                    "type": "set",
                    "target": "$this.disabled",
                    "value": true
                  },
                  {
                    "type": "fetch",
                    "url": "/pysssss/text-file/{$source.value}",
                    "then": [
                      {
                        "type": "set",
                        "target": "$this.options.values",
                        "value": "$result"
                      },
                      {
                        "type": "validate-combo"
                      },
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": false
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "LoadText|pysssss",
    "display_name": "Load Text 🐍",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "SaveText|pysssss": {
    "input": {
      "required": {
        "root_dir": [
          [
            "input",
            "output",
            "temp"
          ],
          {

          }
        ],
        "file": [
          "STRING",
          {
            "default": "file.txt"
          }
        ],
        "append": [
          [
            "append",
            "overwrite",
            "new only"
          ],
          {

          }
        ],
        "insert": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "new line",
            "label_off": "none",
            "pysssss.binding": [
              {
                "source": "append",
                "callback": [
                  {
                    "type": "if",
                    "condition": [
                      {
                        "left": "$source.value",
                        "op": "eq",
                        "right": "\"append\""
                      }
                    ],
                    "true": [
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": false
                      }
                    ],
                    "false": [
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "text": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "SaveText|pysssss",
    "display_name": "Save Text 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "Inference_Core_ModelMergeBlockNumber": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.10.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.11.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_ModelMergeBlockNumber",
    "display_name": "Inference_Core_ModelMergeBlockNumber",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "Inference_Core_ReferenceOnlySimple": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "reference": [
          "LATENT"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "LATENT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "LATENT"
    ],
    "name": "Inference_Core_ReferenceOnlySimple",
    "display_name": "Inference_Core_ReferenceOnlySimple",
    "description": "",
    "category": "custom_node_experiments",
    "output_node": false
  },
  "Inference_Core_RescaleClassifierFreeGuidanceTest": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_RescaleClassifierFreeGuidanceTest",
    "display_name": "Inference_Core_RescaleClassifierFreeGuidanceTest",
    "description": "",
    "category": "custom_node_experiments",
    "output_node": false
  },
  "Inference_Core_ModelSamplerTonemapNoiseTest": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_ModelSamplerTonemapNoiseTest",
    "display_name": "Inference_Core_ModelSamplerTonemapNoiseTest",
    "description": "",
    "category": "custom_node_experiments",
    "output_node": false
  },
  "Inference_Core_TonemapNoiseWithRescaleCFG": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "tonemap_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01
          }
        ],
        "rescale_multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_TonemapNoiseWithRescaleCFG",
    "display_name": "Inference_Core_TonemapNoiseWithRescaleCFG",
    "description": "",
    "category": "custom_node_experiments",
    "output_node": false
  },
  "Inference_Core_ModelMergeSDXL": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_ModelMergeSDXL",
    "display_name": "Inference_Core_ModelMergeSDXL",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "Inference_Core_ModelMergeSDXLTransformers": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_ModelMergeSDXLTransformers",
    "display_name": "Inference_Core_ModelMergeSDXLTransformers",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "Inference_Core_ModelMergeSDXLDetailedTransformers": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "time_embed.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.0.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.1.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.2.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.3.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.4.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.5.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.6.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.7.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "input_blocks.8.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.0.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.1.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.2.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.3.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.4.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.5.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.6.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.7.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.8.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.2.1.transformer_blocks.9.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.3.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.4.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.0.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.norm1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn1.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn1.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn1.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn1.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.ff.net": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.norm2": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn2.to_q": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn2.to_k": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn2.to_v": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.attn2.to_out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.5.1.transformer_blocks.1.norm3": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.6.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.7.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "output_blocks.8.0.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out.": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_ModelMergeSDXLDetailedTransformers",
    "display_name": "Inference_Core_ModelMergeSDXLDetailedTransformers",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "Inference_Core_AnimeFace_SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "remove_background_using_abg": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 512,
            "max": 512,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "ABG_CHARACTER_MASK (MASK)"
    ],
    "name": "Inference_Core_AnimeFace_SemSegPreprocessor",
    "display_name": "[Inference.Core] Anime Face Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Inference_Core_BinaryPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bin_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_BinaryPreprocessor",
    "display_name": "[Inference.Core] Binary Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_CannyEdgePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "low_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "high_threshold": [
          "INT",
          {
            "default": 200,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_CannyEdgePreprocessor",
    "display_name": "[Inference.Core] Canny Edge",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_ColorPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_ColorPreprocessor",
    "display_name": "[Inference.Core] Color Pallete",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "Inference_Core_DensePosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "model": [
          [
            "densepose_r50_fpn_dl.torchscript",
            "densepose_r101_fpn_dl.torchscript"
          ],
          {
            "default": "densepose_r50_fpn_dl.torchscript"
          }
        ],
        "cmap": [
          [
            "Viridis (MagicAnimate)",
            "Parula (CivitAI)"
          ],
          {
            "default": "Viridis (MagicAnimate)"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_DensePosePreprocessor",
    "display_name": "[Inference.Core] DensePose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "Inference_Core_DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "ckpt_name": [
          [
            "depth_anything_vitl14.pth",
            "depth_anything_vitb14.pth",
            "depth_anything_vits14.pth"
          ],
          {
            "default": "depth_anything_vitl14.pth"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_DepthAnythingPreprocessor",
    "display_name": "[Inference.Core] Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_Zoe_DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "environment": [
          [
            "indoor",
            "outdoor"
          ],
          {
            "default": "indoor"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_Zoe_DepthAnythingPreprocessor",
    "display_name": "[Inference.Core] Zoe Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_DiffusionEdge_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "environment": [
          [
            "indoor",
            "urban",
            "natrual"
          ],
          {
            "default": "indoor"
          }
        ],
        "patch_batch_size": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_DiffusionEdge_Preprocessor",
    "display_name": "[Inference.Core] Diffusion Edge (batch size ↑ =\u003E speed ↑, VRAM ↑)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_DWPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.onnx"
          }
        ],
        "pose_estimator": [
          [
            "dw-ll_ucoco_384_bs5.torchscript.pt",
            "dw-ll_ucoco_384.onnx",
            "dw-ll_ucoco.onnx"
          ],
          {
            "default": "dw-ll_ucoco_384_bs5.torchscript.pt"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "Inference_Core_DWPreprocessor",
    "display_name": "[Inference.Core] DWPose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "Inference_Core_AnimalPosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.torchscript.pt"
          }
        ],
        "pose_estimator": [
          [
            "rtmpose-m_ap10k_256_bs5.torchscript.pt",
            "rtmpose-m_ap10k_256.onnx"
          ],
          {
            "default": "rtmpose-m_ap10k_256_bs5.torchscript.pt"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "Inference_Core_AnimalPosePreprocessor",
    "display_name": "[Inference.Core] AnimalPose Estimator (AP10K)",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "Inference_Core_HEDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_HEDPreprocessor",
    "display_name": "[Inference.Core] HED Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_FakeScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_FakeScribblePreprocessor",
    "display_name": "[Inference.Core] Fake Scribble Lines (aka scribble_hed)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_InpaintPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_InpaintPreprocessor",
    "display_name": "[Inference.Core] Inpaint Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "Inference_Core_LeReS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "rm_nearest": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "rm_background": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "boost": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_LeReS-DepthMapPreprocessor",
    "display_name": "[Inference.Core] LeReS Depth Map (enable boost for leres++)",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_LineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "coarse": [
          [
            "disable",
            "enable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_LineArtPreprocessor",
    "display_name": "[Inference.Core] Realistic Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_AnimeLineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_AnimeLineArtPreprocessor",
    "display_name": "[Inference.Core] Anime Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_LineartStandardPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "guassian_sigma": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 100
          }
        ],
        "intensity_threshold": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_LineartStandardPreprocessor",
    "display_name": "[Inference.Core] Standard Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_Manga2Anime_LineArt_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_Manga2Anime_LineArt_Preprocessor",
    "display_name": "[Inference.Core] Manga Lineart (aka lineart_anime_denoise)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_MediaPipe-FaceMeshPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "min_confidence": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_MediaPipe-FaceMeshPreprocessor",
    "display_name": "[Inference.Core] MediaPipe Face Mesh",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "Inference_Core_MeshGraphormer-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "mask_bbox_padding": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 100
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "mask_type": [
          [
            "based_on_depth",
            "tight_bboxes",
            "original"
          ],
          {
            "default": "based_on_depth"
          }
        ],
        "mask_expand": [
          "INT",
          {
            "default": 5,
            "min": -2048,
            "max": 2048,
            "step": 1
          }
        ],
        "rand_seed": [
          "INT",
          {
            "default": 88,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "INPAINTING_MASK"
    ],
    "name": "Inference_Core_MeshGraphormer-DepthMapPreprocessor",
    "display_name": "[Inference.Core] MeshGraphormer Hand Refiner",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_MiDaS-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_MiDaS-NormalMapPreprocessor",
    "display_name": "[Inference.Core] MiDaS Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_MiDaS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_MiDaS-DepthMapPreprocessor",
    "display_name": "[Inference.Core] MiDaS Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_M-LSDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "score_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 2,
            "step": 0.01
          }
        ],
        "dist_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 20,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_M-LSDPreprocessor",
    "display_name": "[Inference.Core] M-LSD Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_BAE-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_BAE-NormalMapPreprocessor",
    "display_name": "[Inference.Core] BAE Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_OneFormer-COCO-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_OneFormer-COCO-SemSegPreprocessor",
    "display_name": "[Inference.Core] OneFormer COCO Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Inference_Core_OneFormer-ADE20K-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_OneFormer-ADE20K-SemSegPreprocessor",
    "display_name": "[Inference.Core] OneFormer ADE20K Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Inference_Core_OpenposePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "Inference_Core_OpenposePreprocessor",
    "display_name": "[Inference.Core] OpenPose Pose",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "Inference_Core_PiDiNetPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_PiDiNetPreprocessor",
    "display_name": "[Inference.Core] PiDiNet Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_SavePoseKpsAsJsonFile": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "PoseKeypoint"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Inference_Core_SavePoseKpsAsJsonFile",
    "display_name": "[Inference.Core] Save Pose Keypoints",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": true
  },
  "Inference_Core_FacialPartColoringFromPoseKps": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "mode": [
          [
            "point",
            "polygon"
          ],
          {
            "default": "polygon"
          }
        ],
        "skin": [
          "STRING",
          {
            "default": "rgb(0, 153, 255)",
            "multiline": false
          }
        ],
        "left_eye": [
          "STRING",
          {
            "default": "rgb(0, 204, 153)",
            "multiline": false
          }
        ],
        "right_eye": [
          "STRING",
          {
            "default": "rgb(255, 153, 0)",
            "multiline": false
          }
        ],
        "nose": [
          "STRING",
          {
            "default": "rgb(255, 102, 255)",
            "multiline": false
          }
        ],
        "upper_lip": [
          "STRING",
          {
            "default": "rgb(102, 0, 51)",
            "multiline": false
          }
        ],
        "inner_mouth": [
          "STRING",
          {
            "default": "rgb(255, 204, 255)",
            "multiline": false
          }
        ],
        "lower_lip": [
          "STRING",
          {
            "default": "rgb(255, 0, 102)",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_FacialPartColoringFromPoseKps",
    "display_name": "[Inference.Core] Colorize Facial Parts from PoseKPS",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": false
  },
  "Inference_Core_ImageLuminanceDetector": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 2,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_ImageLuminanceDetector",
    "display_name": "[Inference.Core] Image Luminance",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "Inference_Core_ImageIntensityDetector": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 2,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_ImageIntensityDetector",
    "display_name": "[Inference.Core] Image Intensity",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "Inference_Core_ScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_ScribblePreprocessor",
    "display_name": "[Inference.Core] Scribble Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_Scribble_XDoG_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "threshold": [
          "INT",
          {
            "default": 32,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_Scribble_XDoG_Preprocessor",
    "display_name": "[Inference.Core] Scribble XDoG Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_SAMPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_SAMPreprocessor",
    "display_name": "[Inference.Core] SAM Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "Inference_Core_ShufflePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_ShufflePreprocessor",
    "display_name": "[Inference.Core] Content Shuffle",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "Inference_Core_TEEDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe_steps": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_TEEDPreprocessor",
    "display_name": "Inference_Core_TEEDPreprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Inference_Core_TilePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "pyrUp_iters": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_TilePreprocessor",
    "display_name": "[Inference.Core] Tile",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "Inference_Core_UniFormer-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_UniFormer-SemSegPreprocessor",
    "display_name": "[Inference.Core] UniFormer Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Inference_Core_SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_SemSegPreprocessor",
    "display_name": "[Inference.Core] Semantic Segmentor (legacy, alias for UniFormer)",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Inference_Core_Unimatch_OptFlowPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "ckpt_name": [
          [
            "gmflow-scale1-mixdata.pth",
            "gmflow-scale2-mixdata.pth",
            "gmflow-scale2-regrefine6-mixdata.pth"
          ],
          {
            "default": "gmflow-scale2-regrefine6-mixdata.pth"
          }
        ],
        "backward_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "bidirectional_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "OPTICAL_FLOW",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "OPTICAL_FLOW",
      "PREVIEW_IMAGE"
    ],
    "name": "Inference_Core_Unimatch_OptFlowPreprocessor",
    "display_name": "[Inference.Core] Unimatch Optical Flow",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "Inference_Core_MaskOptFlow": {
    "input": {
      "required": {
        "optical_flow": [
          "OPTICAL_FLOW"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "OPTICAL_FLOW",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "OPTICAL_FLOW",
      "PREVIEW_IMAGE"
    ],
    "name": "Inference_Core_MaskOptFlow",
    "display_name": "[Inference.Core] Mask Optical Flow (DragNUWA)",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "Inference_Core_Zoe-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_Zoe-DepthMapPreprocessor",
    "display_name": "[Inference.Core] Zoe Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Inference_Core_AIO_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "preprocessor": [
          [
            "none",
            "AnimeFace_SemSegPreprocessor",
            "BinaryPreprocessor",
            "CannyEdgePreprocessor",
            "ColorPreprocessor",
            "DensePosePreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "DiffusionEdge_Preprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "LeReS-DepthMapPreprocessor",
            "LineArtPreprocessor",
            "AnimeLineArtPreprocessor",
            "LineartStandardPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "M-LSDPreprocessor",
            "BAE-NormalMapPreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "OpenposePreprocessor",
            "PiDiNetPreprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "ImageLuminanceDetector",
            "ImageIntensityDetector",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "SAMPreprocessor",
            "ShufflePreprocessor",
            "TEEDPreprocessor",
            "TilePreprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "Zoe-DepthMapPreprocessor"
          ],
          {
            "default": "none"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_AIO_Preprocessor",
    "display_name": "[Inference.Core] AIO Aux Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "Inference_Core_PixelPerfectResolution": {
    "input": {
      "required": {
        "original_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "RESOLUTION (INT)"
    ],
    "name": "Inference_Core_PixelPerfectResolution",
    "display_name": "[Inference.Core] Pixel Perfect Resolution",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "Inference_Core_ImageGenResolutionFromImage": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "Inference_Core_ImageGenResolutionFromImage",
    "display_name": "[Inference.Core] Generation Resolution From Image",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "Inference_Core_ImageGenResolutionFromLatent": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "Inference_Core_ImageGenResolutionFromLatent",
    "display_name": "[Inference.Core] Generation Resolution From Latent",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "Inference_Core_HintImageEnchance": {
    "input": {
      "required": {
        "hint_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_HintImageEnchance",
    "display_name": "[Inference.Core] Enchance And Resize Hint Images",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "config": [
          [
            "SDXL, Attention Injection",
            "SDXL, Conv Injection",
            "SD15, Attention Injection, attn_sharing"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_LayeredDiffusionApply",
    "display_name": "[Inference.Core] Layer Diffuse Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionJointApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "config": [
          [
            "SD15, attn_sharing, Batch size (3N)"
          ]
        ]
      },
      "optional": {
        "fg_cond": [
          "CONDITIONING"
        ],
        "bg_cond": [
          "CONDITIONING"
        ],
        "blended_cond": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_LayeredDiffusionJointApply",
    "display_name": "[Inference.Core] Layer Diffuse Joint Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionCondApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "cond": [
          "CONDITIONING"
        ],
        "uncond": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "config": [
          [
            "SDXL, Foreground",
            "SDXL, Background"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "name": "Inference_Core_LayeredDiffusionCondApply",
    "display_name": "[Inference.Core] Layer Diffuse Cond Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionCondJointApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "image": [
          "IMAGE"
        ],
        "config": [
          [
            "SD15, Foreground, attn_sharing, Batch size (2N)",
            "SD15, Background, attn_sharing, Batch size (2N)"
          ]
        ]
      },
      "optional": {
        "cond": [
          "CONDITIONING"
        ],
        "blended_cond": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Inference_Core_LayeredDiffusionCondJointApply",
    "display_name": "[Inference.Core] Layer Diffuse Cond Joint Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionDiffApply": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "cond": [
          "CONDITIONING"
        ],
        "uncond": [
          "CONDITIONING"
        ],
        "blended_latent": [
          "LATENT"
        ],
        "latent": [
          "LATENT"
        ],
        "config": [
          [
            "SDXL, Foreground",
            "SDXL, Background"
          ]
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "name": "Inference_Core_LayeredDiffusionDiffApply",
    "display_name": "[Inference.Core] Layer Diffuse Diff Apply",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionDecode": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "images": [
          "IMAGE"
        ],
        "sd_version": [
          [
            "SD15",
            "SDXL"
          ],
          {
            "default": "SDXL"
          }
        ],
        "sub_batch_size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "Inference_Core_LayeredDiffusionDecode",
    "display_name": "[Inference.Core] Layer Diffuse Decode",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionDecodeRGBA": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "images": [
          "IMAGE"
        ],
        "sd_version": [
          [
            "SD15",
            "SDXL"
          ],
          {
            "default": "SDXL"
          }
        ],
        "sub_batch_size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Inference_Core_LayeredDiffusionDecodeRGBA",
    "display_name": "[Inference.Core] Layer Diffuse Decode (RGBA)",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_LayeredDiffusionDecodeSplit": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "images": [
          "IMAGE"
        ],
        "frames": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 3,
            "step": 1
          }
        ],
        "sd_version": [
          [
            "SD15",
            "SDXL"
          ],
          {
            "default": "SDXL"
          }
        ],
        "sub_batch_size": [
          "INT",
          {
            "default": 16,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "name": "Inference_Core_LayeredDiffusionDecodeSplit",
    "display_name": "[Inference.Core] Layer Diffuse Decode (Split)",
    "description": "",
    "category": "layer_diffuse",
    "output_node": false
  },
  "Inference_Core_PromptExpansion": {
    "input": {
      "required": {
        "model_name": [
          []
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4294967295
          }
        ],
        "log_prompt": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "expanded_prompt",
      "seed"
    ],
    "name": "Inference_Core_PromptExpansion",
    "display_name": "[Inference.Core] [Inference.Core] Prompt Expansion",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "Compare": {
    "input": {
      "required": {
        "a": [
          "*",
          {
            "default": 0
          }
        ],
        "b": [
          "*",
          {
            "default": 0
          }
        ],
        "comparison": [
          [
            "a == b",
            "a != b",
            "a \u003C b",
            "a \u003E b",
            "a \u003C= b",
            "a \u003E= b"
          ],
          {
            "default": "a == b"
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": "BOOLEAN",
    "name": "Compare",
    "display_name": "Compare",
    "description": "",
    "category": "Logic",
    "output_node": false
  },
  "Int": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "Int",
    "display_name": "Int",
    "description": "",
    "category": "Logic",
    "output_node": false
  },
  "Float": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "Float",
    "display_name": "Float",
    "description": "",
    "category": "Logic",
    "output_node": false
  },
  "Bool": {
    "input": {
      "required": {
        "value": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Bool",
    "display_name": "Bool",
    "description": "",
    "category": "Logic",
    "output_node": false
  },
  "String": {
    "input": {
      "required": {
        "value": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "String",
    "display_name": "String",
    "description": "",
    "category": "Logic",
    "output_node": false
  },
  "If ANY execute A else B": {
    "input": {
      "required": {
        "ANY": [
          "*"
        ],
        "IF_TRUE": [
          "*"
        ],
        "IF_FALSE": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": "?",
    "name": "If ANY execute A else B",
    "display_name": "If",
    "description": "",
    "category": "Logic",
    "output_node": false
  },
  "DebugPrint": {
    "input": {
      "required": {
        "ANY": [
          "{}"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "DebugPrint",
    "display_name": "DebugPrint",
    "description": "",
    "category": "Logic",
    "output_node": true
  },
  "ChatGPT Simple _O": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "model": [
          [
            "gpt-3.5-turbo"
          ],
          {
            "default": "gpt-3.5-turbo"
          }
        ],
        "behaviour": [
          [
            "tags",
            "description"
          ],
          {
            "default": "description"
          }
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "ChatGPT Simple _O",
    "display_name": "ChatGPT Simple _O",
    "description": "",
    "category": "O/OpenAI",
    "output_node": false
  },
  "ChatGPT compact _O": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "initMsg": [
          "STRING",
          {
            "multiline": true,
            "default": "\nact as prompt generator ,i will give you text and you describe an image that match that text in details use gelbooru  tags in your description also describe the high quality of the image, answer with one response only \n"
          }
        ],
        "model": [
          [
            "gpt-3.5-turbo"
          ],
          {
            "default": "gpt-3.5-turbo"
          }
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "ChatGPT compact _O",
    "display_name": "ChatGPT compact _O",
    "description": "",
    "category": "O/OpenAI",
    "output_node": false
  },
  "load_openAI _O": {
    "input": {
      "required": {

      }
    },
    "output": [
      "CLIENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIENT"
    ],
    "name": "load_openAI _O",
    "display_name": "load_openAI _O",
    "description": "",
    "category": "O/OpenAI/Advanced",
    "output_node": false
  },
  "Chat_Message _O": {
    "input": {
      "required": {
        "role": [
          [
            "user",
            "assistant",
            "system"
          ],
          {
            "default": "user"
          }
        ],
        "content": [
          "STRING",
          {
            "multiline": true,
            "default": "\nact as prompt generator ,i will give you text and you describe an image that match that text in details use gelbooru  tags in your description also describe the high quality of the image, answer with one response only \n"
          }
        ]
      }
    },
    "output": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "output_is_list": [false],
    "output_name": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "name": "Chat_Message _O",
    "display_name": "Chat_Message _O",
    "description": "",
    "category": "O/OpenAI/Advanced/ChatGPT",
    "output_node": false
  },
  "combine_chat_messages _O": {
    "input": {
      "required": {
        "message1": [
          "OPENAI_CHAT_MESSAGES"
        ],
        "message2": [
          "OPENAI_CHAT_MESSAGES"
        ]
      }
    },
    "output": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "output_is_list": [false],
    "output_name": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "name": "combine_chat_messages _O",
    "display_name": "combine_chat_messages _O",
    "description": "",
    "category": "O/OpenAI/Advanced/ChatGPT",
    "output_node": false
  },
  "Chat completion _O": {
    "input": {
      "required": {
        "client": [
          "CLIENT"
        ],
        "model": [
          [
            "gpt-3.5-turbo"
          ],
          {
            "default": "gpt-3.5-turbo"
          }
        ],
        "messages": [
          "OPENAI_CHAT_MESSAGES"
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING",
      "OPENAI_CHAT_COMPLETION"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "OPENAI_CHAT_COMPLETION"
    ],
    "name": "Chat completion _O",
    "display_name": "Chat completion _O",
    "description": "",
    "category": "O/OpenAI/Advanced/ChatGPT",
    "output_node": true
  },
  "create image _O": {
    "input": {
      "required": {
        "client": [
          "CLIENT"
        ],
        "prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "number": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "size": [
          [
            "256x256",
            "512x512",
            "1024x1024"
          ],
          {
            "default": "256x256"
          }
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "create image _O",
    "display_name": "create image _O",
    "description": "",
    "category": "O/OpenAI/Advanced/Image",
    "output_node": true
  },
  "variation_image _O": {
    "input": {
      "required": {
        "client": [
          "CLIENT"
        ],
        "image": [
          "IMAGE"
        ],
        "number": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "size": [
          [
            "256x256",
            "512x512",
            "1024x1024"
          ],
          {
            "default": "256x256"
          }
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "variation_image _O",
    "display_name": "variation_image _O",
    "description": "",
    "category": "O/OpenAI/Advanced/Image",
    "output_node": true
  },
  "LatentUpscaleFactor _O": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "WidthFactor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0,
            "max": 10,
            "step": 0.28125
          }
        ],
        "HeightFactor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0,
            "max": 10,
            "step": 0.28125
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscaleFactor _O",
    "display_name": "LatentUpscaleFactor _O",
    "description": "",
    "category": "O/latent",
    "output_node": false
  },
  "LatentUpscaleFactorSimple _O": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0,
            "max": 10,
            "step": 0.28125
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscaleFactorSimple _O",
    "display_name": "LatentUpscaleFactorSimple _O",
    "description": "",
    "category": "O/latent",
    "output_node": false
  },
  "selectLatentFromBatch _O": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "selectLatentFromBatch _O",
    "display_name": "selectLatentFromBatch _O",
    "description": "",
    "category": "O/latent",
    "output_node": false
  },
  "RandomNSP _O": {
    "input": {
      "required": {
        "terminology": [
          [
            "fantasy-creature",
            "gen-modifier",
            "adj-beauty",
            "noun-beauty",
            "noun-fantasy",
            "adj-horror",
            "noun-emote",
            "noun-horror",
            "adj-architecture",
            "nationality",
            "pop-location",
            "pop-culture",
            "site",
            "style",
            "hd",
            "aspect-ratio",
            "3d-terms",
            "color-palette",
            "camera",
            "camera-manu",
            "f-stop",
            "iso-stop",
            "focal-length",
            "photo-term",
            "adj-general",
            "noun-general",
            "color",
            "artist",
            "identity",
            "identity-adult",
            "identity-young",
            "punk",
            "hair",
            "bodyshape",
            "skin-color",
            "eyecolor",
            "fantasy-setting",
            "details",
            "portrait-type",
            "occupation",
            "celeb",
            "neg-weight",
            "landscape-type",
            "animals",
            "gender",
            "gender-ext",
            "movement",
            "body-heavy",
            "body-light",
            "body-fit",
            "body-poor",
            "body-shape",
            "body-short",
            "body-tall",
            "quantity",
            "scenario-desc",
            "games",
            "foods",
            "rpg-Item",
            "trippy",
            "cosmic-star",
            "cosmic-nebula",
            "cosmic-galaxy",
            "cosmic-terms",
            "flower",
            "dinosaur",
            "natl-park",
            "fruit",
            "tree",
            "wh-site",
            "forest-type",
            "water",
            "fish",
            "artist-botanical",
            "artist-surreal",
            "bird",
            "movie",
            "movie-director",
            "comic",
            "penciller",
            "album-cover",
            "band"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "RandomNSP _O",
    "display_name": "RandomNSP _O",
    "description": "",
    "category": "O/text/NSP",
    "output_node": false
  },
  "ConcatRandomNSP_O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "defaultBehavior": "input"
          }
        ],
        "terminology": [
          [
            "fantasy-creature",
            "gen-modifier",
            "adj-beauty",
            "noun-beauty",
            "noun-fantasy",
            "adj-horror",
            "noun-emote",
            "noun-horror",
            "adj-architecture",
            "nationality",
            "pop-location",
            "pop-culture",
            "site",
            "style",
            "hd",
            "aspect-ratio",
            "3d-terms",
            "color-palette",
            "camera",
            "camera-manu",
            "f-stop",
            "iso-stop",
            "focal-length",
            "photo-term",
            "adj-general",
            "noun-general",
            "color",
            "artist",
            "identity",
            "identity-adult",
            "identity-young",
            "punk",
            "hair",
            "bodyshape",
            "skin-color",
            "eyecolor",
            "fantasy-setting",
            "details",
            "portrait-type",
            "occupation",
            "celeb",
            "neg-weight",
            "landscape-type",
            "animals",
            "gender",
            "gender-ext",
            "movement",
            "body-heavy",
            "body-light",
            "body-fit",
            "body-poor",
            "body-shape",
            "body-short",
            "body-tall",
            "quantity",
            "scenario-desc",
            "games",
            "foods",
            "rpg-Item",
            "trippy",
            "cosmic-star",
            "cosmic-nebula",
            "cosmic-galaxy",
            "cosmic-terms",
            "flower",
            "dinosaur",
            "natl-park",
            "fruit",
            "tree",
            "wh-site",
            "forest-type",
            "water",
            "fish",
            "artist-botanical",
            "artist-surreal",
            "bird",
            "movie",
            "movie-director",
            "comic",
            "penciller",
            "album-cover",
            "band"
          ]
        ],
        "separator": [
          "STRING",
          {
            "multiline": false,
            "default": ","
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "ConcatRandomNSP_O",
    "display_name": "ConcatRandomNSP_O",
    "description": "",
    "category": "O/text/NSP",
    "output_node": false
  },
  "Concat Text _O": {
    "input": {
      "required": {
        "text1": [
          "STRING",
          {
            "multiline": true,
            "defaultBehavior": "input"
          }
        ],
        "text2": [
          "STRING",
          {
            "multiline": true,
            "defaultBehavior": "input"
          }
        ],
        "separator": [
          "STRING",
          {
            "multiline": false,
            "default": ","
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Concat Text _O",
    "display_name": "Concat Text _O",
    "description": "",
    "category": "O/text/operations",
    "output_node": false
  },
  "Trim Text _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "defaultBehavior": "input"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Trim Text _O",
    "display_name": "Trim Text _O",
    "description": "",
    "category": "O/text/operations",
    "output_node": false
  },
  "Replace Text _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "defaultBehavior": "input"
          }
        ],
        "old": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "new": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Replace Text _O",
    "display_name": "Replace Text _O",
    "description": "",
    "category": "O/text/operations",
    "output_node": false
  },
  "saveTextToFile _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "defaultBehavior": "input"
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "log.txt",
            "multiline": false
          }
        ]
      },
      "optional": {
        "append": [
          [
            "true",
            "false"
          ],
          {
            "default": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "saveTextToFile _O",
    "display_name": "saveTextToFile _O",
    "description": "",
    "category": "O/text",
    "output_node": true
  },
  "Text2Image _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "font": [
          [
            "Alkatra.ttf",
            "CALIBRI.TTF",
            "COMIC.TTF",
            "COMICI.TTF",
            "COMICZ.TTF"
          ],
          {
            "default": "Alkatra.ttf"
          }
        ],
        "size": [
          "INT",
          {
            "default": 36,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_R": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_G": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_B": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_A": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_R": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_G": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_B": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_A": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "step": 1
          }
        ],
        "expand": [
          [
            "true",
            "false"
          ],
          {
            "default": "true"
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": -100,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": -100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Text2Image _O",
    "display_name": "Text2Image _O",
    "description": "",
    "category": "O/text",
    "output_node": false
  },
  "ImageScaleFactor _O": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "WidthFactor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0,
            "max": 10,
            "step": 0.28125
          }
        ],
        "HeightFactor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0,
            "max": 10,
            "step": 0.28125
          }
        ],
        "MulOf46": [
          [
            "enabled",
            "disabled"
          ],
          {
            "default": "enabled"
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleFactor _O",
    "display_name": "ImageScaleFactor _O",
    "description": "",
    "category": "O/image",
    "output_node": false
  },
  "ImageScaleFactorSimple _O": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "Factor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0,
            "max": 10,
            "step": 0.28125
          }
        ],
        "MulOf46": [
          [
            "enabled",
            "disabled"
          ],
          {
            "default": "enabled"
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleFactorSimple _O",
    "display_name": "ImageScaleFactorSimple _O",
    "description": "",
    "category": "O/image",
    "output_node": false
  },
  "Equation1param _O": {
    "input": {
      "required": {
        "x": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "defaultBehavior": "input"
          }
        ],
        "equation": [
          "STRING",
          {
            "multiline": true,
            "default": "x*1"
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "int"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "FLOAT",
      "int"
    ],
    "name": "Equation1param _O",
    "display_name": "Equation1param _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "Equation2params _O": {
    "input": {
      "required": {
        "x": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "defaultBehavior": "input"
          }
        ],
        "y": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "defaultBehavior": "input"
          }
        ],
        "equation": [
          "STRING",
          {
            "multiline": true,
            "default": "x+y"
          }
        ]
      },
      "optional": {
        "equation_2": [
          "STRING",
          {
            "multiline": true,
            "default": "x+y"
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "FLOAT",
      "INT",
      "FLOAT",
      "INT"
    ],
    "name": "Equation2params _O",
    "display_name": "Equation2params _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "floatToInt _O": {
    "input": {
      "required": {
        "float": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "defaultBehavior": "input"
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "floatToInt _O",
    "display_name": "floatToInt _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "intToFloat _O": {
    "input": {
      "required": {
        "int": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "defaultBehavior": "input"
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "intToFloat _O",
    "display_name": "intToFloat _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "floatToText _O": {
    "input": {
      "required": {
        "float": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19,
            "defaultBehavior": "input"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "floatToText _O",
    "display_name": "floatToText _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "GetImage_(Width&Height) _O": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "INT"
    ],
    "name": "GetImage_(Width&Height) _O",
    "display_name": "GetImage_(Width&Height) _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "GetLatent_(Width&Height) _O": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "INT",
      "INT"
    ],
    "name": "GetLatent_(Width&Height) _O",
    "display_name": "GetLatent_(Width&Height) _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "debug messages_O": {
    "input": {
      "required": {
        "messages": [
          "OPENAI_CHAT_MESSAGES"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "debug messages_O",
    "display_name": "debug messages_O",
    "description": "",
    "category": "O/debug/OpenAI/Advanced/ChatGPT",
    "output_node": true
  },
  "debug Completeion _O": {
    "input": {
      "required": {
        "completion": [
          "OPENAI_CHAT_COMPLETION"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "debug Completeion _O",
    "display_name": "debug Completeion _O",
    "description": "",
    "category": "O/debug/OpenAI/Advanced/ChatGPT",
    "output_node": true
  },
  "Debug Text _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "defaultBehavior": "input"
          }
        ],
        "prefix": [
          "STRING",
          {
            "default": "debug",
            "multiline": false
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Debug Text _O",
    "display_name": "Debug Text _O",
    "description": "",
    "category": "O/debug/text",
    "output_node": true
  },
  "Debug Text route _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "defaultBehavior": "input"
          }
        ],
        "prefix": [
          "STRING",
          {
            "default": "debug",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Debug Text route _O",
    "display_name": "Debug Text route _O",
    "description": "",
    "category": "O/debug/text",
    "output_node": false
  },
  "Note _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Note _O",
    "display_name": "Note _O",
    "description": "",
    "category": "O/utils",
    "output_node": true
  },
  "Text _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text _O",
    "display_name": "Text _O",
    "description": "",
    "category": "O/utils",
    "output_node": false
  },
  "seed _O": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "seed _O",
    "display_name": "seed _O",
    "description": "",
    "category": "O/utils",
    "output_node": false
  },
  "int _O": {
    "input": {
      "required": {
        "int": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "int _O",
    "display_name": "int _O",
    "description": "",
    "category": "O/utils",
    "output_node": false
  },
  "float _O": {
    "input": {
      "required": {
        "float": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "float _O",
    "display_name": "float _O",
    "description": "",
    "category": "O/utils",
    "output_node": false
  },
  "ChatGPT _O": {
    "input": {
      "required": {
        "api_key_file": [
          "STRING",
          {
            "file": true,
            "default": "api_key.txt"
          }
        ]
      }
    },
    "output": [
      "OPENAI"
    ],
    "output_is_list": [false],
    "output_name": [
      "OPENAI"
    ],
    "name": "ChatGPT _O",
    "display_name": "ChatGPT _O",
    "description": "",
    "category": "O/OpenAI/Advanced",
    "output_node": false
  },
  "Chat_Message_fromString _O": {
    "input": {
      "required": {
        "role": [
          [
            "user",
            "assistant",
            "system"
          ],
          {
            "default": "user"
          }
        ],
        "content": [
          "STR"
        ]
      }
    },
    "output": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "output_is_list": [false],
    "output_name": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "name": "Chat_Message_fromString _O",
    "display_name": "Chat_Message_fromString _O",
    "description": "",
    "category": "O/deprecated/OpenAI/Advanced/ChatGPT",
    "output_node": false
  },
  "compine_chat_messages _O": {
    "input": {
      "required": {
        "message1": [
          "OPENAI_CHAT_MESSAGES"
        ],
        "message2": [
          "OPENAI_CHAT_MESSAGES"
        ]
      }
    },
    "output": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "output_is_list": [false],
    "output_name": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "name": "compine_chat_messages _O",
    "display_name": "compine_chat_messages _O",
    "description": "",
    "category": "O/deprecated/OpenAI/Advanced/ChatGPT",
    "output_node": false
  },
  "Chat_Completion _O": {
    "input": {
      "required": {
        "openai": [
          "OPENAI"
        ],
        "model": [
          "STRING",
          {
            "multiline": false,
            "default": "gpt-3.5-turbo"
          }
        ],
        "messages": [
          "OPENAI_CHAT_MESSAGES"
        ]
      }
    },
    "output": [
      "STR",
      "OPENAI_CHAT_COMPLETION"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STR",
      "OPENAI_CHAT_COMPLETION"
    ],
    "name": "Chat_Completion _O",
    "display_name": "Chat_Completion _O",
    "description": "",
    "category": "O/deprecated/OpenAI/Advanced/ChatGPT",
    "output_node": true
  },
  "create_image _O": {
    "input": {
      "required": {
        "openai": [
          "OPENAI"
        ],
        "prompt": [
          "STR"
        ],
        "number": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "size": [
          [
            "256x256",
            "512x512",
            "1024x1024"
          ],
          {
            "default": "256x256"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "create_image _O",
    "display_name": "create_image _O",
    "description": "",
    "category": "O/deprecated/OpenAI/Advanced/Image",
    "output_node": true
  },
  "String _O": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STR"
    ],
    "output_is_list": [false],
    "output_name": [
      "STR"
    ],
    "name": "String _O",
    "display_name": "String _O",
    "description": "",
    "category": "O/deprecated/string",
    "output_node": false
  },
  "Debug String _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Debug String _O",
    "display_name": "Debug String _O",
    "description": "",
    "category": "O/deprecated/string",
    "output_node": true
  },
  "concat Strings _O": {
    "input": {
      "required": {
        "string1": [
          "STR"
        ],
        "string2": [
          "STR"
        ]
      }
    },
    "output": [
      "STR"
    ],
    "output_is_list": [false],
    "output_name": [
      "STR"
    ],
    "name": "concat Strings _O",
    "display_name": "concat Strings _O",
    "description": "",
    "category": "O/deprecated/string/operations",
    "output_node": false
  },
  "trim String _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ]
      }
    },
    "output": [
      "STR"
    ],
    "output_is_list": [false],
    "output_name": [
      "STR"
    ],
    "name": "trim String _O",
    "display_name": "trim String _O",
    "description": "",
    "category": "O/deprecated/string/operations",
    "output_node": false
  },
  "replace String _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ],
        "old": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "new": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STR"
    ],
    "output_is_list": [false],
    "output_name": [
      "STR"
    ],
    "name": "replace String _O",
    "display_name": "replace String _O",
    "description": "",
    "category": "O/deprecated/string/operations",
    "output_node": false
  },
  "replace String advanced _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ],
        "old": [
          "STR"
        ],
        "new": [
          "STR"
        ]
      }
    },
    "output": [
      "STR"
    ],
    "output_is_list": [false],
    "output_name": [
      "STR"
    ],
    "name": "replace String advanced _O",
    "display_name": "replace String advanced _O",
    "description": "",
    "category": "O/deprecated/string/operations",
    "output_node": false
  },
  "string2Image _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ],
        "font": [
          "STRING",
          {
            "default": "CALIBRI.TTF",
            "multiline": false
          }
        ],
        "size": [
          "INT",
          {
            "default": 36,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_R": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_G": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_B": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_R": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_G": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_B": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "string2Image _O",
    "display_name": "string2Image _O",
    "description": "",
    "category": "O/deprecated/string",
    "output_node": false
  },
  "CLIPStringEncode _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPStringEncode _O",
    "display_name": "CLIPStringEncode _O",
    "description": "",
    "category": "O/deprecated/string",
    "output_node": false
  },
  "LatentUpscaleMultiply": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "WidthMul": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0,
            "max": 10,
            "step": 0.1
          }
        ],
        "HeightMul": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0,
            "max": 10,
            "step": 0.1
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscaleMultiply",
    "display_name": "LatentUpscaleMultiply",
    "description": "",
    "category": "O/deprecated/latent",
    "output_node": false
  },
  "ReActorFaceSwap": {
    "input": {
      "required": {
        "enabled": [
          "BOOLEAN",
          {
            "default": true,
            "label_off": "OFF",
            "label_on": "ON"
          }
        ],
        "input_image": [
          "IMAGE"
        ],
        "swap_model": [
          [
            "inswapper_128.onnx"
          ]
        ],
        "facedetection": [
          [
            "retinaface_resnet50",
            "retinaface_mobile0.25",
            "YOLOv5l",
            "YOLOv5n"
          ]
        ],
        "face_restore_model": [
          [
            "none",
            "codeformer-v0.1.0.pth",
            "GFPGANv1.3.pth",
            "GFPGANv1.4.pth",
            "GPEN-BFR-512.onnx"
          ]
        ],
        "face_restore_visibility": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 1,
            "step": 0.05
          }
        ],
        "codeformer_weight": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "detect_gender_input": [
          [
            "no",
            "female",
            "male"
          ],
          {
            "default": "no"
          }
        ],
        "detect_gender_source": [
          [
            "no",
            "female",
            "male"
          ],
          {
            "default": "no"
          }
        ],
        "input_faces_index": [
          "STRING",
          {
            "default": "0"
          }
        ],
        "source_faces_index": [
          "STRING",
          {
            "default": "0"
          }
        ],
        "console_log_level": [
          [0, 1, 2],
          {
            "default": 1
          }
        ]
      },
      "optional": {
        "source_image": [
          "IMAGE"
        ],
        "face_model": [
          "FACE_MODEL"
        ]
      },
      "hidden": {
        "faces_order": "FACES_ORDER"
      }
    },
    "output": [
      "IMAGE",
      "FACE_MODEL"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "FACE_MODEL"
    ],
    "name": "ReActorFaceSwap",
    "display_name": "ReActor 🌌 Fast Face Swap",
    "description": "",
    "category": "🌌 ReActor",
    "output_node": false
  },
  "ReActorFaceSwapOpt": {
    "input": {
      "required": {
        "enabled": [
          "BOOLEAN",
          {
            "default": true,
            "label_off": "OFF",
            "label_on": "ON"
          }
        ],
        "input_image": [
          "IMAGE"
        ],
        "swap_model": [
          [
            "inswapper_128.onnx"
          ]
        ],
        "facedetection": [
          [
            "retinaface_resnet50",
            "retinaface_mobile0.25",
            "YOLOv5l",
            "YOLOv5n"
          ]
        ],
        "face_restore_model": [
          [
            "none",
            "codeformer-v0.1.0.pth",
            "GFPGANv1.3.pth",
            "GFPGANv1.4.pth",
            "GPEN-BFR-512.onnx"
          ]
        ],
        "face_restore_visibility": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 1,
            "step": 0.05
          }
        ],
        "codeformer_weight": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "source_image": [
          "IMAGE"
        ],
        "face_model": [
          "FACE_MODEL"
        ],
        "options": [
          "OPTIONS"
        ]
      }
    },
    "output": [
      "IMAGE",
      "FACE_MODEL"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "FACE_MODEL"
    ],
    "name": "ReActorFaceSwapOpt",
    "display_name": "ReActor 🌌 Fast Face Swap [OPTIONS]",
    "description": "",
    "category": "🌌 ReActor",
    "output_node": false
  },
  "ReActorOptions": {
    "input": {
      "required": {
        "input_faces_order": [
          [
            "left-right",
            "right-left",
            "top-bottom",
            "bottom-top",
            "small-large",
            "large-small"
          ],
          {
            "default": "large-small"
          }
        ],
        "input_faces_index": [
          "STRING",
          {
            "default": "0"
          }
        ],
        "detect_gender_input": [
          [
            "no",
            "female",
            "male"
          ],
          {
            "default": "no"
          }
        ],
        "source_faces_order": [
          [
            "left-right",
            "right-left",
            "top-bottom",
            "bottom-top",
            "small-large",
            "large-small"
          ],
          {
            "default": "large-small"
          }
        ],
        "source_faces_index": [
          "STRING",
          {
            "default": "0"
          }
        ],
        "detect_gender_source": [
          [
            "no",
            "female",
            "male"
          ],
          {
            "default": "no"
          }
        ],
        "console_log_level": [
          [0, 1, 2],
          {
            "default": 1
          }
        ]
      }
    },
    "output": [
      "OPTIONS"
    ],
    "output_is_list": [false],
    "output_name": [
      "OPTIONS"
    ],
    "name": "ReActorOptions",
    "display_name": "ReActor 🌌 Options",
    "description": "",
    "category": "🌌 ReActor",
    "output_node": false
  },
  "ReActorSaveFaceModel": {
    "input": {
      "required": {
        "save_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_off": "OFF",
            "label_on": "ON"
          }
        ],
        "face_model_name": [
          "STRING",
          {
            "default": "default"
          }
        ],
        "select_face_index": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "face_model": [
          "FACE_MODEL"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ReActorSaveFaceModel",
    "display_name": "Save Face Model 🌌 ReActor",
    "description": "",
    "category": "🌌 ReActor",
    "output_node": true
  },
  "ReActorLoadFaceModel": {
    "input": {
      "required": {
        "face_model": [
          [
            "none"
          ]
        ]
      }
    },
    "output": [
      "FACE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "FACE_MODEL"
    ],
    "name": "ReActorLoadFaceModel",
    "display_name": "Load Face Model 🌌 ReActor",
    "description": "",
    "category": "🌌 ReActor",
    "output_node": false
  },
  "ReActorBuildFaceModel": {
    "input": {
      "required": {
        "save_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_off": "OFF",
            "label_on": "ON"
          }
        ],
        "send_only": [
          "BOOLEAN",
          {
            "default": false,
            "label_off": "NO",
            "label_on": "YES"
          }
        ],
        "face_model_name": [
          "STRING",
          {
            "default": "default"
          }
        ],
        "compute_method": [
          [
            "Mean",
            "Median",
            "Mode"
          ],
          {
            "default": "Mean"
          }
        ]
      },
      "optional": {
        "images": [
          "IMAGE"
        ],
        "face_models": [
          "FACE_MODEL"
        ]
      }
    },
    "output": [
      "FACE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "FACE_MODEL"
    ],
    "name": "ReActorBuildFaceModel",
    "display_name": "Build Blended Face Model 🌌 ReActor",
    "description": "",
    "category": "🌌 ReActor",
    "output_node": true
  },
  "ReActorMakeFaceModelBatch": {
    "input": {
      "required": {
        "face_model1": [
          "FACE_MODEL"
        ]
      },
      "optional": {
        "face_model2": [
          "FACE_MODEL"
        ],
        "face_model3": [
          "FACE_MODEL"
        ],
        "face_model4": [
          "FACE_MODEL"
        ],
        "face_model5": [
          "FACE_MODEL"
        ],
        "face_model6": [
          "FACE_MODEL"
        ],
        "face_model7": [
          "FACE_MODEL"
        ],
        "face_model8": [
          "FACE_MODEL"
        ],
        "face_model9": [
          "FACE_MODEL"
        ],
        "face_model10": [
          "FACE_MODEL"
        ]
      }
    },
    "output": [
      "FACE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "FACE_MODELS"
    ],
    "name": "ReActorMakeFaceModelBatch",
    "display_name": "Make Face Model Batch 🌌 ReActor",
    "description": "",
    "category": "🌌 ReActor",
    "output_node": false
  },
  "ReActorRestoreFace": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "facedetection": [
          [
            "retinaface_resnet50",
            "retinaface_mobile0.25",
            "YOLOv5l",
            "YOLOv5n"
          ]
        ],
        "model": [
          [
            "none",
            "codeformer-v0.1.0.pth",
            "GFPGANv1.3.pth",
            "GFPGANv1.4.pth",
            "GPEN-BFR-512.onnx"
          ]
        ],
        "visibility": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "codeformer_weight": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ReActorRestoreFace",
    "display_name": "Restore Face 🌌 ReActor",
    "description": "",
    "category": "🌌 ReActor",
    "output_node": false
  },
  "ReActorImageDublicator": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "count": [
          "INT",
          {
            "default": 1,
            "min": 0
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [true],
    "output_name": [
      "IMAGES"
    ],
    "name": "ReActorImageDublicator",
    "display_name": "Image Dublicator (List) 🌌 ReActor",
    "description": "",
    "category": "🌌 ReActor",
    "output_node": false
  },
  "ImageRGBA2RGB": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageRGBA2RGB",
    "display_name": "Convert RGBA to RGB 🌌 ReActor",
    "description": "",
    "category": "🌌 ReActor",
    "output_node": false
  },
  "AnimeFace_SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "remove_background_using_abg": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 512,
            "max": 512,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "ABG_CHARACTER_MASK (MASK)"
    ],
    "name": "AnimeFace_SemSegPreprocessor",
    "display_name": "Anime Face Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "AnyLineArtPreprocessor_aux": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "merge_with_lineart": [
          [
            "lineart_standard",
            "lineart_realisitic",
            "lineart_anime",
            "manga_line"
          ],
          {
            "default": "lineart_standard"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 1280,
            "min": 512,
            "max": 16384,
            "step": 8
          }
        ]
      },
      "optional": {
        "lineart_lower_bound": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "lineart_upper_bound": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "object_min_size": [
          "INT",
          {
            "default": 36,
            "min": 1,
            "max": 16384
          }
        ],
        "object_connectivity": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 16384
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "AnyLineArtPreprocessor_aux",
    "display_name": "AnyLine Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "BinaryPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bin_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BinaryPreprocessor",
    "display_name": "Binary Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "CannyEdgePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "low_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "high_threshold": [
          "INT",
          {
            "default": 200,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "CannyEdgePreprocessor",
    "display_name": "Canny Edge",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "ColorPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ColorPreprocessor",
    "display_name": "Color Pallete",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "DensePosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "model": [
          [
            "densepose_r50_fpn_dl.torchscript",
            "densepose_r101_fpn_dl.torchscript"
          ],
          {
            "default": "densepose_r50_fpn_dl.torchscript"
          }
        ],
        "cmap": [
          [
            "Viridis (MagicAnimate)",
            "Parula (CivitAI)"
          ],
          {
            "default": "Viridis (MagicAnimate)"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DensePosePreprocessor",
    "display_name": "DensePose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "ckpt_name": [
          [
            "depth_anything_vitl14.pth",
            "depth_anything_vitb14.pth",
            "depth_anything_vits14.pth"
          ],
          {
            "default": "depth_anything_vitl14.pth"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DepthAnythingPreprocessor",
    "display_name": "Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Zoe_DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "environment": [
          [
            "indoor",
            "outdoor"
          ],
          {
            "default": "indoor"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Zoe_DepthAnythingPreprocessor",
    "display_name": "Zoe Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "DiffusionEdge_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "environment": [
          [
            "indoor",
            "urban",
            "natrual"
          ],
          {
            "default": "indoor"
          }
        ],
        "patch_batch_size": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DiffusionEdge_Preprocessor",
    "display_name": "Diffusion Edge (batch size ↑ =\u003E speed ↑, VRAM ↑)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "DSINE-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "fov": [
          "FLOAT",
          {
            "min": 0,
            "max": 365,
            "step": 0.05,
            "default": 60
          }
        ],
        "iterations": [
          "INT",
          {
            "min": 1,
            "max": 20,
            "step": 1,
            "default": 5
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DSINE-NormalMapPreprocessor",
    "display_name": "DSINE Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "DWPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.onnx"
          }
        ],
        "pose_estimator": [
          [
            "dw-ll_ucoco_384_bs5.torchscript.pt",
            "dw-ll_ucoco_384.onnx",
            "dw-ll_ucoco.onnx"
          ],
          {
            "default": "dw-ll_ucoco_384_bs5.torchscript.pt"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "DWPreprocessor",
    "display_name": "DWPose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "AnimalPosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.torchscript.pt"
          }
        ],
        "pose_estimator": [
          [
            "rtmpose-m_ap10k_256_bs5.torchscript.pt",
            "rtmpose-m_ap10k_256.onnx"
          ],
          {
            "default": "rtmpose-m_ap10k_256_bs5.torchscript.pt"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "AnimalPosePreprocessor",
    "display_name": "AnimalPose Estimator (AP10K)",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "HEDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "HEDPreprocessor",
    "display_name": "HED Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "FakeScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "FakeScribblePreprocessor",
    "display_name": "Fake Scribble Lines (aka scribble_hed)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "InpaintPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "InpaintPreprocessor",
    "display_name": "Inpaint Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "LeReS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "rm_nearest": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "rm_background": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "boost": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "LeReS-DepthMapPreprocessor",
    "display_name": "LeReS Depth Map (enable boost for leres++)",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "LineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "coarse": [
          [
            "disable",
            "enable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "LineArtPreprocessor",
    "display_name": "Realistic Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "AnimeLineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AnimeLineArtPreprocessor",
    "display_name": "Anime Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "LineartStandardPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "guassian_sigma": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 100
          }
        ],
        "intensity_threshold": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "LineartStandardPreprocessor",
    "display_name": "Standard Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Manga2Anime_LineArt_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Manga2Anime_LineArt_Preprocessor",
    "display_name": "Manga Lineart (aka lineart_anime_denoise)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "MediaPipe-FaceMeshPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "min_confidence": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "MediaPipe-FaceMeshPreprocessor",
    "display_name": "MediaPipe Face Mesh",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "MeshGraphormer-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "mask_bbox_padding": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 100
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "mask_type": [
          [
            "based_on_depth",
            "tight_bboxes",
            "original"
          ],
          {
            "default": "based_on_depth"
          }
        ],
        "mask_expand": [
          "INT",
          {
            "default": 5,
            "min": -16384,
            "max": 16384,
            "step": 1
          }
        ],
        "rand_seed": [
          "INT",
          {
            "default": 88,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "detect_thr": [
          "FLOAT",
          {
            "default": 0.6,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "presence_thr": [
          "FLOAT",
          {
            "default": 0.6,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "INPAINTING_MASK"
    ],
    "name": "MeshGraphormer-DepthMapPreprocessor",
    "display_name": "MeshGraphormer Hand Refiner",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "MeshGraphormer+ImpactDetector-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ]
      },
      "optional": {
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 16384,
            "step": 1,
            "default": 10
          }
        ],
        "mask_bbox_padding": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 100
          }
        ],
        "mask_type": [
          [
            "based_on_depth",
            "tight_bboxes",
            "original"
          ],
          {
            "default": "based_on_depth"
          }
        ],
        "mask_expand": [
          "INT",
          {
            "default": 5,
            "min": -16384,
            "max": 16384,
            "step": 1
          }
        ],
        "rand_seed": [
          "INT",
          {
            "default": 88,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "INPAINTING_MASK"
    ],
    "name": "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
    "display_name": "MeshGraphormer Hand Refiner With External Detector",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Metric3D-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "backbone": [
          [
            "vit-small",
            "vit-large",
            "vit-giant2"
          ],
          {
            "default": "vit-small"
          }
        ],
        "fx": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 16384
          }
        ],
        "fy": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 16384
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Metric3D-DepthMapPreprocessor",
    "display_name": "Metric3D Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Metric3D-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "backbone": [
          [
            "vit-small",
            "vit-large",
            "vit-giant2"
          ],
          {
            "default": "vit-small"
          }
        ],
        "fx": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 16384
          }
        ],
        "fy": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 16384
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Metric3D-NormalMapPreprocessor",
    "display_name": "Metric3D Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "MiDaS-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "MiDaS-NormalMapPreprocessor",
    "display_name": "MiDaS Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "MiDaS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "MiDaS-DepthMapPreprocessor",
    "display_name": "MiDaS Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "M-LSDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "score_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 2,
            "step": 0.01
          }
        ],
        "dist_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 20,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "M-LSDPreprocessor",
    "display_name": "M-LSD Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "BAE-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "BAE-NormalMapPreprocessor",
    "display_name": "BAE Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "OneFormer-COCO-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "OneFormer-COCO-SemSegPreprocessor",
    "display_name": "OneFormer COCO Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "OneFormer-ADE20K-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "OneFormer-ADE20K-SemSegPreprocessor",
    "display_name": "OneFormer ADE20K Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "OpenposePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "POSE_KEYPOINT"
    ],
    "name": "OpenposePreprocessor",
    "display_name": "OpenPose Pose",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "PiDiNetPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "PiDiNetPreprocessor",
    "display_name": "PiDiNet Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "SavePoseKpsAsJsonFile": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "PoseKeypoint"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SavePoseKpsAsJsonFile",
    "display_name": "Save Pose Keypoints",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": true
  },
  "FacialPartColoringFromPoseKps": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "mode": [
          [
            "point",
            "polygon"
          ],
          {
            "default": "polygon"
          }
        ],
        "skin": [
          "STRING",
          {
            "default": "rgb(0, 153, 255)",
            "multiline": false
          }
        ],
        "left_eye": [
          "STRING",
          {
            "default": "rgb(0, 204, 153)",
            "multiline": false
          }
        ],
        "right_eye": [
          "STRING",
          {
            "default": "rgb(255, 153, 0)",
            "multiline": false
          }
        ],
        "nose": [
          "STRING",
          {
            "default": "rgb(255, 102, 255)",
            "multiline": false
          }
        ],
        "upper_lip": [
          "STRING",
          {
            "default": "rgb(102, 0, 51)",
            "multiline": false
          }
        ],
        "inner_mouth": [
          "STRING",
          {
            "default": "rgb(255, 204, 255)",
            "multiline": false
          }
        ],
        "lower_lip": [
          "STRING",
          {
            "default": "rgb(255, 0, 102)",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "FacialPartColoringFromPoseKps",
    "display_name": "Colorize Facial Parts from PoseKPS",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": false
  },
  "UpperBodyTrackingFromPoseKps": {
    "input": {
      "required": {
        "pose_kps": [
          "POSE_KEYPOINT"
        ],
        "id_include": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "Head_width_height": [
          "STRING",
          {
            "default": "256, 256",
            "multiline": false
          }
        ],
        "Neck_width_height": [
          "STRING",
          {
            "default": "100, 100",
            "multiline": false
          }
        ],
        "Shoulder_width_height": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "Torso_width_height": [
          "STRING",
          {
            "default": "350, 450",
            "multiline": false
          }
        ],
        "RArm_width_height": [
          "STRING",
          {
            "default": "128, 256",
            "multiline": false
          }
        ],
        "RForearm_width_height": [
          "STRING",
          {
            "default": "128, 256",
            "multiline": false
          }
        ],
        "LArm_width_height": [
          "STRING",
          {
            "default": "128, 256",
            "multiline": false
          }
        ],
        "LForearm_width_height": [
          "STRING",
          {
            "default": "128, 256",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "TRACKING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "tracking",
      "prompt"
    ],
    "name": "UpperBodyTrackingFromPoseKps",
    "display_name": "Upper Body Tracking From PoseKps (InstanceDiffusion)",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": false
  },
  "ImageLuminanceDetector": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 2,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageLuminanceDetector",
    "display_name": "Image Luminance",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "ImageIntensityDetector": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 2,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageIntensityDetector",
    "display_name": "Image Intensity",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "ScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ScribblePreprocessor",
    "display_name": "Scribble Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Scribble_XDoG_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "threshold": [
          "INT",
          {
            "default": 32,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Scribble_XDoG_Preprocessor",
    "display_name": "Scribble XDoG Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Scribble_PiDiNet_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Scribble_PiDiNet_Preprocessor",
    "display_name": "Scribble PiDiNet Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "SAMPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "SAMPreprocessor",
    "display_name": "SAM Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "ShufflePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ShufflePreprocessor",
    "display_name": "Content Shuffle",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "TEEDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe_steps": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "TEEDPreprocessor",
    "display_name": "TEEDPreprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "TilePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "pyrUp_iters": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "TilePreprocessor",
    "display_name": "Tile",
    "description": "",
    "category": "ControlNet Preprocessors/tile",
    "output_node": false
  },
  "TTPlanet_TileGF_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "scale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 8,
            "step": 0.05
          }
        ],
        "blur_strength": [
          "FLOAT",
          {
            "default": 2,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "radius": [
          "INT",
          {
            "default": 7,
            "min": 1,
            "max": 20,
            "step": 1
          }
        ],
        "eps": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.001,
            "max": 0.1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "TTPlanet_TileGF_Preprocessor",
    "display_name": "TTPlanet Tile GuidedFilter",
    "description": "",
    "category": "ControlNet Preprocessors/tile",
    "output_node": false
  },
  "TTPlanet_TileSimple_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "scale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 8,
            "step": 0.05
          }
        ],
        "blur_strength": [
          "FLOAT",
          {
            "default": 2,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "TTPlanet_TileSimple_Preprocessor",
    "display_name": "TTPlanet Tile Simple",
    "description": "",
    "category": "ControlNet Preprocessors/tile",
    "output_node": false
  },
  "UniFormer-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "UniFormer-SemSegPreprocessor",
    "display_name": "UniFormer Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "SemSegPreprocessor",
    "display_name": "Semantic Segmentor (legacy, alias for UniFormer)",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "Unimatch_OptFlowPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "ckpt_name": [
          [
            "gmflow-scale1-mixdata.pth",
            "gmflow-scale2-mixdata.pth",
            "gmflow-scale2-regrefine6-mixdata.pth"
          ],
          {
            "default": "gmflow-scale2-regrefine6-mixdata.pth"
          }
        ],
        "backward_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "bidirectional_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "OPTICAL_FLOW",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "OPTICAL_FLOW",
      "PREVIEW_IMAGE"
    ],
    "name": "Unimatch_OptFlowPreprocessor",
    "display_name": "Unimatch Optical Flow",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "MaskOptFlow": {
    "input": {
      "required": {
        "optical_flow": [
          "OPTICAL_FLOW"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "OPTICAL_FLOW",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "OPTICAL_FLOW",
      "PREVIEW_IMAGE"
    ],
    "name": "MaskOptFlow",
    "display_name": "Mask Optical Flow (DragNUWA)",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "Zoe-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Zoe-DepthMapPreprocessor",
    "display_name": "Zoe Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "AIO_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "preprocessor": [
          [
            "none",
            "AnimeFace_SemSegPreprocessor",
            "AnyLineArtPreprocessor_aux",
            "BinaryPreprocessor",
            "CannyEdgePreprocessor",
            "ColorPreprocessor",
            "DensePosePreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "DiffusionEdge_Preprocessor",
            "DSINE-NormalMapPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "LeReS-DepthMapPreprocessor",
            "LineArtPreprocessor",
            "AnimeLineArtPreprocessor",
            "LineartStandardPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
            "Metric3D-DepthMapPreprocessor",
            "Metric3D-NormalMapPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "M-LSDPreprocessor",
            "BAE-NormalMapPreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "OpenposePreprocessor",
            "PiDiNetPreprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "UpperBodyTrackingFromPoseKps",
            "ImageLuminanceDetector",
            "ImageIntensityDetector",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "Scribble_PiDiNet_Preprocessor",
            "SAMPreprocessor",
            "ShufflePreprocessor",
            "TEEDPreprocessor",
            "TilePreprocessor",
            "TTPlanet_TileGF_Preprocessor",
            "TTPlanet_TileSimple_Preprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "Zoe-DepthMapPreprocessor"
          ],
          {
            "default": "none"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "AIO_Preprocessor",
    "display_name": "AIO Aux Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ControlNetPreprocessorSelector": {
    "input": {
      "required": {
        "preprocessor": [
          [
            "none",
            "AnimeFace_SemSegPreprocessor",
            "AnyLineArtPreprocessor_aux",
            "BinaryPreprocessor",
            "CannyEdgePreprocessor",
            "ColorPreprocessor",
            "DensePosePreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "DiffusionEdge_Preprocessor",
            "DSINE-NormalMapPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "LeReS-DepthMapPreprocessor",
            "LineArtPreprocessor",
            "AnimeLineArtPreprocessor",
            "LineartStandardPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
            "Metric3D-DepthMapPreprocessor",
            "Metric3D-NormalMapPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "M-LSDPreprocessor",
            "BAE-NormalMapPreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "OpenposePreprocessor",
            "PiDiNetPreprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "UpperBodyTrackingFromPoseKps",
            "ImageLuminanceDetector",
            "ImageIntensityDetector",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "Scribble_PiDiNet_Preprocessor",
            "SAMPreprocessor",
            "ShufflePreprocessor",
            "TEEDPreprocessor",
            "TilePreprocessor",
            "TTPlanet_TileGF_Preprocessor",
            "TTPlanet_TileSimple_Preprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "Zoe-DepthMapPreprocessor"
          ]
        ]
      }
    },
    "output": [
      [
        "none",
        "AnimeFace_SemSegPreprocessor",
        "AnyLineArtPreprocessor_aux",
        "BinaryPreprocessor",
        "CannyEdgePreprocessor",
        "ColorPreprocessor",
        "DensePosePreprocessor",
        "DepthAnythingPreprocessor",
        "Zoe_DepthAnythingPreprocessor",
        "DiffusionEdge_Preprocessor",
        "DSINE-NormalMapPreprocessor",
        "DWPreprocessor",
        "AnimalPosePreprocessor",
        "HEDPreprocessor",
        "FakeScribblePreprocessor",
        "LeReS-DepthMapPreprocessor",
        "LineArtPreprocessor",
        "AnimeLineArtPreprocessor",
        "LineartStandardPreprocessor",
        "Manga2Anime_LineArt_Preprocessor",
        "MediaPipe-FaceMeshPreprocessor",
        "MeshGraphormer-DepthMapPreprocessor",
        "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
        "Metric3D-DepthMapPreprocessor",
        "Metric3D-NormalMapPreprocessor",
        "MiDaS-NormalMapPreprocessor",
        "MiDaS-DepthMapPreprocessor",
        "M-LSDPreprocessor",
        "BAE-NormalMapPreprocessor",
        "OneFormer-COCO-SemSegPreprocessor",
        "OneFormer-ADE20K-SemSegPreprocessor",
        "OpenposePreprocessor",
        "PiDiNetPreprocessor",
        "SavePoseKpsAsJsonFile",
        "FacialPartColoringFromPoseKps",
        "UpperBodyTrackingFromPoseKps",
        "ImageLuminanceDetector",
        "ImageIntensityDetector",
        "ScribblePreprocessor",
        "Scribble_XDoG_Preprocessor",
        "Scribble_PiDiNet_Preprocessor",
        "SAMPreprocessor",
        "ShufflePreprocessor",
        "TEEDPreprocessor",
        "TilePreprocessor",
        "TTPlanet_TileGF_Preprocessor",
        "TTPlanet_TileSimple_Preprocessor",
        "UniFormer-SemSegPreprocessor",
        "SemSegPreprocessor",
        "Unimatch_OptFlowPreprocessor",
        "MaskOptFlow",
        "Zoe-DepthMapPreprocessor"
      ]
    ],
    "output_is_list": [false],
    "output_name": [
      "preprocessor"
    ],
    "name": "ControlNetPreprocessorSelector",
    "display_name": "Preprocessor Selector",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "PixelPerfectResolution": {
    "input": {
      "required": {
        "original_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "RESOLUTION (INT)"
    ],
    "name": "PixelPerfectResolution",
    "display_name": "Pixel Perfect Resolution",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ImageGenResolutionFromImage": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "ImageGenResolutionFromImage",
    "display_name": "Generation Resolution From Image",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ImageGenResolutionFromLatent": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "ImageGenResolutionFromLatent",
    "display_name": "Generation Resolution From Latent",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "HintImageEnchance": {
    "input": {
      "required": {
        "hint_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "HintImageEnchance",
    "display_name": "Enchance And Resize Hint Images",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "InstantIDModelLoader": {
    "input": {
      "required": {
        "instantid_file": [
          [
            "ip-adapter.bin"
          ]
        ]
      }
    },
    "output": [
      "INSTANTID"
    ],
    "output_is_list": [false],
    "output_name": [
      "INSTANTID"
    ],
    "name": "InstantIDModelLoader",
    "display_name": "Load InstantID Model",
    "description": "",
    "category": "InstantID",
    "output_node": false
  },
  "InstantIDFaceAnalysis": {
    "input": {
      "required": {
        "provider": [
          [
            "CPU",
            "CUDA",
            "ROCM"
          ]
        ]
      }
    },
    "output": [
      "FACEANALYSIS"
    ],
    "output_is_list": [false],
    "output_name": [
      "FACEANALYSIS"
    ],
    "name": "InstantIDFaceAnalysis",
    "display_name": "InstantID Face Analysis",
    "description": "",
    "category": "InstantID",
    "output_node": false
  },
  "ApplyInstantID": {
    "input": {
      "required": {
        "instantid": [
          "INSTANTID"
        ],
        "insightface": [
          "FACEANALYSIS"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "image_kps": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "positive",
      "negative"
    ],
    "name": "ApplyInstantID",
    "display_name": "Apply InstantID",
    "description": "",
    "category": "InstantID",
    "output_node": false
  },
  "ApplyInstantIDAdvanced": {
    "input": {
      "required": {
        "instantid": [
          "INSTANTID"
        ],
        "insightface": [
          "FACEANALYSIS"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "ip_weight": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 3,
            "step": 0.01
          }
        ],
        "cn_strength": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ],
        "combine_embeds": [
          [
            "average",
            "norm average",
            "concat"
          ],
          {
            "default": "average"
          }
        ]
      },
      "optional": {
        "image_kps": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "positive",
      "negative"
    ],
    "name": "ApplyInstantIDAdvanced",
    "display_name": "Apply InstantID Advanced",
    "description": "",
    "category": "InstantID",
    "output_node": false
  },
  "FaceKeypointsPreprocessor": {
    "input": {
      "required": {
        "faceanalysis": [
          "FACEANALYSIS"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "FaceKeypointsPreprocessor",
    "display_name": "Face Keypoints Preprocessor",
    "description": "",
    "category": "InstantID",
    "output_node": false
  },
  "InstantIDAttentionPatch": {
    "input": {
      "required": {
        "instantid": [
          "INSTANTID"
        ],
        "insightface": [
          "FACEANALYSIS"
        ],
        "image": [
          "IMAGE"
        ],
        "model": [
          "MODEL"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.01
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MODEL",
      "FACE_EMBEDS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "FACE_EMBEDS"
    ],
    "name": "InstantIDAttentionPatch",
    "display_name": "InstantID Patch Attention",
    "description": "",
    "category": "InstantID",
    "output_node": false
  },
  "ApplyInstantIDControlNet": {
    "input": {
      "required": {
        "face_embeds": [
          "FACE_EMBEDS"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image_kps": [
          "IMAGE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "ApplyInstantIDControlNet",
    "display_name": "InstantID Apply ControlNet",
    "description": "",
    "category": "InstantID",
    "output_node": false
  },
  "IPAdapter": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "weight_type": [
          [
            "standard",
            "prompt is more important",
            "style transfer"
          ]
        ]
      },
      "optional": {
        "attn_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapter",
    "display_name": "IPAdapter",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterAdvanced",
    "display_name": "IPAdapter Advanced",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ],
        "encode_batch_size": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterBatch",
    "display_name": "IPAdapter Batch (Adv.)",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterFaceID": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_faceidv2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "insightface": [
          "INSIGHTFACE"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "face_image"
    ],
    "name": "IPAdapterFaceID",
    "display_name": "IPAdapter FaceID",
    "description": "",
    "category": "ipadapter/faceid",
    "output_node": false
  },
  "IPAAdapterFaceIDBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_faceidv2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "insightface": [
          "INSIGHTFACE"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "face_image"
    ],
    "name": "IPAAdapterFaceIDBatch",
    "display_name": "IPAdapter FaceID Batch",
    "description": "",
    "category": "ipadapter/faceid",
    "output_node": false
  },
  "IPAdapterTiled": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "sharpening": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "tiles",
      "masks"
    ],
    "name": "IPAdapterTiled",
    "display_name": "IPAdapter Tiled",
    "description": "",
    "category": "ipadapter/tiled",
    "output_node": false
  },
  "IPAdapterTiledBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "sharpening": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ],
        "encode_batch_size": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "tiles",
      "masks"
    ],
    "name": "IPAdapterTiledBatch",
    "display_name": "IPAdapter Tiled Batch",
    "description": "",
    "category": "ipadapter/tiled",
    "output_node": false
  },
  "IPAdapterEmbeds": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "pos_embed": [
          "EMBEDS"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "neg_embed": [
          "EMBEDS"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterEmbeds",
    "display_name": "IPAdapter Embeds",
    "description": "",
    "category": "ipadapter/embeds",
    "output_node": false
  },
  "IPAdapterStyleComposition": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image_style": [
          "IMAGE"
        ],
        "image_composition": [
          "IMAGE"
        ],
        "weight_style": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_composition": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "expand_style": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ],
          {
            "default": "average"
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterStyleComposition",
    "display_name": "IPAdapter Style & Composition SDXL",
    "description": "",
    "category": "ipadapter/style_composition",
    "output_node": false
  },
  "IPAdapterStyleCompositionBatch": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image_style": [
          "IMAGE"
        ],
        "image_composition": [
          "IMAGE"
        ],
        "weight_style": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_composition": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "expand_style": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterStyleCompositionBatch",
    "display_name": "IPAdapter Style & Composition Batch SDXL",
    "description": "",
    "category": "ipadapter/style_composition",
    "output_node": false
  },
  "IPAdapterMS": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_faceidv2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 5,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ],
        "layer_weights": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "attn_mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "insightface": [
          "INSIGHTFACE"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterMS",
    "display_name": "IPAdapter Mad Scientist",
    "description": "",
    "category": "ipadapter/dev",
    "output_node": false
  },
  "IPAdapterFromParams": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ipadapter": [
          "IPADAPTER"
        ],
        "ipadapter_params": [
          "IPADAPTER_PARAMS"
        ],
        "combine_embeds": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average"
          ]
        ],
        "embeds_scaling": [
          [
            "V only",
            "K+V",
            "K+V w/ C penalty",
            "K+mean(V) w/ C penalty"
          ]
        ]
      },
      "optional": {
        "image_negative": [
          "IMAGE"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "IPAdapterFromParams",
    "display_name": "IPAdapter from Params",
    "description": "",
    "category": "ipadapter/params",
    "output_node": false
  },
  "IPAdapterUnifiedLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "preset": [
          [
            "LIGHT - SD1.5 only (low strength)",
            "STANDARD (medium strength)",
            "VIT-G (medium strength)",
            "PLUS (high strength)",
            "PLUS FACE (portraits)",
            "FULL FACE - SD1.5 only (portraits stronger)"
          ]
        ]
      },
      "optional": {
        "ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "model",
      "ipadapter"
    ],
    "name": "IPAdapterUnifiedLoader",
    "display_name": "IPAdapter Unified Loader",
    "description": "",
    "category": "ipadapter",
    "output_node": false
  },
  "IPAdapterUnifiedLoaderFaceID": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "preset": [
          [
            "FACEID",
            "FACEID PLUS - SD1.5 only",
            "FACEID PLUS V2",
            "FACEID PORTRAIT (style transfer)",
            "FACEID PORTRAIT UNNORM - SDXL only (strong)"
          ]
        ],
        "lora_strength": [
          "FLOAT",
          {
            "default": 0.6,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "provider": [
          [
            "CPU",
            "CUDA",
            "ROCM",
            "DirectML",
            "OpenVINO",
            "CoreML"
          ]
        ]
      },
      "optional": {
        "ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "ipadapter"
    ],
    "name": "IPAdapterUnifiedLoaderFaceID",
    "display_name": "IPAdapter Unified Loader FaceID",
    "description": "",
    "category": "ipadapter/faceid",
    "output_node": false
  },
  "IPAdapterModelLoader": {
    "input": {
      "required": {
        "ipadapter_file": [
          [
            "ip-adapter-plus_sdxl_vit-h.bin",
            "ip_adapter_plus_face_sd15/ip_adapter.bin",
            "ip_adapter_plus_face_sdxl_vit-h/ip_adapter.bin",
            "ip_adapter_plus_sd15/ip_adapter.bin",
            "ip_adapter_plus_sdxl_vit-h/ip_adapter.bin"
          ]
        ]
      }
    },
    "output": [
      "IPADAPTER"
    ],
    "output_is_list": [false],
    "output_name": [
      "IPADAPTER"
    ],
    "name": "IPAdapterModelLoader",
    "display_name": "IPAdapter Model Loader",
    "description": "",
    "category": "ipadapter/loaders",
    "output_node": false
  },
  "IPAdapterInsightFaceLoader": {
    "input": {
      "required": {
        "provider": [
          [
            "CPU",
            "CUDA",
            "ROCM"
          ]
        ]
      }
    },
    "output": [
      "INSIGHTFACE"
    ],
    "output_is_list": [false],
    "output_name": [
      "INSIGHTFACE"
    ],
    "name": "IPAdapterInsightFaceLoader",
    "display_name": "IPAdapter InsightFace Loader",
    "description": "",
    "category": "ipadapter/loaders",
    "output_node": false
  },
  "IPAdapterUnifiedLoaderCommunity": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "preset": [
          [
            "Composition"
          ]
        ]
      },
      "optional": {
        "ipadapter": [
          "IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL",
      "IPADAPTER"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "model",
      "ipadapter"
    ],
    "name": "IPAdapterUnifiedLoaderCommunity",
    "display_name": "IPAdapter Unified Loader Community",
    "description": "",
    "category": "ipadapter/loaders",
    "output_node": false
  },
  "IPAdapterEncoder": {
    "input": {
      "required": {
        "ipadapter": [
          "IPADAPTER"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ]
      }
    },
    "output": [
      "EMBEDS",
      "EMBEDS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "pos_embed",
      "neg_embed"
    ],
    "name": "IPAdapterEncoder",
    "display_name": "IPAdapter Encoder",
    "description": "",
    "category": "ipadapter/embeds",
    "output_node": false
  },
  "IPAdapterCombineEmbeds": {
    "input": {
      "required": {
        "embed1": [
          "EMBEDS"
        ],
        "method": [
          [
            "concat",
            "add",
            "subtract",
            "average",
            "norm average",
            "max",
            "min"
          ]
        ]
      },
      "optional": {
        "embed2": [
          "EMBEDS"
        ],
        "embed3": [
          "EMBEDS"
        ],
        "embed4": [
          "EMBEDS"
        ],
        "embed5": [
          "EMBEDS"
        ]
      }
    },
    "output": [
      "EMBEDS"
    ],
    "output_is_list": [false],
    "output_name": [
      "EMBEDS"
    ],
    "name": "IPAdapterCombineEmbeds",
    "display_name": "IPAdapter Combine Embeds",
    "description": "",
    "category": "ipadapter/embeds",
    "output_node": false
  },
  "IPAdapterNoise": {
    "input": {
      "required": {
        "type": [
          [
            "fade",
            "dissolve",
            "gaussian",
            "shuffle"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 32,
            "step": 1
          }
        ]
      },
      "optional": {
        "image_optional": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "IPAdapterNoise",
    "display_name": "IPAdapter Noise",
    "description": "",
    "category": "ipadapter/utils",
    "output_node": false
  },
  "PrepImageForClipVision": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "interpolation": [
          [
            "LANCZOS",
            "BICUBIC",
            "HAMMING",
            "BILINEAR",
            "BOX",
            "NEAREST"
          ]
        ],
        "crop_position": [
          [
            "top",
            "bottom",
            "left",
            "right",
            "center",
            "pad"
          ]
        ],
        "sharpening": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "PrepImageForClipVision",
    "display_name": "Prep Image For ClipVision",
    "description": "",
    "category": "ipadapter/utils",
    "output_node": false
  },
  "IPAdapterSaveEmbeds": {
    "input": {
      "required": {
        "embeds": [
          "EMBEDS"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "IP_embeds"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "IPAdapterSaveEmbeds",
    "display_name": "IPAdapter Save Embeds",
    "description": "",
    "category": "ipadapter/embeds",
    "output_node": true
  },
  "IPAdapterLoadEmbeds": {
    "input": {
      "required": {
        "embeds": [
          []
        ]
      }
    },
    "output": [
      "EMBEDS"
    ],
    "output_is_list": [false],
    "output_name": [
      "EMBEDS"
    ],
    "name": "IPAdapterLoadEmbeds",
    "display_name": "IPAdapter Load Embeds",
    "description": "",
    "category": "ipadapter/embeds",
    "output_node": false
  },
  "IPAdapterWeights": {
    "input": {
      "required": {
        "weights": [
          "STRING",
          {
            "default": "1.0, 0.0",
            "multiline": true
          }
        ],
        "timing": [
          [
            "custom",
            "linear",
            "ease_in_out",
            "ease_in",
            "ease_out",
            "random"
          ],
          {
            "default": "linear"
          }
        ],
        "frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "end_frame": [
          "INT",
          {
            "default": 9999,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "add_starting_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "add_ending_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999,
            "step": 1
          }
        ],
        "method": [
          [
            "full batch",
            "shift batches",
            "alternate batches"
          ],
          {
            "default": "full batch"
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT",
      "INT",
      "IMAGE",
      "IMAGE",
      "WEIGHTS_STRATEGY"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "weights",
      "weights_invert",
      "total_frames",
      "image_1",
      "image_2",
      "weights_strategy"
    ],
    "name": "IPAdapterWeights",
    "display_name": "IPAdapter Weights",
    "description": "",
    "category": "ipadapter/weights",
    "output_node": false
  },
  "IPAdapterCombineWeights": {
    "input": {
      "required": {
        "weights_1": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "weights_2": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "weights",
      "count"
    ],
    "name": "IPAdapterCombineWeights",
    "display_name": "IPAdapter Combine Weights",
    "description": "",
    "category": "ipadapter/utils",
    "output_node": false
  },
  "IPAdapterWeightsFromStrategy": {
    "input": {
      "required": {
        "weights_strategy": [
          "WEIGHTS_STRATEGY"
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT",
      "INT",
      "IMAGE",
      "IMAGE",
      "WEIGHTS_STRATEGY"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "weights",
      "weights_invert",
      "total_frames",
      "image_1",
      "image_2",
      "weights_strategy"
    ],
    "name": "IPAdapterWeightsFromStrategy",
    "display_name": "IPAdapter Weights From Strategy",
    "description": "",
    "category": "ipadapter/weights",
    "output_node": false
  },
  "IPAdapterPromptScheduleFromWeightsStrategy": {
    "input": {
      "required": {
        "weights_strategy": [
          "WEIGHTS_STRATEGY"
        ],
        "prompt": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "prompt_schedule"
    ],
    "name": "IPAdapterPromptScheduleFromWeightsStrategy",
    "display_name": "Prompt Schedule From Weights Strategy",
    "description": "",
    "category": "ipadapter/weights",
    "output_node": false
  },
  "IPAdapterRegionalConditioning": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "prompt_weight": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "linear",
            "ease in",
            "ease out",
            "ease in-out",
            "reverse in-out",
            "weak input",
            "weak output",
            "weak middle",
            "strong middle",
            "style transfer",
            "composition",
            "strong style transfer"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "IPADAPTER_PARAMS",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IPADAPTER_PARAMS",
      "POSITIVE",
      "NEGATIVE"
    ],
    "name": "IPAdapterRegionalConditioning",
    "display_name": "IPAdapter Regional Conditioning",
    "description": "",
    "category": "ipadapter/params",
    "output_node": false
  },
  "IPAdapterCombineParams": {
    "input": {
      "required": {
        "params_1": [
          "IPADAPTER_PARAMS"
        ],
        "params_2": [
          "IPADAPTER_PARAMS"
        ]
      },
      "optional": {
        "params_3": [
          "IPADAPTER_PARAMS"
        ],
        "params_4": [
          "IPADAPTER_PARAMS"
        ],
        "params_5": [
          "IPADAPTER_PARAMS"
        ]
      }
    },
    "output": [
      "IPADAPTER_PARAMS"
    ],
    "output_is_list": [false],
    "output_name": [
      "IPADAPTER_PARAMS"
    ],
    "name": "IPAdapterCombineParams",
    "display_name": "IPAdapter Combine Params",
    "description": "",
    "category": "ipadapter/params",
    "output_node": false
  },
  "BNK_NoisyLatentImage": {
    "input": {
      "required": {
        "source": [
          [
            "CPU",
            "GPU"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "BNK_NoisyLatentImage",
    "display_name": "Noisy Latent Image",
    "description": "",
    "category": "latent/noise",
    "output_node": false
  },
  "BNK_SlerpLatent": {
    "input": {
      "required": {
        "latents1": [
          "LATENT"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "latents2": [
          "LATENT"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "BNK_SlerpLatent",
    "display_name": "Slerp Latents",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "BNK_GetSigma": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 1,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "BNK_GetSigma",
    "display_name": "Get Sigma",
    "description": "",
    "category": "latent/noise",
    "output_node": false
  },
  "BNK_InjectNoise": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "noise": [
          "LATENT"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "BNK_InjectNoise",
    "display_name": "Inject Noise",
    "description": "",
    "category": "latent/noise",
    "output_node": false
  },
  "BNK_Unsampler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "normalize": [
          [
            "disable",
            "enable"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "BNK_Unsampler",
    "display_name": "Unsampler",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "SAMModelLoader (segment anything)": {
    "input": {
      "required": {
        "model_name": [
          [
            "sam_vit_h (2.56GB)",
            "sam_vit_l (1.25GB)",
            "sam_vit_b (375MB)",
            "sam_hq_vit_h (2.57GB)",
            "sam_hq_vit_l (1.25GB)",
            "sam_hq_vit_b (379MB)",
            "mobile_sam(39MB)"
          ]
        ]
      }
    },
    "output": [
      "SAM_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAM_MODEL"
    ],
    "name": "SAMModelLoader (segment anything)",
    "display_name": "SAMModelLoader (segment anything)",
    "description": "",
    "category": "segment_anything",
    "output_node": false
  },
  "GroundingDinoModelLoader (segment anything)": {
    "input": {
      "required": {
        "model_name": [
          [
            "GroundingDINO_SwinT_OGC (694MB)",
            "GroundingDINO_SwinB (938MB)"
          ]
        ]
      }
    },
    "output": [
      "GROUNDING_DINO_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "GROUNDING_DINO_MODEL"
    ],
    "name": "GroundingDinoModelLoader (segment anything)",
    "display_name": "GroundingDinoModelLoader (segment anything)",
    "description": "",
    "category": "segment_anything",
    "output_node": false
  },
  "GroundingDinoSAMSegment (segment anything)": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL",
          {

          }
        ],
        "grounding_dino_model": [
          "GROUNDING_DINO_MODEL",
          {

          }
        ],
        "image": [
          "IMAGE",
          {

          }
        ],
        "prompt": [
          "STRING",
          {

          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "GroundingDinoSAMSegment (segment anything)",
    "display_name": "GroundingDinoSAMSegment (segment anything)",
    "description": "",
    "category": "segment_anything",
    "output_node": false
  },
  "InvertMask (segment anything)": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "InvertMask (segment anything)",
    "display_name": "InvertMask (segment anything)",
    "description": "",
    "category": "segment_anything",
    "output_node": false
  },
  "IsMaskEmpty": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [false],
    "output_name": [
      "boolean_number"
    ],
    "name": "IsMaskEmpty",
    "display_name": "IsMaskEmpty",
    "description": "",
    "category": "segment_anything",
    "output_node": false
  },
  "DF_Float": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Float",
    "display_name": "Float",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "DF_Integer": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 1,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "DF_Integer",
    "display_name": "Integer",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "DF_Text": {
    "input": {
      "required": {
        "Text": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": false,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "DF_Text",
    "display_name": "Text",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "DF_Text_Box": {
    "input": {
      "required": {
        "Text": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "forceInput": false,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "DF_Text_Box",
    "display_name": "Text Box",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "DF_DynamicPrompts_Text_Box": {
    "input": {
      "required": {
        "Text": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "forceInput": false,
            "dynamicPrompts": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "DF_DynamicPrompts_Text_Box",
    "display_name": "DynamicPrompts Text Box",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "DF_String_Concatenate": {
    "input": {
      "required": {
        "Prepend": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": false,
            "dynamicPrompts": false
          }
        ],
        "Append": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": false,
            "dynamicPrompts": false
          }
        ],
        "Delimiter": [
          "STRING",
          {
            "default": ", ",
            "multiline": false,
            "forceInput": false,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "TEXT"
    ],
    "name": "DF_String_Concatenate",
    "display_name": "String Concatenate",
    "description": "",
    "category": "Derfuu_Nodes/Functions/String Operations",
    "output_node": false
  },
  "DF_String_Replace": {
    "input": {
      "required": {
        "Text": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": false,
            "dynamicPrompts": false
          }
        ],
        "Pattern": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": false,
            "dynamicPrompts": false
          }
        ],
        "Replace_With": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "forceInput": false,
            "dynamicPrompts": false
          }
        ],
        "Mode": [
          [
            "Strict",
            "RegEx"
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "TEXT"
    ],
    "name": "DF_String_Replace",
    "display_name": "String Replace",
    "description": "",
    "category": "Derfuu_Nodes/Functions/String Operations",
    "output_node": false
  },
  "DF_To_text_(Debug)": {
    "input": {
      "required": {
        "ANY": [
          "*",
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "SAME AS INPUT",
      "STRING"
    ],
    "name": "DF_To_text_(Debug)",
    "display_name": "To text (Debug)",
    "description": "",
    "category": "Derfuu_Nodes/Debug",
    "output_node": true
  },
  "DF_Random": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4294967295,
            "step": 1,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Random",
    "display_name": "Random",
    "description": "",
    "category": "Derfuu_Nodes/Functions",
    "output_node": false
  },
  "DF_Int_to_Float": {
    "input": {
      "required": {
        "Value": [
          "INT",
          {
            "default": 1,
            "min": -9.223372036854776e+18,
            "max": 9.223372036854776e+18,
            "step": 1,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Int_to_Float",
    "display_name": "Int to Float",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "DF_Ceil": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "DF_Ceil",
    "display_name": "Ceil",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "DF_Floor": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "DF_Floor",
    "display_name": "Floor",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "DF_Absolute_value": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "negative_out": [
          [false, true]
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Absolute_value",
    "display_name": "Absolute value",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "DF_Get_latent_size": {
    "input": {
      "required": {
        "latent": [
          "LATENT",
          {
            "forceInput": false
          }
        ],
        "original": [
          [false, true]
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "WIDTH",
      "HEIGHT"
    ],
    "name": "DF_Get_latent_size",
    "display_name": "Get latent size",
    "description": "",
    "category": "Derfuu_Nodes/Functions",
    "output_node": false
  },
  "DF_Get_image_size": {
    "input": {
      "required": {
        "image": [
          "IMAGE",
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "WIDTH",
      "HEIGHT"
    ],
    "name": "DF_Get_image_size",
    "display_name": "Get image size",
    "description": "",
    "category": "Derfuu_Nodes/Functions",
    "output_node": false
  },
  "DF_Sum": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Sum",
    "display_name": "Sum",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "DF_Subtract": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Subtract",
    "display_name": "Subtract",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "DF_Multiply": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Multiply",
    "display_name": "Multiply",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "DF_Divide": {
    "input": {
      "required": {
        "Numerator": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Denominator": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Divide",
    "display_name": "Divide",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "DF_Power": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "Exponent": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Power",
    "display_name": "Power",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "DF_Square_root": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "FLOAT",
      "FLOAT"
    ],
    "name": "DF_Square_root",
    "display_name": "Square root",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "DF_Sinus": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "type_": [
          [
            "RAD",
            "DEG"
          ],
          {
            "forceInput": false
          }
        ],
        "arcSin": [
          [false, true],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Sinus",
    "display_name": "Sinus",
    "description": "",
    "category": "Derfuu_Nodes/Math/Trigonometry",
    "output_node": false
  },
  "DF_Cosines": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "type_": [
          [
            "RAD",
            "DEG"
          ],
          {
            "forceInput": false
          }
        ],
        "arcCos": [
          [false, true],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Cosines",
    "display_name": "Cosines",
    "description": "",
    "category": "Derfuu_Nodes/Math/Trigonometry",
    "output_node": false
  },
  "DF_Tangent": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "type_": [
          [
            "RAD",
            "DEG"
          ],
          {
            "forceInput": false
          }
        ],
        "arcTan": [
          [false, true],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "DF_Tangent",
    "display_name": "Tangent",
    "description": "",
    "category": "Derfuu_Nodes/Math/Trigonometry",
    "output_node": false
  },
  "DF_Logic_node": {
    "input": {
      "required": {
        "Operation": [
          [
            "A \u003E B",
            "A \u003C B",
            "A = B",
            "A AND B",
            "A OR B",
            "A XOR B"
          ],
          {
            "forceInput": false
          }
        ],
        "CompareValue_A": [
          "*",
          {
            "forceInput": false
          }
        ]
      },
      "optional": {
        "CompareValue_B": [
          "*",
          {
            "forceInput": false
          }
        ],
        "OnTrue": [
          "*",
          {
            "forceInput": false
          }
        ],
        "OnFalse": [
          "*",
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [false],
    "output_name": [
      "*"
    ],
    "name": "DF_Logic_node",
    "display_name": "Logic node",
    "description": "",
    "category": "Derfuu_Nodes/Functions",
    "output_node": false
  },
  "DF_Latent_Scale_by_ratio": {
    "input": {
      "required": {
        "latent": [
          "LATENT",
          {
            "forceInput": false
          }
        ],
        "modifier": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "bicubic",
            "bislerp",
            "area",
            "lanczos"
          ],
          {
            "forceInput": false
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "DF_Latent_Scale_by_ratio",
    "display_name": "Latent Scale by ratio",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Latent",
    "output_node": false
  },
  "DF_Latent_Scale_to_side": {
    "input": {
      "required": {
        "latent": [
          "LATENT",
          {
            "forceInput": false
          }
        ],
        "side_length": [
          "INT",
          {
            "default": 512,
            "min": -9.223372036854776e+18,
            "max": 9.223372036854776e+18,
            "step": 1,
            "forceInput": false
          }
        ],
        "side": [
          [
            "Longest",
            "Shortest",
            "Width",
            "Height"
          ],
          {
            "forceInput": false
          }
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "bicubic",
            "bislerp",
            "area",
            "lanczos"
          ],
          {
            "forceInput": false
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "DF_Latent_Scale_to_side",
    "display_name": "Latent Scale to side",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Latent",
    "output_node": false
  },
  "DF_Image_scale_by_ratio": {
    "input": {
      "required": {
        "image": [
          "IMAGE",
          {
            "forceInput": false
          }
        ],
        "upscale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "bicubic",
            "bislerp",
            "area",
            "lanczos"
          ],
          {
            "forceInput": false
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DF_Image_scale_by_ratio",
    "display_name": "Image scale by ratio",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Image",
    "output_node": false
  },
  "DF_Image_scale_to_side": {
    "input": {
      "required": {
        "image": [
          "IMAGE",
          {
            "forceInput": false
          }
        ],
        "side_length": [
          "INT",
          {
            "default": 1,
            "min": -9.223372036854776e+18,
            "max": 9.223372036854776e+18,
            "step": 1,
            "forceInput": false
          }
        ],
        "side": [
          [
            "Longest",
            "Shortest",
            "Width",
            "Height"
          ],
          {
            "forceInput": false
          }
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "bicubic",
            "bislerp",
            "area",
            "lanczos"
          ],
          {
            "forceInput": false
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ],
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "DF_Image_scale_to_side",
    "display_name": "Image scale to side",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Image",
    "output_node": false
  },
  "DF_Conditioning_area_scale_by_ratio": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING",
          {
            "forceInput": false
          }
        ],
        "modifier": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ],
        "strength_modifier": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01,
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "DF_Conditioning_area_scale_by_ratio",
    "display_name": "Conditioning area scale by ratio",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Conditions",
    "output_node": false
  },
  "DZ_Face_Detailer": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "vae": [
          "VAE"
        ],
        "mask_blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100
          }
        ],
        "mask_type": [
          [
            "face",
            "box"
          ]
        ],
        "mask_control": [
          [
            "dilate",
            "erode",
            "disabled"
          ]
        ],
        "dilate_mask_value": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 100
          }
        ],
        "erode_mask_value": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "LATENT",
      "MASK"
    ],
    "name": "DZ_Face_Detailer",
    "display_name": "DZ_Face_Detailer",
    "description": "",
    "category": "face_detailer",
    "output_node": false
  },
  "KSampler (Efficient)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "vae_decoded_only",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler (Efficient)",
    "display_name": "KSampler (Efficient)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "KSampler Adv. (Efficient)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false",
            "output only",
            "output only (tiled)"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler Adv. (Efficient)",
    "display_name": "KSampler Adv. (Efficient)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "KSampler SDXL (Eff.)": {
    "input": {
      "required": {
        "sdxl_tuple": [
          "SDXL_TUPLE"
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "refine_at_step": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 10000
          }
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false",
            "output only",
            "output only (tiled)"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler SDXL (Eff.)",
    "display_name": "KSampler SDXL (Eff.)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "Efficient Loader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "vae_name": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "lora_name": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "CLIP_POSITIVE",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "CLIP_NEGATIVE",
            "multiline": true
          }
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 262144
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ],
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES"
    ],
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES"
    ],
    "name": "Efficient Loader",
    "display_name": "Efficient Loader",
    "description": "",
    "category": "Efficiency Nodes/Loaders",
    "output_node": false
  },
  "Eff. Loader SDXL": {
    "input": {
      "required": {
        "base_ckpt_name": [
          [
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "base_clip_skip": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "refiner_ckpt_name": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "refiner_clip_skip": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "positive_ascore": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ],
        "negative_ascore": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ],
        "vae_name": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "positive": [
          "STRING",
          {
            "default": "CLIP_POSITIVE",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "CLIP_NEGATIVE",
            "multiline": true
          }
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 16384,
            "step": 64
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ],
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "DEPENDENCIES"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "DEPENDENCIES"
    ],
    "name": "Eff. Loader SDXL",
    "display_name": "Eff. Loader SDXL",
    "description": "",
    "category": "Efficiency Nodes/Loaders",
    "output_node": false
  },
  "LoRA Stacker": {
    "input": {
      "required": {
        "input_mode": [
          [
            "simple",
            "advanced"
          ]
        ],
        "lora_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "lora_name_1": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_2": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_3": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_4": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_5": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_6": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_7": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_8": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_9": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_10": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_11": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_11": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_11": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_11": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_12": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_12": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_12": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_12": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_13": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_13": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_13": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_13": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_14": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_14": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_14": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_14": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_15": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_15": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_15": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_15": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_16": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_16": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_16": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_16": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_17": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_17": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_17": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_17": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_18": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_18": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_18": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_18": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_19": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_19": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_19": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_19": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_20": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_20": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_20": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_20": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_21": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_21": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_21": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_21": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_22": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_22": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_22": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_22": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_23": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_23": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_23": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_23": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_24": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_24": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_24": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_24": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_25": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_25": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_25": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_25": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_26": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_26": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_26": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_26": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_27": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_27": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_27": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_27": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_28": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_28": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_28": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_28": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_29": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_29": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_29": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_29": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_30": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_30": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_30": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_30": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_31": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_31": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_31": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_31": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_32": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_32": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_32": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_32": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_33": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_33": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_33": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_33": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_34": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_34": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_34": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_34": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_35": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_35": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_35": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_35": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_36": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_36": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_36": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_36": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_37": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_37": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_37": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_37": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_38": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_38": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_38": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_38": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_39": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_39": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_39": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_39": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_40": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_40": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_40": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_40": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_41": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_41": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_41": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_41": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_42": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_42": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_42": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_42": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_43": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_43": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_43": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_43": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_44": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_44": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_44": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_44": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_45": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_45": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_45": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_45": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_46": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_46": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_46": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_46": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_47": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_47": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_47": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_47": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_48": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_48": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_48": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_48": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_49": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "lora_wt_49": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "model_str_49": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_49": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "LORA_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "LORA_STACK"
    ],
    "name": "LoRA Stacker",
    "display_name": "LoRA Stacker",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Control Net Stacker": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONTROL_NET_STACK"
    ],
    "output_is_list": [false],
    "output_name": [
      "CNET_STACK"
    ],
    "name": "Control Net Stacker",
    "display_name": "Control Net Stacker",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Apply ControlNet Stack": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "CONDITIONING+",
      "CONDITIONING-"
    ],
    "name": "Apply ControlNet Stack",
    "display_name": "Apply ControlNet Stack",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Unpack SDXL Tuple": {
    "input": {
      "required": {
        "sdxl_tuple": [
          "SDXL_TUPLE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING",
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false],
    "output_name": [
      "BASE_MODEL",
      "BASE_CLIP",
      "BASE_CONDITIONING+",
      "BASE_CONDITIONING-",
      "REFINER_MODEL",
      "REFINER_CLIP",
      "REFINER_CONDITIONING+",
      "REFINER_CONDITIONING-"
    ],
    "name": "Unpack SDXL Tuple",
    "display_name": "Unpack SDXL Tuple",
    "description": "",
    "category": "Efficiency Nodes/Misc",
    "output_node": false
  },
  "Pack SDXL Tuple": {
    "input": {
      "required": {
        "base_model": [
          "MODEL"
        ],
        "base_clip": [
          "CLIP"
        ],
        "base_positive": [
          "CONDITIONING"
        ],
        "base_negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_clip": [
          "CLIP"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "SDXL_TUPLE"
    ],
    "output_is_list": [false],
    "output_name": [
      "SDXL_TUPLE"
    ],
    "name": "Pack SDXL Tuple",
    "display_name": "Pack SDXL Tuple",
    "description": "",
    "category": "Efficiency Nodes/Misc",
    "output_node": false
  },
  "XY Plot": {
    "input": {
      "required": {
        "grid_spacing": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 500,
            "step": 5
          }
        ],
        "XY_flip": [
          [
            "False",
            "True"
          ]
        ],
        "Y_label_orientation": [
          [
            "Horizontal",
            "Vertical"
          ]
        ],
        "cache_models": [
          [
            "True",
            "False"
          ]
        ],
        "ksampler_output_image": [
          [
            "Images",
            "Plot"
          ]
        ]
      },
      "optional": {
        "dependencies": [
          "DEPENDENCIES"
        ],
        "X": [
          "XY"
        ],
        "Y": [
          "XY"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SCRIPT"
    ],
    "name": "XY Plot",
    "display_name": "XY Plot",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "XY Input: Seeds++ Batch": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Seeds++ Batch",
    "display_name": "XY Input: Seeds++ Batch",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Add/Return Noise": {
    "input": {
      "required": {
        "XY_type": [
          [
            "add_noise",
            "return_with_leftover_noise"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Add/Return Noise",
    "display_name": "XY Input: Add/Return Noise",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Steps": {
    "input": {
      "required": {
        "target_parameter": [
          [
            "steps",
            "start_at_step",
            "end_at_step",
            "refine_at_step"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_step": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 10000
          }
        ],
        "last_step": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "first_start_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "last_start_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "first_end_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "last_end_step": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 10000
          }
        ],
        "first_refine_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "last_refine_step": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Steps",
    "display_name": "XY Input: Steps",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: CFG Scale": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_cfg": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100
          }
        ],
        "last_cfg": [
          "FLOAT",
          {
            "default": 9,
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: CFG Scale",
    "display_name": "XY Input: CFG Scale",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Sampler/Scheduler": {
    "input": {
      "required": {
        "target_parameter": [
          [
            "sampler",
            "scheduler",
            "sampler & scheduler"
          ]
        ],
        "input_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "sampler_1": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_1": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_2": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_2": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_3": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_3": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_4": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_4": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_5": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_5": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_6": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_6": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_7": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_7": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_8": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_8": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_9": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_9": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_10": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_10": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_11": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_11": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_12": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_12": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_13": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_13": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_14": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_14": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_15": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_15": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_16": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_16": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_17": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_17": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_18": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_18": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_19": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_19": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_20": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_20": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_21": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_21": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_22": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_22": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_23": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_23": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_24": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_24": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_25": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_25": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_26": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_26": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_27": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_27": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_28": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_28": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_29": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_29": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_30": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_30": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_31": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_31": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_32": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_32": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_33": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_33": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_34": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_34": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_35": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_35": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_36": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_36": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_37": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_37": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_38": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_38": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_39": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_39": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_40": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_40": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_41": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_41": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_42": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_42": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_43": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_43": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_44": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_44": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_45": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_45": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_46": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_46": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_47": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_47": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_48": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_48": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_49": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_49": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_50": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_50": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Sampler/Scheduler",
    "display_name": "XY Input: Sampler/Scheduler",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Denoise": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_denoise": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "last_denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Denoise",
    "display_name": "XY Input: Denoise",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: VAE": {
    "input": {
      "required": {
        "input_mode": [
          [
            "VAE Names",
            "VAE Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "vae_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "vae_name_1": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_2": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_3": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_4": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_5": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_6": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_7": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_8": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_9": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_10": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_11": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_12": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_13": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_14": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_15": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_16": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_17": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_18": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_19": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_20": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_21": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_22": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_23": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_24": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_25": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_26": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_27": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_28": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_29": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_30": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_31": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_32": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_33": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_34": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_35": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_36": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_37": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_38": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_39": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_40": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_41": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_42": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_43": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_44": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_45": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_46": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_47": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_48": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_49": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_50": [
          [
            "None",
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: VAE",
    "display_name": "XY Input: VAE",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Prompt S/R": {
    "input": {
      "required": {
        "target_prompt": [
          [
            "positive",
            "negative"
          ]
        ],
        "search_txt": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 49
          }
        ],
        "replace_1": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_2": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_3": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_4": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_5": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_6": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_7": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_8": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_9": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_10": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_11": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_12": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_13": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_14": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_15": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_16": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_17": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_18": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_19": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_20": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_21": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_22": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_23": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_24": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_25": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_26": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_27": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_28": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_29": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_30": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_31": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_32": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_33": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_34": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_35": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_36": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_37": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_38": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_39": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_40": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_41": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_42": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_43": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_44": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_45": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_46": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_47": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_48": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_49": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Prompt S/R",
    "display_name": "XY Input: Prompt S/R",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Aesthetic Score": {
    "input": {
      "required": {
        "target_ascore": [
          [
            "positive",
            "negative"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_ascore": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ],
        "last_ascore": [
          "FLOAT",
          {
            "default": 10,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Aesthetic Score",
    "display_name": "XY Input: Aesthetic Score",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Refiner On/Off": {
    "input": {
      "required": {
        "refine_at_percent": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Refiner On/Off",
    "display_name": "XY Input: Refiner On/Off",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Checkpoint": {
    "input": {
      "required": {
        "target_ckpt": [
          [
            "Base",
            "Refiner"
          ]
        ],
        "input_mode": [
          [
            "Ckpt Names",
            "Ckpt Names+ClipSkip",
            "Ckpt Names+ClipSkip+VAE",
            "Checkpoint Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "ckpt_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "ckpt_name_1": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_1": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_1": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_2": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_2": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_2": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_3": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_3": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_3": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_4": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_4": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_4": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_5": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_5": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_5": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_6": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_6": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_6": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_7": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_7": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_7": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_8": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_8": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_8": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_9": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_9": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_9": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_10": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_10": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_10": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_11": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_11": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_11": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_12": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_12": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_12": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_13": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_13": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_13": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_14": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_14": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_14": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_15": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_15": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_15": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_16": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_16": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_16": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_17": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_17": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_17": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_18": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_18": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_18": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_19": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_19": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_19": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_20": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_20": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_20": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_21": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_21": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_21": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_22": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_22": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_22": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_23": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_23": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_23": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_24": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_24": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_24": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_25": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_25": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_25": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_26": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_26": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_26": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_27": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_27": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_27": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_28": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_28": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_28": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_29": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_29": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_29": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_30": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_30": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_30": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_31": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_31": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_31": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_32": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_32": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_32": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_33": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_33": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_33": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_34": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_34": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_34": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_35": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_35": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_35": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_36": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_36": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_36": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_37": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_37": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_37": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_38": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_38": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_38": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_39": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_39": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_39": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_40": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_40": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_40": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_41": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_41": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_41": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_42": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_42": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_42": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_43": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_43": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_43": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_44": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_44": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_44": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_45": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_45": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_45": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_46": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_46": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_46": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_47": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_47": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_47": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_48": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_48": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_48": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_49": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_49": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_49": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_50": [
          [
            "None",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "clip_skip_50": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_50": [
          [
            "Baked VAE",
            "sdxl_vae.safetensors",
            "vae-ft-ema-560000-ema.vae.pt",
            "vae-ft-mse-840000-ema-pruned.ckpt",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Checkpoint",
    "display_name": "XY Input: Checkpoint",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Clip Skip": {
    "input": {
      "required": {
        "target_ckpt": [
          [
            "Base",
            "Refiner"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "last_clip_skip": [
          "INT",
          {
            "default": -3,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Clip Skip",
    "display_name": "XY Input: Clip Skip",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA": {
    "input": {
      "required": {
        "input_mode": [
          [
            "LoRA Names",
            "LoRA Names+Weights",
            "LoRA Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "lora_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_1": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_1": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_2": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_2": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_3": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_3": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_4": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_4": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_5": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_5": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_6": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_6": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_7": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_7": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_8": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_8": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_9": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_9": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_10": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_10": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_11": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_11": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_11": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_12": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_12": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_12": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_13": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_13": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_13": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_14": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_14": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_14": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_15": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_15": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_15": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_16": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_16": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_16": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_17": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_17": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_17": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_18": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_18": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_18": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_19": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_19": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_19": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_20": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_20": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_20": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_21": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_21": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_21": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_22": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_22": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_22": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_23": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_23": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_23": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_24": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_24": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_24": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_25": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_25": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_25": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_26": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_26": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_26": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_27": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_27": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_27": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_28": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_28": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_28": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_29": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_29": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_29": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_30": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_30": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_30": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_31": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_31": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_31": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_32": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_32": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_32": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_33": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_33": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_33": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_34": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_34": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_34": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_35": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_35": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_35": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_36": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_36": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_36": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_37": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_37": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_37": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_38": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_38": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_38": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_39": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_39": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_39": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_40": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_40": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_40": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_41": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_41": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_41": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_42": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_42": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_42": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_43": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_43": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_43": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_44": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_44": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_44": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_45": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_45": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_45": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_46": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_46": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_46": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_47": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_47": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_47": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_48": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_48": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_48": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_49": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_49": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_49": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "lora_name_50": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_str_50": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_str_50": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: LoRA",
    "display_name": "XY Input: LoRA",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA Plot": {
    "input": {
      "required": {
        "input_mode": [
          [
            "X: LoRA Batch, Y: LoRA Weight",
            "X: LoRA Batch, Y: Model Strength",
            "X: LoRA Batch, Y: Clip Strength",
            "X: Model Strength, Y: Clip Strength"
          ]
        ],
        "lora_name": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "model_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "clip_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "X_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "X_batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "X_subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "X_batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "X_first_value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "X_last_value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "Y_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "Y_first_value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "Y_last_value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY",
      "XY"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "X",
      "Y"
    ],
    "name": "XY Input: LoRA Plot",
    "display_name": "XY Input: LoRA Plot",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA Stacks": {
    "input": {
      "required": {
        "node_state": [
          [
            "Enabled"
          ]
        ]
      },
      "optional": {
        "lora_stack_1": [
          "LORA_STACK"
        ],
        "lora_stack_2": [
          "LORA_STACK"
        ],
        "lora_stack_3": [
          "LORA_STACK"
        ],
        "lora_stack_4": [
          "LORA_STACK"
        ],
        "lora_stack_5": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: LoRA Stacks",
    "display_name": "XY Input: LoRA Stacks",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Control Net": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "target_parameter": [
          [
            "strength",
            "start_percent",
            "end_percent"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "last_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "first_start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "last_start_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "first_end_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "last_end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Control Net",
    "display_name": "XY Input: Control Net",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Control Net Plot": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "plot_type": [
          [
            "X: Strength, Y: Start%",
            "X: Strength, Y: End%",
            "X: Start%, Y: Strength",
            "X: Start%, Y: End%",
            "X: End%, Y: Strength",
            "X: End%, Y: Start%"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "X_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "X_first_value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "X_last_value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "Y_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "Y_first_value": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "Y_last_value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "XY",
      "XY"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "X",
      "Y"
    ],
    "name": "XY Input: Control Net Plot",
    "display_name": "XY Input: Control Net Plot",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Manual XY Entry": {
    "input": {
      "required": {
        "plot_type": [
          [
            "Nothing",
            "Seeds++ Batch",
            "Steps",
            "StartStep",
            "EndStep",
            "CFG Scale",
            "Sampler",
            "Scheduler",
            "Denoise",
            "VAE",
            "Positive Prompt S/R",
            "Negative Prompt S/R",
            "Checkpoint",
            "Clip Skip",
            "LoRA"
          ]
        ],
        "plot_value": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Manual XY Entry",
    "display_name": "XY Input: Manual XY Entry",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Manual XY Entry Info": {
    "input": {
      "required": {
        "notes": [
          "STRING",
          {
            "default": "_____________SYNTAX_____________\n(X/Y_types)     (X/Y_values)\nSeeds++ Batch   batch_count\nSteps           steps_1;steps_2;...\nStartStep       start_step_1;start_step_2;...\nEndStep         end_step_1;end_step_2;...\nCFG Scale       cfg_1;cfg_2;...\nSampler(1)      sampler_1;sampler_2;...\nSampler(2)      sampler_1,scheduler_1;...\nSampler(3)      sampler_1;...;,default_scheduler\nScheduler       scheduler_1;scheduler_2;...\nDenoise         denoise_1;denoise_2;...\nVAE             vae_1;vae_2;vae_3;...\n+Prompt S/R     search_txt;replace_1;replace_2;...\n-Prompt S/R     search_txt;replace_1;replace_2;...\nCheckpoint(1)   ckpt_1;ckpt_2;ckpt_3;...\nCheckpoint(2)   ckpt_1,clip_skip_1;...\nCheckpoint(3)   ckpt_1;ckpt_2;...;,default_clip_skip\nClip Skip       clip_skip_1;clip_skip_2;...\nLoRA(1)         lora_1;lora_2;lora_3;...\nLoRA(2)         lora_1;...;,default_model_str,default_clip_str\nLoRA(3)         lora_1,model_str_1,clip_str_1;...\n\n____________SAMPLERS____________\neuler;\neuler_ancestral;\nheun;\nheunpp2;\ndpm_2;\ndpm_2_ancestral;\nlms;\ndpm_fast;\ndpm_adaptive;\ndpmpp_2s_ancestral;\ndpmpp_sde;\ndpmpp_sde_gpu;\ndpmpp_2m;\ndpmpp_2m_sde;\ndpmpp_2m_sde_gpu;\ndpmpp_3m_sde;\ndpmpp_3m_sde_gpu;\nddpm;\nlcm;\nddim;\nuni_pc;\nuni_pc_bh2\n\n___________SCHEDULERS___________\nnormal;\nkarras;\nexponential;\nsgm_uniform;\nsimple;\nddim_uniform\n\n_____________VAES_______________\nsdxl_vae.safetensors;\nvae-ft-ema-560000-ema.vae.pt;\nvae-ft-mse-840000-ema-pruned.ckpt;\nvae-ft-mse-840000-ema-pruned.safetensors\n\n___________CHECKPOINTS__________\n3dAnimationDiffusion_v10.safetensors;\naniverse_v40.safetensors;\naniverse_v40Pruned.safetensors;\ncinematix_l8.safetensors;\ncolorful_v80.safetensors;\ncolorfulxl_v42.safetensors;\ncomfyui_checkpoints/stable_cascade_stage_b.safetensors;\ncomfyui_checkpoints/stable_cascade_stage_c.safetensors;\ncontrol_v11f1p_sd15_depth_fp16.safetensors;\ncontrol_v11p_sd15_lineart_fp16.safetensors;\ndreamshaperXL_v21TurboDPMSDE.safetensors;\ndreamshaper_8.safetensors;\nduchaitenPonyXLNo_ponyNoScoreV40.safetensors;\nepic25D_v10.safetensors;\nepicrealismXL_v7FinalDestination.safetensors;\nilluminatiDiffusionV1_v11.safetensors;\njuggernautXL_juggXRundiffusion.safetensors;\npastelMixStylizedAnime_pastelMixPrunedFP16.safetensors;\nponyRealism_v21VAE.safetensors;\nrealisticVisionV60B1_v51HyperVAE.safetensors;\nsd21-unclip-h.ckpt;\nsd_xl_base_1.0_0.9vae.safetensors;\nsd_xl_offset_example-lora_1.0.safetensors;\nsd_xl_refiner_1.0_0.9vae.safetensors;\nsd_xl_turbo_1.0_fp16.safetensors;\nstable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors;\nstable-diffusion-2-1-unclip/image_encoder/model.safetensors;\nstable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin;\nstable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin;\nstable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin;\nstable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin;\nstable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors;\nstable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors;\nstable-diffusion-2-1-unclip/sd21-unclip-h.ckpt;\nstable-diffusion-2-1-unclip/sd21-unclip-l.ckpt;\nstable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors;\nstable-diffusion-2-1-unclip/text_encoder/model.safetensors;\nstable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin;\nstable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin;\nstable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin;\nstable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin;\nstable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors;\nstable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors;\nstable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin;\nstable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin;\nstable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors;\nstable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors;\nsvd.safetensors;\nv1-5-pruned-emaonly.safetensors;\nv2-1_768-ema-pruned.safetensors;\nzavychromaxl_v70.safetensors\n\n_____________LORAS______________\n3DMM_V12.safetensors;\nClothingAdjuster3.safetensors;\nLowRA.safetensors;\nadd-detail-xl.safetensors;\nadd_detail.safetensors;\nanimetarotV51.safetensors;\nepi_noiseoffset2.pt\n",
            "multiline": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Manual XY Entry Info",
    "display_name": "Manual XY Entry Info",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Join XY Inputs of Same Type": {
    "input": {
      "required": {
        "XY_1": [
          "XY"
        ],
        "XY_2": [
          "XY"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [false],
    "output_name": [
      "X or Y"
    ],
    "name": "Join XY Inputs of Same Type",
    "display_name": "Join XY Inputs of Same Type",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Image Overlay": {
    "input": {
      "required": {
        "base_image": [
          "IMAGE"
        ],
        "overlay_image": [
          "IMAGE"
        ],
        "overlay_resize": [
          [
            "None",
            "Fit",
            "Resize by rescale_factor",
            "Resize to width & heigth"
          ]
        ],
        "resize_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 16,
            "step": 0.1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 64
          }
        ],
        "x_offset": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 10
          }
        ],
        "y_offset": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 10
          }
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 5
          }
        ],
        "opacity": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 5
          }
        ]
      },
      "optional": {
        "optional_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Overlay",
    "display_name": "Image Overlay",
    "description": "",
    "category": "Efficiency Nodes/Image",
    "output_node": false
  },
  "Noise Control Script": {
    "input": {
      "required": {
        "rng_source": [
          [
            "cpu",
            "gpu",
            "nv"
          ]
        ],
        "cfg_denoiser": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "add_seed_noise": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.015,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SCRIPT"
    ],
    "name": "Noise Control Script",
    "display_name": "Noise Control Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "HighRes-Fix Script": {
    "input": {
      "required": {
        "upscale_type": [
          [
            "latent",
            "pixel",
            "both"
          ]
        ],
        "hires_ckpt_name": [
          [
            "(use same)",
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ],
        "latent_upscaler": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp",
            "city96.v1",
            "city96.xl",
            "ttl_nn.SDXL",
            "ttl_nn.SD 1.x"
          ]
        ],
        "pixel_upscaler": [
          [
            "4x-UltraSharp.pth",
            "4x_NMKD-Siax_200k.pth",
            "4x_fatal_Anime_500000_G.pth"
          ]
        ],
        "upscale_by": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.01,
            "max": 8,
            "step": 0.05
          }
        ],
        "use_same_seed": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "hires_steps": [
          "INT",
          {
            "default": 12,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.56,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "iterations": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 1
          }
        ],
        "use_controlnet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "control_net_name": [
          [
            "control_v11f1p_sd15_depth.pth",
            "control_v11p_sd15_lineart.pth",
            "depth-sdxl/diffusion_pytorch_model.fp16.safetensors",
            "depth/control_v11f1p_sd15_depth.pth",
            "depth/diffusion_pytorch_model.safetensors",
            "diffusion_pytorch_model.safetensors",
            "instantIDSDXL_ipAdapterInstantId.bin",
            "instantid/diffusion_pytorch_model.safetensors",
            "instantid/ip-adapter.bin",
            "lineart/control_v11p_sd15_lineart.pth",
            "lineart/diffusion_pytorch_model.safetensors",
            "stable_cascade_canny.safetensors",
            "stable_cascade_inpainting.safetensors",
            "stable_cascade_super_resolution.safetensors",
            "t2i-adapter-lineart-sdxl-1.0/diffusion_pytorch_model.safetensors",
            "t2iadapter_depth_sd15v2/diffusion_pytorch_model.bin"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "preprocessor": [
          [
            "none",
            "AnimeFace_SemSegPreprocessor",
            "AnyLineArtPreprocessor_aux",
            "BinaryPreprocessor",
            "CannyEdgePreprocessor",
            "ColorPreprocessor",
            "DensePosePreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "DiffusionEdge_Preprocessor",
            "DSINE-NormalMapPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "LeReS-DepthMapPreprocessor",
            "LineArtPreprocessor",
            "AnimeLineArtPreprocessor",
            "LineartStandardPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
            "Metric3D-DepthMapPreprocessor",
            "Metric3D-NormalMapPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "M-LSDPreprocessor",
            "BAE-NormalMapPreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "OpenposePreprocessor",
            "PiDiNetPreprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "UpperBodyTrackingFromPoseKps",
            "ImageLuminanceDetector",
            "ImageIntensityDetector",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "Scribble_PiDiNet_Preprocessor",
            "SAMPreprocessor",
            "ShufflePreprocessor",
            "TEEDPreprocessor",
            "TilePreprocessor",
            "TTPlanet_TileGF_Preprocessor",
            "TTPlanet_TileSimple_Preprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "Zoe-DepthMapPreprocessor"
          ],
          {
            "default": "none"
          }
        ],
        "preprocessor_imgs": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SCRIPT"
    ],
    "name": "HighRes-Fix Script",
    "display_name": "HighRes-Fix Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "Tiled Upscaler Script": {
    "input": {
      "required": {
        "upscale_by": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.01,
            "max": 8,
            "step": 0.05
          }
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 256,
            "max": 16384,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "random strict",
            "padded",
            "simple",
            "none"
          ]
        ],
        "tiling_steps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 10000
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "use_controlnet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "tile_controlnet": [
          [
            "control_v11f1p_sd15_depth.pth",
            "control_v11p_sd15_lineart.pth",
            "depth-sdxl/diffusion_pytorch_model.fp16.safetensors",
            "depth/control_v11f1p_sd15_depth.pth",
            "depth/diffusion_pytorch_model.safetensors",
            "diffusion_pytorch_model.safetensors",
            "instantIDSDXL_ipAdapterInstantId.bin",
            "instantid/diffusion_pytorch_model.safetensors",
            "instantid/ip-adapter.bin",
            "lineart/control_v11p_sd15_lineart.pth",
            "lineart/diffusion_pytorch_model.safetensors",
            "stable_cascade_canny.safetensors",
            "stable_cascade_inpainting.safetensors",
            "stable_cascade_super_resolution.safetensors",
            "t2i-adapter-lineart-sdxl-1.0/diffusion_pytorch_model.safetensors",
            "t2iadapter_depth_sd15v2/diffusion_pytorch_model.bin"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [false],
    "output_name": [
      "SCRIPT"
    ],
    "name": "Tiled Upscaler Script",
    "display_name": "Tiled Upscaler Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "LoRA Stack to String converter": {
    "input": {
      "required": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "LoRA string"
    ],
    "name": "LoRA Stack to String converter",
    "display_name": "LoRA Stack to String converter",
    "description": "",
    "category": "Efficiency Nodes/Misc",
    "output_node": false
  },
  "Evaluate Integers": {
    "input": {
      "required": {
        "python_expression": [
          "STRING",
          {
            "default": "((a + b) - c) / 2",
            "multiline": false
          }
        ],
        "print_to_console": [
          [
            "False",
            "True"
          ]
        ]
      },
      "optional": {
        "a": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "b": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "c": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "name": "Evaluate Integers",
    "display_name": "Evaluate Integers",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": true
  },
  "Evaluate Floats": {
    "input": {
      "required": {
        "python_expression": [
          "STRING",
          {
            "default": "((a + b) - c) / 2",
            "multiline": false
          }
        ],
        "print_to_console": [
          [
            "False",
            "True"
          ]
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 1
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 1
          }
        ],
        "c": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "name": "Evaluate Floats",
    "display_name": "Evaluate Floats",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": true
  },
  "Evaluate Strings": {
    "input": {
      "required": {
        "python_expression": [
          "STRING",
          {
            "default": "a + b + c",
            "multiline": false
          }
        ],
        "print_to_console": [
          [
            "False",
            "True"
          ]
        ]
      },
      "optional": {
        "a": [
          "STRING",
          {
            "default": "Hello",
            "multiline": false
          }
        ],
        "b": [
          "STRING",
          {
            "default": " World",
            "multiline": false
          }
        ],
        "c": [
          "STRING",
          {
            "default": "!",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Evaluate Strings",
    "display_name": "Evaluate Strings",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": true
  },
  "Simple Eval Examples": {
    "input": {
      "required": {
        "models_text": [
          "STRING",
          {
            "default": "The Evaluate Integers, Floats, and Strings nodes \nnow employ the SimpleEval library, enabling secure \ncreation and execution of custom Python expressions.\n\n(https://github.com/danthedeckie/simpleeval)\n\nBelow is a short list of what is possible.\n______________________________________________\n\n\"EVALUATE INTEGERS/FLOATS\" NODE EXPRESSION EXAMPLES:\n\nAddition: a + b + c\nSubtraction: a - b - c\nMultiplication: a * b * c\nDivision: a / b / c\nModulo: a % b % c\nExponentiation: a ** b ** c\nFloor Division: a // b // c\nAbsolute Value: abs(a) + abs(b) + abs(c)\nMaximum: max(a, b, c)\nMinimum: min(a, b, c)\nSum of Squares: a**2 + b**2 + c**2\nBitwise And: a & b & c\nBitwise Or: a | b | c\nBitwise Xor: a ^ b ^ c\nLeft Shift: a \u003C\u003C 1 + b \u003C\u003C 1 + c \u003C\u003C 1\nRight Shift: a \u003E\u003E 1 + b \u003E\u003E 1 + c \u003E\u003E 1\nGreater Than Comparison: a \u003E b \u003E c\nLess Than Comparison: a \u003C b \u003C c\nEqual To Comparison: a == b == c\nNot Equal To Comparison: a != b != c\n______________________________________________\n\n\"EVALUATE STRINGS\" NODE EXPRESSION EXAMPLES:\n\nConcatenate: a + b + c\nFormat: f'{a} {b} {c}'\nLength: len(a) + len(b) + len(c)\nUppercase: a.upper() + b.upper() + c.upper()\nLowercase: a.lower() + b.lower() + c.lower()\nCapitalize: a.capitalize() + b.capitalize() + c.capitalize()\nTitle Case: a.title() + b.title() + c.title()\nStrip: a.strip() + b.strip() + c.strip()\nFind Substring: a.find('sub') + b.find('sub') + c.find('sub')\nReplace Substring: a.replace('old', 'new') + b.replace('old', 'new') + c.replace('old', 'new')\nCount Substring: a.count('sub') + b.count('sub') + c.count('sub')\nCheck Numeric: a.isnumeric() + b.isnumeric() + c.isnumeric()\nCheck Alphabetic: a.isalpha() + b.isalpha() + c.isalpha()\nCheck Alphanumeric: a.isalnum() + b.isalnum() + c.isalnum()\nCheck Start: a.startswith('prefix') + b.startswith('prefix') + c.startswith('prefix')\nCheck End: a.endswith('suffix') + b.endswith('suffix') + c.endswith('suffix')\nSplit: a.split(' ') + b.split(' ') + c.split(' ')\nZero Fill: a.zfill(5) + b.zfill(5) + c.zfill(5)\nSlice: a[:5] + b[:5] + c[:5]\nReverse: a[::-1] + b[::-1] + c[::-1]\n______________________________________________",
            "multiline": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Simple Eval Examples",
    "display_name": "Simple Eval Examples",
    "description": "",
    "category": "Efficiency Nodes/Simple Eval",
    "output_node": false
  },
  "SDXLPromptStyler": {
    "input": {
      "required": {
        "text_positive": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "base",
            "sai-3d-model",
            "sai-analog film",
            "sai-anime",
            "sai-cinematic",
            "sai-comic book",
            "sai-craft clay",
            "sai-digital art",
            "sai-enhance",
            "sai-fantasy art",
            "sai-isometric",
            "sai-line art",
            "sai-lowpoly",
            "sai-neonpunk",
            "sai-origami",
            "sai-photographic",
            "sai-pixel art",
            "sai-texture",
            "ads-advertising",
            "ads-automotive",
            "ads-corporate",
            "ads-fashion editorial",
            "ads-food photography",
            "ads-gourmet food photography",
            "ads-luxury",
            "ads-real estate",
            "ads-retail",
            "artstyle-abstract",
            "artstyle-abstract expressionism",
            "artstyle-art deco",
            "artstyle-art nouveau",
            "artstyle-constructivist",
            "artstyle-cubist",
            "artstyle-expressionist",
            "artstyle-graffiti",
            "artstyle-hyperrealism",
            "artstyle-impressionist",
            "artstyle-pointillism",
            "artstyle-pop art",
            "artstyle-psychedelic",
            "artstyle-renaissance",
            "artstyle-steampunk",
            "artstyle-surrealist",
            "artstyle-typography",
            "artstyle-watercolor",
            "futuristic-biomechanical",
            "futuristic-biomechanical cyberpunk",
            "futuristic-cybernetic",
            "futuristic-cybernetic robot",
            "futuristic-cyberpunk cityscape",
            "futuristic-futuristic",
            "futuristic-retro cyberpunk",
            "futuristic-retro futurism",
            "futuristic-sci-fi",
            "futuristic-vaporwave",
            "game-bubble bobble",
            "game-cyberpunk game",
            "game-fighting game",
            "game-gta",
            "game-mario",
            "game-minecraft",
            "game-pokemon",
            "game-retro arcade",
            "game-retro game",
            "game-rpg fantasy game",
            "game-strategy game",
            "game-streetfighter",
            "game-zelda",
            "misc-architectural",
            "misc-disco",
            "misc-dreamscape",
            "misc-dystopian",
            "misc-fairy tale",
            "misc-gothic",
            "misc-grunge",
            "misc-horror",
            "misc-kawaii",
            "misc-lovecraftian",
            "misc-macabre",
            "misc-manga",
            "misc-metropolis",
            "misc-minimalist",
            "misc-monochrome",
            "misc-nautical",
            "misc-space",
            "misc-stained glass",
            "misc-techwear fashion",
            "misc-tribal",
            "misc-zentangle",
            "papercraft-collage",
            "papercraft-flat papercut",
            "papercraft-kirigami",
            "papercraft-paper mache",
            "papercraft-paper quilling",
            "papercraft-papercut collage",
            "papercraft-papercut shadow box",
            "papercraft-stacked papercut",
            "papercraft-thick layered papercut",
            "photo-alien",
            "photo-film noir",
            "photo-glamour",
            "photo-hdr",
            "photo-iphone photographic",
            "photo-long exposure",
            "photo-neon noir",
            "photo-silhouette",
            "photo-tilt-shift"
          ]
        ],
        "log_prompt": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "yes",
            "label_off": "no"
          }
        ],
        "style_positive": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "yes",
            "label_off": "no"
          }
        ],
        "style_negative": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "yes",
            "label_off": "no"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "text_positive",
      "text_negative"
    ],
    "name": "SDXLPromptStyler",
    "display_name": "SDXL Prompt Styler",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "SDXLPromptStylerAdvanced": {
    "input": {
      "required": {
        "text_positive_g": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_positive_l": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "text_negative": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "style": [
          [
            "base",
            "sai-3d-model",
            "sai-analog film",
            "sai-anime",
            "sai-cinematic",
            "sai-comic book",
            "sai-craft clay",
            "sai-digital art",
            "sai-enhance",
            "sai-fantasy art",
            "sai-isometric",
            "sai-line art",
            "sai-lowpoly",
            "sai-neonpunk",
            "sai-origami",
            "sai-photographic",
            "sai-pixel art",
            "sai-texture",
            "ads-advertising",
            "ads-automotive",
            "ads-corporate",
            "ads-fashion editorial",
            "ads-food photography",
            "ads-gourmet food photography",
            "ads-luxury",
            "ads-real estate",
            "ads-retail",
            "artstyle-abstract",
            "artstyle-abstract expressionism",
            "artstyle-art deco",
            "artstyle-art nouveau",
            "artstyle-constructivist",
            "artstyle-cubist",
            "artstyle-expressionist",
            "artstyle-graffiti",
            "artstyle-hyperrealism",
            "artstyle-impressionist",
            "artstyle-pointillism",
            "artstyle-pop art",
            "artstyle-psychedelic",
            "artstyle-renaissance",
            "artstyle-steampunk",
            "artstyle-surrealist",
            "artstyle-typography",
            "artstyle-watercolor",
            "futuristic-biomechanical",
            "futuristic-biomechanical cyberpunk",
            "futuristic-cybernetic",
            "futuristic-cybernetic robot",
            "futuristic-cyberpunk cityscape",
            "futuristic-futuristic",
            "futuristic-retro cyberpunk",
            "futuristic-retro futurism",
            "futuristic-sci-fi",
            "futuristic-vaporwave",
            "game-bubble bobble",
            "game-cyberpunk game",
            "game-fighting game",
            "game-gta",
            "game-mario",
            "game-minecraft",
            "game-pokemon",
            "game-retro arcade",
            "game-retro game",
            "game-rpg fantasy game",
            "game-strategy game",
            "game-streetfighter",
            "game-zelda",
            "misc-architectural",
            "misc-disco",
            "misc-dreamscape",
            "misc-dystopian",
            "misc-fairy tale",
            "misc-gothic",
            "misc-grunge",
            "misc-horror",
            "misc-kawaii",
            "misc-lovecraftian",
            "misc-macabre",
            "misc-manga",
            "misc-metropolis",
            "misc-minimalist",
            "misc-monochrome",
            "misc-nautical",
            "misc-space",
            "misc-stained glass",
            "misc-techwear fashion",
            "misc-tribal",
            "misc-zentangle",
            "papercraft-collage",
            "papercraft-flat papercut",
            "papercraft-kirigami",
            "papercraft-paper mache",
            "papercraft-paper quilling",
            "papercraft-papercut collage",
            "papercraft-papercut shadow box",
            "papercraft-stacked papercut",
            "papercraft-thick layered papercut",
            "photo-alien",
            "photo-film noir",
            "photo-glamour",
            "photo-hdr",
            "photo-iphone photographic",
            "photo-long exposure",
            "photo-neon noir",
            "photo-silhouette",
            "photo-tilt-shift"
          ]
        ],
        "negative_prompt_to": [
          [
            "Both",
            "G only",
            "L only"
          ],
          {
            "default": "Both"
          }
        ],
        "copy_to_l": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "yes",
            "label_off": "no"
          }
        ],
        "log_prompt": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "yes",
            "label_off": "no"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "text_positive_g",
      "text_positive_l",
      "text_positive",
      "text_negative_g",
      "text_negative_l",
      "text_negative"
    ],
    "name": "SDXLPromptStylerAdvanced",
    "display_name": "SDXL Prompt Styler Advanced",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "ControlLoraSave": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "controlnet_loras/ComfyUI_control_lora"
          }
        ],
        "rank": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1024,
            "step": 8
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ControlLoraSave",
    "display_name": "ControlLoraSave",
    "description": "",
    "category": "stability/controlnet",
    "output_node": true
  },
  "ColorBlend": {
    "input": {
      "required": {
        "bw_layer": [
          "IMAGE"
        ],
        "color_layer": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "ColorBlend",
    "display_name": "Color Blend",
    "description": "",
    "category": "stability/image/postprocessing",
    "output_node": false
  },
  "GetImageSize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "width",
      "height"
    ],
    "name": "GetImageSize",
    "display_name": "GetImageSize",
    "description": "",
    "category": "stability/image",
    "output_node": false
  },
  "BLIP Model Loader": {
    "input": {
      "required": {
        "blip_model": [
          "STRING",
          {
            "default": "Salesforce/blip-image-captioning-base"
          }
        ],
        "vqa_model_id": [
          "STRING",
          {
            "default": "Salesforce/blip-vqa-base"
          }
        ],
        "device": [
          [
            "cuda",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "BLIP_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "BLIP_MODEL"
    ],
    "name": "BLIP Model Loader",
    "display_name": "BLIP Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Blend Latents": {
    "input": {
      "required": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "operation": [
          [
            "add",
            "multiply",
            "divide",
            "subtract",
            "overlay",
            "hard_light",
            "soft_light",
            "screen",
            "linear_dodge",
            "difference",
            "exclusion",
            "random"
          ]
        ],
        "blend": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "Blend Latents",
    "display_name": "Blend Latents",
    "description": "",
    "category": "WAS Suite/Latent",
    "output_node": false
  },
  "Bus Node": {
    "input": {
      "required": {

      },
      "optional": {
        "bus": [
          "BUS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "BUS",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "bus",
      "model",
      "clip",
      "vae",
      "positive",
      "negative"
    ],
    "name": "Bus Node",
    "display_name": "Bus Node",
    "description": "",
    "category": "WAS Suite/Utilities",
    "output_node": false
  },
  "Cache Node": {
    "input": {
      "required": {
        "latent_suffix": [
          "STRING",
          {
            "default": "60671453_cache",
            "multiline": false
          }
        ],
        "image_suffix": [
          "STRING",
          {
            "default": "95509214_cache",
            "multiline": false
          }
        ],
        "conditioning_suffix": [
          "STRING",
          {
            "default": "90075763_cache",
            "multiline": false
          }
        ]
      },
      "optional": {
        "output_path": [
          "STRING",
          {
            "default": "/Volumes/CORSAIR/StabilityMatrix/Packages/ComfyUI/custom_nodes/was-node-suite-comfyui/cache",
            "multiline": false
          }
        ],
        "latent": [
          "LATENT"
        ],
        "image": [
          "IMAGE"
        ],
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "latent_filename",
      "image_filename",
      "conditioning_filename"
    ],
    "name": "Cache Node",
    "display_name": "Cache Node",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Checkpoint Loader": {
    "input": {
      "required": {
        "config_name": [
          [
            "anything_v3.yaml",
            "illuminatiDiffusionV1_v11_ec40.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ]
        ],
        "ckpt_name": [
          [
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Checkpoint Loader",
    "display_name": "Checkpoint Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Checkpoint Loader (Simple)": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Checkpoint Loader (Simple)",
    "display_name": "Checkpoint Loader (Simple)",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "CLIPTextEncode (NSP)": {
    "input": {
      "required": {
        "mode": [
          [
            "Noodle Soup Prompts",
            "Wildcards"
          ]
        ],
        "noodle_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "conditioning",
      "parsed_text",
      "raw_text"
    ],
    "name": "CLIPTextEncode (NSP)",
    "display_name": "CLIPTextEncode (NSP)",
    "description": "",
    "category": "WAS Suite/Conditioning",
    "output_node": true
  },
  "CLIP Input Switch": {
    "input": {
      "required": {
        "clip_a": [
          "CLIP"
        ],
        "clip_b": [
          "CLIP"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIP Input Switch",
    "display_name": "CLIP Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "CLIP Vision Input Switch": {
    "input": {
      "required": {
        "clip_vision_a": [
          "CLIP_VISION"
        ],
        "clip_vision_b": [
          "CLIP_VISION"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [false],
    "output_name": [
      "CLIP_VISION"
    ],
    "name": "CLIP Vision Input Switch",
    "display_name": "CLIP Vision Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Conditioning Input Switch": {
    "input": {
      "required": {
        "conditioning_a": [
          "CONDITIONING"
        ],
        "conditioning_b": [
          "CONDITIONING"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "Conditioning Input Switch",
    "display_name": "Conditioning Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Constant Number": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float",
            "bool"
          ]
        ],
        "number": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "number_as_text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Constant Number",
    "display_name": "Constant Number",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Create Grid Image": {
    "input": {
      "required": {
        "images_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/",
            "multiline": false
          }
        ],
        "pattern_glob": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "include_subfolders": [
          [
            "false",
            "true"
          ]
        ],
        "border_width": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "number_of_columns": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ],
        "max_cell_size": [
          "INT",
          {
            "default": 256,
            "min": 32,
            "max": 1280,
            "step": 1
          }
        ],
        "border_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Create Grid Image",
    "display_name": "Create Grid Image",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Create Grid Image from Batch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "border_width": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "number_of_columns": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ],
        "max_cell_size": [
          "INT",
          {
            "default": 256,
            "min": 32,
            "max": 2048,
            "step": 1
          }
        ],
        "border_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Create Grid Image from Batch",
    "display_name": "Create Grid Image from Batch",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Create Morph Image": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "still_image_delay_ms": [
          "FLOAT",
          {
            "default": 2500,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph",
            "multiline": false
          }
        ],
        "filetype": [
          [
            "GIF",
            "APNG"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "image_a_pass",
      "image_b_pass",
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Morph Image",
    "display_name": "Create Morph Image",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "Create Morph Image from Path": {
    "input": {
      "required": {
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "still_image_delay_ms": [
          "FLOAT",
          {
            "default": 2500,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "input_path": [
          "STRING",
          {
            "default": "./ComfyUI",
            "multiline": false
          }
        ],
        "input_pattern": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph",
            "multiline": false
          }
        ],
        "filetype": [
          [
            "GIF",
            "APNG"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Morph Image from Path",
    "display_name": "Create Morph Image from Path",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "Create Video from Path": {
    "input": {
      "required": {
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 120,
            "step": 1
          }
        ],
        "image_delay_sec": [
          "FLOAT",
          {
            "default": 2.5,
            "min": 0.01,
            "max": 60000,
            "step": 0.01
          }
        ],
        "fps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 60,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1920,
            "step": 1
          }
        ],
        "input_path": [
          "STRING",
          {
            "default": "./ComfyUI/input",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "comfy_video",
            "multiline": false
          }
        ],
        "codec": [
          [
            "AVC1",
            "FFV1",
            "H264",
            "MP4V"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Video from Path",
    "display_name": "Create Video from Path",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "CLIPSeg Masking": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "clipseg_model": [
          "CLIPSEG_MODEL"
        ]
      }
    },
    "output": [
      "MASK",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MASK",
      "MASK_IMAGE"
    ],
    "name": "CLIPSeg Masking",
    "display_name": "CLIPSeg Masking",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "CLIPSeg Model Loader": {
    "input": {
      "required": {
        "model": [
          "STRING",
          {
            "default": "CIDAS/clipseg-rd64-refined",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "CLIPSEG_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "clipseg_model"
    ],
    "name": "CLIPSeg Model Loader",
    "display_name": "CLIPSeg Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "CLIPSeg Batch Masking": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "text_a": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_b": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "image_c": [
          "IMAGE"
        ],
        "image_d": [
          "IMAGE"
        ],
        "image_e": [
          "IMAGE"
        ],
        "image_f": [
          "IMAGE"
        ],
        "text_c": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_d": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_e": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_f": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGES_BATCH",
      "MASKS_BATCH",
      "MASK_IMAGES_BATCH"
    ],
    "name": "CLIPSeg Batch Masking",
    "display_name": "CLIPSeg Batch Masking",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Convert Masks to Images": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGES"
    ],
    "name": "Convert Masks to Images",
    "display_name": "Convert Masks to Images",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Control Net Model Input Switch": {
    "input": {
      "required": {
        "control_net_a": [
          "CONTROL_NET"
        ],
        "control_net_b": [
          "CONTROL_NET"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "Control Net Model Input Switch",
    "display_name": "Control Net Model Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Debug Number to Console": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ],
        "label": [
          "STRING",
          {
            "default": "Debug to Console",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [false],
    "output_name": [
      "NUMBER"
    ],
    "name": "Debug Number to Console",
    "display_name": "Debug Number to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Dictionary to Console": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ],
        "label": [
          "STRING",
          {
            "default": "Dictionary Output",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [false],
    "output_name": [
      "DICT"
    ],
    "name": "Dictionary to Console",
    "display_name": "Dictionary to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Diffusers Model Loader": {
    "input": {
      "required": {
        "model_path": [
          []
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Diffusers Model Loader",
    "display_name": "Diffusers Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Diffusers Hub Model Down-Loader": {
    "input": {
      "required": {
        "repo_id": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "revision": [
          "STRING",
          {
            "default": "None",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Diffusers Hub Model Down-Loader",
    "display_name": "Diffusers Hub Model Down-Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Export API": {
    "input": {
      "required": {
        "save_prompt_api": [
          [
            "true",
            "true"
          ]
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output/",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI_Prompt"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 2,
            "max": 9,
            "step": 1
          }
        ],
        "parse_text_tokens": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Export API",
    "display_name": "Export API",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Latent Input Switch": {
    "input": {
      "required": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Input Switch",
    "display_name": "Latent Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Load Cache": {
    "input": {
      "required": {
        "latent_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "image_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "conditioning_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "LATENT",
      "IMAGE",
      "CONDITIONING"
    ],
    "name": "Load Cache",
    "display_name": "Load Cache",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Logic Boolean": {
    "input": {
      "required": {
        "boolean": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "BOOLEAN",
      "NUMBER",
      "INT",
      "FLOAT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "BOOLEAN",
      "NUMBER",
      "INT",
      "FLOAT"
    ],
    "name": "Logic Boolean",
    "display_name": "Logic Boolean",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Boolean Primitive": {
    "input": {
      "required": {
        "boolean": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Boolean Primitive",
    "display_name": "Logic Boolean Primitive",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Comparison OR": {
    "input": {
      "required": {
        "boolean_a": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "boolean_b": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Comparison OR",
    "display_name": "Logic Comparison OR",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Comparison AND": {
    "input": {
      "required": {
        "boolean_a": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "boolean_b": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Comparison AND",
    "display_name": "Logic Comparison AND",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic Comparison XOR": {
    "input": {
      "required": {
        "boolean_a": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "boolean_b": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic Comparison XOR",
    "display_name": "Logic Comparison XOR",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Logic NOT": {
    "input": {
      "required": {
        "boolean": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Logic NOT",
    "display_name": "Logic NOT",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Lora Loader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "NAME_STRING"
    ],
    "name": "Lora Loader",
    "display_name": "Lora Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Image SSAO (Ambient Occlusion)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "depth_images": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "min": 0,
            "max": 5,
            "default": 1,
            "step": 0.01
          }
        ],
        "radius": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 30,
            "step": 0.01
          }
        ],
        "ao_blur": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 2.5,
            "step": 0.01
          }
        ],
        "specular_threshold": [
          "INT",
          {
            "min": 0,
            "max": 255,
            "default": 25,
            "step": 1
          }
        ],
        "enable_specular_masking": [
          [
            "True",
            "False"
          ]
        ],
        "tile_size": [
          "INT",
          {
            "min": 1,
            "max": 512,
            "default": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "composited_images",
      "ssao_images",
      "specular_mask_images"
    ],
    "name": "Image SSAO (Ambient Occlusion)",
    "display_name": "Image SSAO (Ambient Occlusion)",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image SSDO (Direct Occlusion)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "depth_images": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "min": 0,
            "max": 5,
            "default": 1,
            "step": 0.01
          }
        ],
        "radius": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 30,
            "step": 0.01
          }
        ],
        "specular_threshold": [
          "INT",
          {
            "min": 0,
            "max": 255,
            "default": 128,
            "step": 1
          }
        ],
        "colored_occlusion": [
          [
            "True",
            "False"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "composited_images",
      "ssdo_images",
      "ssdo_image_masks",
      "light_source_image_masks"
    ],
    "name": "Image SSDO (Direct Occlusion)",
    "display_name": "Image SSDO (Direct Occlusion)",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Analyze": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "Black White Levels",
            "RGB Levels"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Analyze",
    "display_name": "Image Analyze",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Image Aspect Ratio": {
    "input": {
      "required": {

      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "NUMBER"
        ],
        "height": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "NUMBER",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "aspect_number",
      "aspect_float",
      "is_landscape_bool",
      "aspect_ratio_common",
      "aspect_type"
    ],
    "name": "Image Aspect Ratio",
    "display_name": "Image Aspect Ratio",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Image Batch": {
    "input": {
      "required": {

      },
      "optional": {
        "images_a": [
          "IMAGE"
        ],
        "images_b": [
          "IMAGE"
        ],
        "images_c": [
          "IMAGE"
        ],
        "images_d": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Batch",
    "display_name": "Image Batch",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blank": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Blank",
    "display_name": "Image Blank",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blend by Mask": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "mask": [
          "IMAGE"
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Blend by Mask",
    "display_name": "Image Blend by Mask",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blend": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Blend",
    "display_name": "Image Blend",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blending Mode": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "mode": [
          [
            "add",
            "color",
            "color_burn",
            "color_dodge",
            "darken",
            "difference",
            "exclusion",
            "hard_light",
            "hue",
            "lighten",
            "multiply",
            "overlay",
            "screen",
            "soft_light"
          ]
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Blending Mode",
    "display_name": "Image Blending Mode",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Bloom Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "radius": [
          "FLOAT",
          {
            "default": 10,
            "min": 0,
            "max": 1024,
            "step": 0.1
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Bloom Filter",
    "display_name": "Image Bloom Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Canny Filter": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "enable_threshold": [
          [
            "false",
            "true"
          ]
        ],
        "threshold_low": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "threshold_high": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Canny Filter",
    "display_name": "Image Canny Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Chromatic Aberration": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "red_offset": [
          "INT",
          {
            "default": 2,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "green_offset": [
          "INT",
          {
            "default": -1,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "blue_offset": [
          "INT",
          {
            "default": 1,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "fade_radius": [
          "INT",
          {
            "default": 12,
            "min": 0,
            "max": 1024,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Chromatic Aberration",
    "display_name": "Image Chromatic Aberration",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Color Palette": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "colors": [
          "INT",
          {
            "default": 16,
            "min": 8,
            "max": 256,
            "step": 1
          }
        ],
        "mode": [
          [
            "Chart",
            "back_to_back"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "LIST"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "color_palettes"
    ],
    "name": "Image Color Palette",
    "display_name": "Image Color Palette",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Image Crop Face": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_padding_factor": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 2,
            "step": 0.01
          }
        ],
        "cascade_xml": [
          [
            "lbpcascade_animeface.xml",
            "haarcascade_frontalface_default.xml",
            "haarcascade_frontalface_alt.xml",
            "haarcascade_frontalface_alt2.xml",
            "haarcascade_frontalface_alt_tree.xml",
            "haarcascade_profileface.xml",
            "haarcascade_upperbody.xml",
            "haarcascade_eye.xml"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Face",
    "display_name": "Image Crop Face",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Crop Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Location",
    "display_name": "Image Crop Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Crop Square Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "max": 24576,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "max": 24576,
            "min": 0,
            "step": 1
          }
        ],
        "size": [
          "INT",
          {
            "default": 256,
            "max": 4096,
            "min": 5,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Square Location",
    "display_name": "Image Crop Square Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Displacement Warp": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "displacement_maps": [
          "IMAGE"
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 25,
            "min": -4096,
            "max": 4096,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Displacement Warp",
    "display_name": "Image Displacement Warp",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Lucy Sharpen": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "iterations": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 12,
            "step": 1
          }
        ],
        "kernel_size": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Lucy Sharpen",
    "display_name": "Image Lucy Sharpen",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Paste Face": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK_IMAGE"
    ],
    "name": "Image Paste Face",
    "display_name": "Image Paste Face",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Paste Crop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Paste Crop",
    "display_name": "Image Paste Crop",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Paste Crop by Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Paste Crop by Location",
    "display_name": "Image Paste Crop by Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Pixelate": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "pixelation_size": [
          "FLOAT",
          {
            "default": 164,
            "min": 16,
            "max": 480,
            "step": 1
          }
        ],
        "num_colors": [
          "FLOAT",
          {
            "default": 16,
            "min": 2,
            "max": 256,
            "step": 1
          }
        ],
        "init_mode": [
          [
            "k-means++",
            "random",
            "none"
          ]
        ],
        "max_iterations": [
          "FLOAT",
          {
            "default": 100,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "dither": [
          [
            "False",
            "True"
          ]
        ],
        "dither_mode": [
          [
            "FloydSteinberg",
            "Ordered"
          ]
        ]
      },
      "optional": {
        "color_palettes": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "color_palette_mode": [
          [
            "Brightness",
            "BrightnessAndTonal",
            "Linear",
            "Tonal"
          ]
        ],
        "reverse_palette": [
          [
            "False",
            "True"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Pixelate",
    "display_name": "Image Pixelate",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Power Noise": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "frequency": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 10,
            "min": 0,
            "step": 0.01
          }
        ],
        "attenuation": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 10,
            "min": 0,
            "step": 0.01
          }
        ],
        "noise_type": [
          [
            "grey",
            "white",
            "pink",
            "blue",
            "green",
            "mix"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Power Noise",
    "display_name": "Image Power Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Dragan Photography Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 16,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 16,
            "step": 0.01
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 16,
            "step": 0.01
          }
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 6,
            "step": 0.01
          }
        ],
        "highpass_radius": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 255,
            "step": 0.01
          }
        ],
        "highpass_samples": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 6,
            "step": 1
          }
        ],
        "highpass_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 3,
            "step": 0.01
          }
        ],
        "colorize": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Dragan Photography Filter",
    "display_name": "Image Dragan Photography Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Edge Detection Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "normal",
            "laplacian"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Edge Detection Filter",
    "display_name": "Image Edge Detection Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Film Grain": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "density": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "highlights": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 255,
            "step": 0.01
          }
        ],
        "supersample_factor": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 8,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Film Grain",
    "display_name": "Image Film Grain",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Filter Adjustments": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 0,
            "min": -1,
            "max": 1,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 2,
            "step": 0.01
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 0.01
          }
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 1,
            "min": -5,
            "max": 5,
            "step": 0.01
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16,
            "step": 1
          }
        ],
        "gaussian_blur": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1024,
            "step": 0.1
          }
        ],
        "edge_enhance": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "detail_enhance": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Filter Adjustments",
    "display_name": "Image Filter Adjustments",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Flip": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "horizontal",
            "vertical"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Flip",
    "display_name": "Image Flip",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Gradient Map": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "gradient_image": [
          "IMAGE"
        ],
        "flip_left_right": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Gradient Map",
    "display_name": "Image Gradient Map",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Generate Gradient": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "direction": [
          [
            "horizontal",
            "vertical"
          ]
        ],
        "tolerance": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "min": 0,
            "step": 1
          }
        ],
        "gradient_stops": [
          "STRING",
          {
            "default": "0:255,0,0\n25:255,255,255\n50:0,255,0\n75:0,0,255",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Generate Gradient",
    "display_name": "Image Generate Gradient",
    "description": "",
    "category": "WAS Suite/Image/Generate",
    "output_node": false
  },
  "Image High Pass Filter": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "radius": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 500,
            "step": 1
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "color_output": [
          [
            "true",
            "false"
          ]
        ],
        "neutral_background": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image High Pass Filter",
    "display_name": "Image High Pass Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image History Loader": {
    "input": {
      "required": {
        "image": [
          [
            "No History"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "filename_text"
    ],
    "name": "Image History Loader",
    "display_name": "Image History Loader",
    "description": "",
    "category": "WAS Suite/History",
    "output_node": false
  },
  "Image Input Switch": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Input Switch",
    "display_name": "Image Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Image Levels Adjustment": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "black_level": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "mid_level": [
          "FLOAT",
          {
            "default": 127.5,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "white_level": [
          "FLOAT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Levels Adjustment",
    "display_name": "Image Levels Adjustment",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Load": {
    "input": {
      "required": {
        "image_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/example.png",
            "multiline": false
          }
        ],
        "RGBA": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "filename_text_extension": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image",
      "mask",
      "filename_text"
    ],
    "name": "Image Load",
    "display_name": "Image Load",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Image Median Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "diameter": [
          "INT",
          {
            "default": 2,
            "min": 0.1,
            "max": 255,
            "step": 1
          }
        ],
        "sigma_color": [
          "FLOAT",
          {
            "default": 10,
            "min": -255,
            "max": 255,
            "step": 0.1
          }
        ],
        "sigma_space": [
          "FLOAT",
          {
            "default": 10,
            "min": -255,
            "max": 255,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Median Filter",
    "display_name": "Image Median Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Mix RGB Channels": {
    "input": {
      "required": {
        "red_channel": [
          "IMAGE"
        ],
        "green_channel": [
          "IMAGE"
        ],
        "blue_channel": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Mix RGB Channels",
    "display_name": "Image Mix RGB Channels",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Monitor Effects Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "Digital Distortion",
            "Signal Distortion",
            "TV Distortion"
          ]
        ],
        "amplitude": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "offset": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Monitor Effects Filter",
    "display_name": "Image Monitor Effects Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Nova Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "frequency": [
          "FLOAT",
          {
            "default": 3.14,
            "min": 0,
            "max": 100,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Nova Filter",
    "display_name": "Image Nova Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Padding": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "feathering": [
          "INT",
          {
            "default": 120,
            "min": 0,
            "max": 2048,
            "step": 1
          }
        ],
        "feather_second_pass": [
          [
            "true",
            "false"
          ]
        ],
        "left_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "right_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "top_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "bottom_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Padding",
    "display_name": "Image Padding",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Perlin Noise": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 2048,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 2048,
            "min": 64,
            "step": 1
          }
        ],
        "scale": [
          "INT",
          {
            "default": 100,
            "max": 2048,
            "min": 2,
            "step": 1
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 4,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 100,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Perlin Noise",
    "display_name": "Image Perlin Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Rembg (Remove Background)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "transparency": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "model": [
          [
            "u2net",
            "u2netp",
            "u2net_human_seg",
            "silueta",
            "isnet-general-use",
            "isnet-anime"
          ]
        ],
        "post_processing": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "only_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "alpha_matting": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "alpha_matting_foreground_threshold": [
          "INT",
          {
            "default": 240,
            "min": 0,
            "max": 255
          }
        ],
        "alpha_matting_background_threshold": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255
          }
        ],
        "alpha_matting_erode_size": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255
          }
        ],
        "background_color": [
          [
            "none",
            "black",
            "white",
            "magenta",
            "chroma green",
            "chroma blue"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Rembg (Remove Background)",
    "display_name": "Image Rembg (Remove Background)",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "Image Perlin Power Fractal": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "scale": [
          "INT",
          {
            "default": 100,
            "max": 2048,
            "min": 2,
            "step": 1
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 4,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 100,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "lacunarity": [
          "FLOAT",
          {
            "default": 2,
            "max": 100,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "exponent": [
          "FLOAT",
          {
            "default": 2,
            "max": 100,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Perlin Power Fractal",
    "display_name": "Image Perlin Power Fractal",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Remove Background (Alpha)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "background",
            "foreground"
          ]
        ],
        "threshold": [
          "INT",
          {
            "default": 127,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_tolerance": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Remove Background (Alpha)",
    "display_name": "Image Remove Background (Alpha)",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Remove Color": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "target_red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "target_green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "target_blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "clip_threshold": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Remove Color",
    "display_name": "Image Remove Color",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Resize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "rescale",
            "resize"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "resampling": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16,
            "step": 0.01
          }
        ],
        "resize_width": [
          "INT",
          {
            "default": 1024,
            "min": 1,
            "max": 48000,
            "step": 1
          }
        ],
        "resize_height": [
          "INT",
          {
            "default": 1536,
            "min": 1,
            "max": 48000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Resize",
    "display_name": "Image Resize",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Rotate": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "transpose",
            "internal"
          ]
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 360,
            "step": 90
          }
        ],
        "sampler": [
          [
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Rotate",
    "display_name": "Image Rotate",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Rotate Hue": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "hue_shift": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Rotate Hue",
    "display_name": "Image Rotate Hue",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Save": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "output_path": [
          "STRING",
          {
            "default": "[time(%Y-%m-%d)]",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 9,
            "step": 1
          }
        ],
        "filename_number_start": [
          [
            "false",
            "true"
          ]
        ],
        "extension": [
          [
            "png",
            "jpg",
            "jpeg",
            "gif",
            "tiff",
            "webp",
            "bmp"
          ]
        ],
        "dpi": [
          "INT",
          {
            "default": 300,
            "min": 1,
            "max": 2400,
            "step": 1
          }
        ],
        "quality": [
          "INT",
          {
            "default": 100,
            "min": 1,
            "max": 100,
            "step": 1
          }
        ],
        "optimize_image": [
          [
            "true",
            "false"
          ]
        ],
        "lossless_webp": [
          [
            "false",
            "true"
          ]
        ],
        "overwrite_mode": [
          [
            "false",
            "prefix_as_filename"
          ]
        ],
        "show_history": [
          [
            "false",
            "true"
          ]
        ],
        "show_history_by_prefix": [
          [
            "true",
            "false"
          ]
        ],
        "embed_workflow": [
          [
            "true",
            "false"
          ]
        ],
        "show_previews": [
          [
            "true",
            "false"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Image Save",
    "display_name": "Image Save",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Image Seamless Texture": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "blending": [
          "FLOAT",
          {
            "default": 0.4,
            "max": 1,
            "min": 0,
            "step": 0.01
          }
        ],
        "tiled": [
          [
            "true",
            "false"
          ]
        ],
        "tiles": [
          "INT",
          {
            "default": 2,
            "max": 6,
            "min": 2,
            "step": 2
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "Image Seamless Texture",
    "display_name": "Image Seamless Texture",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Select Channel": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "channel": [
          [
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Select Channel",
    "display_name": "Image Select Channel",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Select Color": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "variance": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Select Color",
    "display_name": "Image Select Color",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Shadows and Highlights": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "shadow_threshold": [
          "FLOAT",
          {
            "default": 75,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "shadow_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": -12,
            "max": 12,
            "step": 0.1
          }
        ],
        "shadow_smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": -255,
            "max": 255,
            "step": 0.1
          }
        ],
        "highlight_threshold": [
          "FLOAT",
          {
            "default": 175,
            "min": 0,
            "max": 255,
            "step": 0.1
          }
        ],
        "highlight_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": -12,
            "max": 12,
            "step": 0.1
          }
        ],
        "highlight_smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": -255,
            "max": 255,
            "step": 0.1
          }
        ],
        "simplify_isolation": [
          "FLOAT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image",
      "shadow_map",
      "highlight_map"
    ],
    "name": "Image Shadows and Highlights",
    "display_name": "Image Shadows and Highlights",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Size to Number": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "NUMBER",
      "NUMBER",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "width_num",
      "height_num",
      "width_float",
      "height_float",
      "width_int",
      "height_int"
    ],
    "name": "Image Size to Number",
    "display_name": "Image Size to Number",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Image Stitch": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "stitch": [
          [
            "top",
            "left",
            "bottom",
            "right"
          ]
        ],
        "feathering": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 2048,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Stitch",
    "display_name": "Image Stitch",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Style Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "style": [
          [
            "1977",
            "aden",
            "brannan",
            "brooklyn",
            "clarendon",
            "earlybird",
            "fairy tale",
            "gingham",
            "hudson",
            "inkwell",
            "kelvin",
            "lark",
            "lofi",
            "maven",
            "mayfair",
            "moon",
            "nashville",
            "perpetua",
            "reyes",
            "rise",
            "slumber",
            "stinson",
            "toaster",
            "valencia",
            "walden",
            "willow",
            "xpro2"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Style Filter",
    "display_name": "Image Style Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Threshold": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Threshold",
    "display_name": "Image Threshold",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Tiled": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "num_tiles": [
          "INT",
          {
            "default": 4,
            "max": 64,
            "min": 2,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGES"
    ],
    "name": "Image Tiled",
    "display_name": "Image Tiled",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Transpose": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_overlay": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "X": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "Y": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 1
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Transpose",
    "display_name": "Image Transpose",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image fDOF Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "depth": [
          "IMAGE"
        ],
        "mode": [
          [
            "mock",
            "gaussian",
            "box"
          ]
        ],
        "radius": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 128,
            "step": 1
          }
        ],
        "samples": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image fDOF Filter",
    "display_name": "Image fDOF Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image to Latent Mask": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "channel": [
          [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Image to Latent Mask",
    "display_name": "Image to Latent Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Image to Noise": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "num_colors": [
          "INT",
          {
            "default": 16,
            "max": 256,
            "min": 2,
            "step": 2
          }
        ],
        "black_mix": [
          "INT",
          {
            "default": 0,
            "max": 20,
            "min": 0,
            "step": 1
          }
        ],
        "gaussian_mix": [
          "FLOAT",
          {
            "default": 0,
            "max": 1024,
            "min": 0,
            "step": 0.1
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1,
            "max": 2,
            "min": 0,
            "step": 0.01
          }
        ],
        "output_mode": [
          [
            "batch",
            "list"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image to Noise",
    "display_name": "Image to Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image to Seed": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [true],
    "output_name": [
      "INT"
    ],
    "name": "Image to Seed",
    "display_name": "Image to Seed",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Images to RGB": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Images to RGB",
    "display_name": "Images to RGB",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Images to Linear": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Images to Linear",
    "display_name": "Images to Linear",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Integer place counter": {
    "input": {
      "required": {
        "int_input": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT_PLACES"
    ],
    "name": "Integer place counter",
    "display_name": "Integer place counter",
    "description": "",
    "category": "WAS Suite/Integer",
    "output_node": false
  },
  "Image Voronoi Noise Filter": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "density": [
          "INT",
          {
            "default": 50,
            "max": 256,
            "min": 10,
            "step": 2
          }
        ],
        "modulator": [
          "INT",
          {
            "default": 0,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      },
      "optional": {
        "flat": [
          [
            "False",
            "True"
          ]
        ],
        "RGB_output": [
          [
            "True",
            "False"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "image"
    ],
    "name": "Image Voronoi Noise Filter",
    "display_name": "Image Voronoi Noise Filter",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "KSampler (WAS)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "SEED"
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "KSampler (WAS)",
    "display_name": "KSampler (WAS)",
    "description": "",
    "category": "WAS Suite/Sampling",
    "output_node": false
  },
  "KSampler Cycle": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "tiled_vae": [
          [
            "disable",
            "enable"
          ]
        ],
        "latent_upscale": [
          [
            "disable",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.1,
            "max": 8,
            "step": 0.1
          }
        ],
        "upscale_cycles": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 12,
            "step": 1
          }
        ],
        "starting_denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "cycle_denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "scale_denoise": [
          [
            "enable",
            "disable"
          ]
        ],
        "scale_sampling": [
          [
            "bilinear",
            "bicubic",
            "nearest",
            "lanczos"
          ]
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": {
        "secondary_model": [
          "MODEL"
        ],
        "secondary_start_cycle": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 16,
            "step": 1
          }
        ],
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "processor_model": [
          "UPSCALE_MODEL"
        ],
        "pos_additive": [
          "CONDITIONING"
        ],
        "neg_additive": [
          "CONDITIONING"
        ],
        "pos_add_mode": [
          [
            "increment",
            "decrement"
          ]
        ],
        "pos_add_strength": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "pos_add_strength_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "pos_add_strength_cutoff": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 10,
            "step": 0.01
          }
        ],
        "neg_add_mode": [
          [
            "increment",
            "decrement"
          ]
        ],
        "neg_add_strength": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "neg_add_strength_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "neg_add_strength_cutoff": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 10,
            "step": 0.01
          }
        ],
        "sharpen_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "sharpen_radius": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 12,
            "step": 1
          }
        ],
        "steps_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "steps_control": [
          [
            "decrement",
            "increment"
          ]
        ],
        "steps_scaling_value": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 20,
            "step": 1
          }
        ],
        "steps_cutoff": [
          "INT",
          {
            "default": 20,
            "min": 4,
            "max": 1000,
            "step": 1
          }
        ],
        "denoise_cutoff": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "latent(s)"
    ],
    "name": "KSampler Cycle",
    "display_name": "KSampler Cycle",
    "description": "",
    "category": "WAS Suite/Sampling",
    "output_node": false
  },
  "Latent Batch": {
    "input": {
      "required": {

      },
      "optional": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "latent_c": [
          "LATENT"
        ],
        "latent_d": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "latent"
    ],
    "name": "Latent Batch",
    "display_name": "Latent Batch",
    "description": "",
    "category": "WAS Suite/Latent",
    "output_node": false
  },
  "Latent Noise Injection": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "noise_std": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Noise Injection",
    "display_name": "Latent Noise Injection",
    "description": "",
    "category": "WAS Suite/Latent/Generate",
    "output_node": false
  },
  "Latent Size to Number": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "NUMBER",
      "NUMBER",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "tensor_w_num",
      "tensor_h_num"
    ],
    "name": "Latent Size to Number",
    "display_name": "Latent Size to Number",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Latent Upscale by Factor (WAS)": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "mode": [
          [
            "area",
            "bicubic",
            "bilinear",
            "nearest"
          ]
        ],
        "factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.1,
            "max": 8,
            "step": 0.01
          }
        ],
        "align": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Upscale by Factor (WAS)",
    "display_name": "Latent Upscale by Factor (WAS)",
    "description": "",
    "category": "WAS Suite/Latent/Transform",
    "output_node": false
  },
  "Load Image Batch": {
    "input": {
      "required": {
        "mode": [
          [
            "single_image",
            "incremental_image",
            "random"
          ]
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 150000,
            "step": 1
          }
        ],
        "label": [
          "STRING",
          {
            "default": "Batch 001",
            "multiline": false
          }
        ],
        "path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "pattern": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "allow_RGBA_output": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "filename_text_extension": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "image",
      "filename_text"
    ],
    "name": "Load Image Batch",
    "display_name": "Load Image Batch",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Load Text File": {
    "input": {
      "required": {
        "file_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "DICT"
    ],
    "name": "Load Text File",
    "display_name": "Load Text File",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Load Lora": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "None",
            "3DMM_V12.safetensors",
            "ClothingAdjuster3.safetensors",
            "LowRA.safetensors",
            "add-detail-xl.safetensors",
            "add_detail.safetensors",
            "animetarotV51.safetensors",
            "epi_noiseoffset2.pt"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "NAME_STRING"
    ],
    "name": "Load Lora",
    "display_name": "Load Lora",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Lora Input Switch": {
    "input": {
      "required": {
        "model_a": [
          "MODEL"
        ],
        "clip_a": [
          "CLIP"
        ],
        "model_b": [
          "MODEL"
        ],
        "clip_b": [
          "CLIP"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "Lora Input Switch",
    "display_name": "Lora Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Masks Add": {
    "input": {
      "required": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Masks Add",
    "display_name": "Masks Add",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Subtract": {
    "input": {
      "required": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Masks Subtract",
    "display_name": "Masks Subtract",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Arbitrary Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Arbitrary Region",
    "display_name": "Mask Arbitrary Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Batch to Mask": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "batch_number": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "Mask Batch to Mask",
    "display_name": "Mask Batch to Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Batch": {
    "input": {
      "optional": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ],
        "masks_c": [
          "MASK"
        ],
        "masks_d": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "masks"
    ],
    "name": "Mask Batch",
    "display_name": "Mask Batch",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Ceiling Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Ceiling Region",
    "display_name": "Mask Ceiling Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Dominant Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Crop Dominant Region",
    "display_name": "Mask Crop Dominant Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Minority Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Crop Minority Region",
    "display_name": "Mask Crop Minority Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Region": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "region_type": [
          [
            "dominant",
            "minority"
          ]
        ]
      }
    },
    "output": [
      "MASK",
      "CROP_DATA",
      "INT",
      "INT",
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false],
    "output_name": [
      "cropped_mask",
      "crop_data",
      "top_int",
      "left_int",
      "right_int",
      "bottom_int",
      "width_int",
      "height_int"
    ],
    "name": "Mask Crop Region",
    "display_name": "Mask Crop Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Paste Region": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "crop_mask": [
          "MASK"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "MASK",
      "MASK"
    ],
    "name": "Mask Paste Region",
    "display_name": "Mask Paste Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Dilate Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "iterations": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Dilate Region",
    "display_name": "Mask Dilate Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Dominant Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Dominant Region",
    "display_name": "Mask Dominant Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Erode Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "iterations": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Erode Region",
    "display_name": "Mask Erode Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Fill Holes": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Fill Holes",
    "display_name": "Mask Fill Holes",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Floor Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Floor Region",
    "display_name": "Mask Floor Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Gaussian Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "radius": [
          "FLOAT",
          {
            "default": 5,
            "min": 0,
            "max": 1024,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Gaussian Region",
    "display_name": "Mask Gaussian Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Invert": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Invert",
    "display_name": "Mask Invert",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Minority Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Minority Region",
    "display_name": "Mask Minority Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Smooth Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 5,
            "min": 0,
            "max": 128,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Smooth Region",
    "display_name": "Mask Smooth Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Threshold Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "black_threshold": [
          "INT",
          {
            "default": 75,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "white_threshold": [
          "INT",
          {
            "default": 175,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Threshold Region",
    "display_name": "Mask Threshold Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Combine Regions": {
    "input": {
      "required": {
        "mask_a": [
          "MASK"
        ],
        "mask_b": [
          "MASK"
        ]
      },
      "optional": {
        "mask_c": [
          "MASK"
        ],
        "mask_d": [
          "MASK"
        ],
        "mask_e": [
          "MASK"
        ],
        "mask_f": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "Masks Combine Regions",
    "display_name": "Masks Combine Regions",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Combine Batch": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [false],
    "output_name": [
      "MASK"
    ],
    "name": "Masks Combine Batch",
    "display_name": "Masks Combine Batch",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "MiDaS Model Loader": {
    "input": {
      "required": {
        "midas_model": [
          [
            "DPT_Large",
            "DPT_Hybrid"
          ]
        ]
      }
    },
    "output": [
      "MIDAS_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "midas_model"
    ],
    "name": "MiDaS Model Loader",
    "display_name": "MiDaS Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "MiDaS Depth Approximation": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "use_cpu": [
          [
            "false",
            "true"
          ]
        ],
        "midas_type": [
          [
            "DPT_Large",
            "DPT_Hybrid"
          ]
        ],
        "invert_depth": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "midas_model": [
          "MIDAS_MODEL"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "images"
    ],
    "name": "MiDaS Depth Approximation",
    "display_name": "MiDaS Depth Approximation",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "MiDaS Mask Image": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "use_cpu": [
          [
            "false",
            "true"
          ]
        ],
        "midas_model": [
          [
            "DPT_Large",
            "DPT_Hybrid",
            "DPT_Small"
          ]
        ],
        "remove": [
          [
            "background",
            "foregroud"
          ]
        ],
        "threshold": [
          [
            "false",
            "true"
          ]
        ],
        "threshold_low": [
          "FLOAT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_mid": [
          "FLOAT",
          {
            "default": 200,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_high": [
          "FLOAT",
          {
            "default": 210,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0,
            "max": 16,
            "step": 0.01
          }
        ],
        "background_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "MiDaS Mask Image",
    "display_name": "MiDaS Mask Image",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "Model Input Switch": {
    "input": {
      "required": {
        "model_a": [
          "MODEL"
        ],
        "model_b": [
          "MODEL"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "MODEL"
    ],
    "name": "Model Input Switch",
    "display_name": "Model Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Counter": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float"
          ]
        ],
        "mode": [
          [
            "increment",
            "decrement",
            "increment_to_stop",
            "decrement_to_stop"
          ]
        ],
        "start": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19,
            "step": 0.01
          }
        ],
        "stop": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19,
            "step": 0.01
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 99999,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "reset_bool": [
          "NUMBER"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "number",
      "float",
      "int"
    ],
    "name": "Number Counter",
    "display_name": "Number Counter",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Number Operation": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "operation": [
          [
            "addition",
            "subtraction",
            "division",
            "floor division",
            "multiplication",
            "exponentiation",
            "modulus",
            "greater-than",
            "greater-than or equals",
            "less-than",
            "less-than or equals",
            "equals",
            "does not equal"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Operation",
    "display_name": "Number Operation",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Float": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [false],
    "output_name": [
      "FLOAT"
    ],
    "name": "Number to Float",
    "display_name": "Number to Float",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number Input Switch": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Input Switch",
    "display_name": "Number Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Input Condition": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "return_boolean": [
          [
            "false",
            "true"
          ]
        ],
        "comparison": [
          [
            "and",
            "or",
            "greater-than",
            "greater-than or equals",
            "less-than",
            "less-than or equals",
            "equals",
            "does not equal",
            "divisible by",
            "if A odd",
            "if A even",
            "if A prime",
            "factor of"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Input Condition",
    "display_name": "Number Input Condition",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Multiple Of": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ],
        "multiple": [
          "INT",
          {
            "default": 8,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Multiple Of",
    "display_name": "Number Multiple Of",
    "description": "",
    "category": "WAS Suite/Number/Functions",
    "output_node": false
  },
  "Number PI": {
    "input": {
      "required": {

      }
    },
    "output": [
      "NUMBER",
      "FLOAT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "NUMBER",
      "FLOAT"
    ],
    "name": "Number PI",
    "display_name": "Number PI",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Number to Int": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [false],
    "output_name": [
      "INT"
    ],
    "name": "Number to Int",
    "display_name": "Number to Int",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Seed": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "SEED"
    ],
    "output_is_list": [false],
    "output_name": [
      "SEED"
    ],
    "name": "Number to Seed",
    "display_name": "Number to Seed",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to String": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Number to String",
    "display_name": "Number to String",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Text": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Number to Text",
    "display_name": "Number to Text",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Boolean To Text": {
    "input": {
      "required": {
        "boolean": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Boolean To Text",
    "display_name": "Boolean To Text",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Prompt Styles Selector": {
    "input": {
      "required": {
        "style": [
          [
            "None"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive_string",
      "negative_string"
    ],
    "name": "Prompt Styles Selector",
    "display_name": "Prompt Styles Selector",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Prompt Multiple Styles Selector": {
    "input": {
      "required": {
        "style1": [
          [
            "None"
          ]
        ],
        "style2": [
          [
            "None"
          ]
        ],
        "style3": [
          [
            "None"
          ]
        ],
        "style4": [
          [
            "None"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "positive_string",
      "negative_string"
    ],
    "name": "Prompt Multiple Styles Selector",
    "display_name": "Prompt Multiple Styles Selector",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Random Number": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float",
            "bool"
          ]
        ],
        "minimum": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "maximum": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Random Number",
    "display_name": "Random Number",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Save Text File": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "path": [
          "STRING",
          {
            "default": "./ComfyUI/output/[time(%Y-%m-%d)]",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 9,
            "step": 1
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Save Text File",
    "display_name": "Save Text File",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Seed": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "SEED",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "seed",
      "number",
      "float",
      "int"
    ],
    "name": "Seed",
    "display_name": "Seed",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Tensor Batch to Image": {
    "input": {
      "required": {
        "images_batch": [
          "IMAGE"
        ],
        "batch_image_number": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Tensor Batch to Image",
    "display_name": "Tensor Batch to Image",
    "description": "",
    "category": "WAS Suite/Latent/Transform",
    "output_node": false
  },
  "BLIP Analyze Image": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "caption",
            "interrogate"
          ]
        ],
        "question": [
          "STRING",
          {
            "default": "What does the background consist of?",
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "blip_model": [
          "BLIP_MODEL"
        ]
      },
      "optional": {
        "min_length": [
          "INT",
          {
            "min": 1,
            "max": 1024,
            "default": 24
          }
        ],
        "max_length": [
          "INT",
          {
            "min": 2,
            "max": 1024,
            "default": 64
          }
        ],
        "num_beams": [
          "INT",
          {
            "min": 1,
            "max": 12,
            "default": 5
          }
        ],
        "no_repeat_ngram_size": [
          "INT",
          {
            "min": 1,
            "max": 12,
            "default": 3
          }
        ],
        "early_stopping": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, true],
    "output_name": [
      "STRING",
      "STRING"
    ],
    "name": "BLIP Analyze Image",
    "display_name": "BLIP Analyze Image",
    "description": "",
    "category": "WAS Suite/Text/AI",
    "output_node": false
  },
  "SAM Model Loader": {
    "input": {
      "required": {
        "model_size": [
          [
            "ViT-H",
            "ViT-L",
            "ViT-B"
          ]
        ]
      }
    },
    "output": [
      "SAM_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAM_MODEL"
    ],
    "name": "SAM Model Loader",
    "display_name": "SAM Model Loader",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Parameters": {
    "input": {
      "required": {
        "points": [
          "STRING",
          {
            "default": "[128, 128]; [0, 0]",
            "multiline": false
          }
        ],
        "labels": [
          "STRING",
          {
            "default": "[1, 0]",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "SAM_PARAMETERS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAM_PARAMETERS"
    ],
    "name": "SAM Parameters",
    "display_name": "SAM Parameters",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Parameters Combine": {
    "input": {
      "required": {
        "sam_parameters_a": [
          "SAM_PARAMETERS"
        ],
        "sam_parameters_b": [
          "SAM_PARAMETERS"
        ]
      }
    },
    "output": [
      "SAM_PARAMETERS"
    ],
    "output_is_list": [false],
    "output_name": [
      "SAM_PARAMETERS"
    ],
    "name": "SAM Parameters Combine",
    "display_name": "SAM Parameters Combine",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Image Mask": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL"
        ],
        "sam_parameters": [
          "SAM_PARAMETERS"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "SAM Image Mask",
    "display_name": "SAM Image Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Samples Passthrough (Stat System)": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [false],
    "output_name": [
      "samples"
    ],
    "name": "Samples Passthrough (Stat System)",
    "display_name": "Samples Passthrough (Stat System)",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": false
  },
  "String to Text": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {

          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "String to Text",
    "display_name": "String to Text",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Image Bounds": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Image Bounds",
    "display_name": "Image Bounds",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Inset Image Bounds": {
    "input": {
      "required": {
        "image_bounds": [
          "IMAGE_BOUNDS"
        ],
        "inset_left": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "inset_right": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "inset_top": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "inset_bottom": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Inset Image Bounds",
    "display_name": "Inset Image Bounds",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Blend": {
    "input": {
      "required": {
        "target": [
          "IMAGE"
        ],
        "target_bounds": [
          "IMAGE_BOUNDS"
        ],
        "source": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Blend",
    "display_name": "Bounded Image Blend",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Blend with Mask": {
    "input": {
      "required": {
        "target": [
          "IMAGE"
        ],
        "target_mask": [
          "MASK"
        ],
        "target_bounds": [
          "IMAGE_BOUNDS"
        ],
        "source": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Blend with Mask",
    "display_name": "Bounded Image Blend with Mask",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Crop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_bounds": [
          "IMAGE_BOUNDS"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Crop",
    "display_name": "Bounded Image Crop",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Crop with Mask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "padding_left": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "padding_right": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "padding_top": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "padding_bottom": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "IMAGE",
      "IMAGE_BOUNDS"
    ],
    "name": "Bounded Image Crop with Mask",
    "display_name": "Bounded Image Crop with Mask",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Image Bounds to Console": {
    "input": {
      "required": {
        "image_bounds": [
          "IMAGE_BOUNDS"
        ],
        "label": [
          "STRING",
          {
            "default": "Debug to Console",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [false],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Image Bounds to Console",
    "display_name": "Image Bounds to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Text Dictionary Update": {
    "input": {
      "required": {
        "dictionary_a": [
          "DICT"
        ],
        "dictionary_b": [
          "DICT"
        ]
      },
      "optional": {
        "dictionary_c": [
          "DICT"
        ],
        "dictionary_d": [
          "DICT"
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [false],
    "output_name": [
      "DICT"
    ],
    "name": "Text Dictionary Update",
    "display_name": "Text Dictionary Update",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary Get": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ],
        "key": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "default_value": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Dictionary Get",
    "display_name": "Text Dictionary Get",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary Convert": {
    "input": {
      "required": {
        "dictionary_text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [false],
    "output_name": [
      "DICT"
    ],
    "name": "Text Dictionary Convert",
    "display_name": "Text Dictionary Convert",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary New": {
    "input": {
      "required": {
        "key_1": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_1": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "key_2": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_2": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "key_3": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_3": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "key_4": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_4": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "key_5": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "value_5": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [false],
    "output_name": [
      "DICT"
    ],
    "name": "Text Dictionary New",
    "display_name": "Text Dictionary New",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary Keys": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ]
      },
      "optional": {

      }
    },
    "output": [
      "LIST"
    ],
    "output_is_list": [false],
    "output_name": [
      "LIST"
    ],
    "name": "Text Dictionary Keys",
    "display_name": "Text Dictionary Keys",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Dictionary To Text": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ]
      },
      "optional": {

      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Dictionary To Text",
    "display_name": "Text Dictionary To Text",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Add Tokens": {
    "input": {
      "required": {
        "tokens": [
          "STRING",
          {
            "default": "[hello]: world",
            "multiline": true
          }
        ],
        "print_current_tokens": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Text Add Tokens",
    "display_name": "Text Add Tokens",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": true
  },
  "Text Add Token by Input": {
    "input": {
      "required": {
        "token_name": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "token_value": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "print_current_tokens": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Text Add Token by Input",
    "display_name": "Text Add Token by Input",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": true
  },
  "Text Compare": {
    "input": {
      "required": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "mode": [
          [
            "similarity",
            "difference"
          ]
        ],
        "tolerance": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "BOOLEAN",
      "NUMBER",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "TEXT_A_PASS",
      "TEXT_B_PASS",
      "BOOLEAN",
      "SCORE_NUMBER",
      "COMPARISON_TEXT"
    ],
    "name": "Text Compare",
    "display_name": "Text Compare",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Concatenate": {
    "input": {
      "required": {
        "delimiter": [
          "STRING",
          {
            "default": ", "
          }
        ],
        "clean_whitespace": [
          [
            "true",
            "false"
          ]
        ]
      },
      "optional": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Concatenate",
    "display_name": "Text Concatenate",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text File History Loader": {
    "input": {
      "required": {
        "file": [
          [
            "No History"
          ]
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "STRING",
      "DICT"
    ],
    "name": "Text File History Loader",
    "display_name": "Text File History Loader",
    "description": "",
    "category": "WAS Suite/History",
    "output_node": false
  },
  "Text Find and Replace by Dictionary": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "dictionary": [
          "DICT"
        ],
        "replacement_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Find and Replace by Dictionary",
    "display_name": "Text Find and Replace by Dictionary",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Find and Replace Input": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "find": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "replace": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "result_text",
      "replacement_count_number",
      "replacement_count_float",
      "replacement_count_int"
    ],
    "name": "Text Find and Replace Input",
    "display_name": "Text Find and Replace Input",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Find and Replace": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "find": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "result_text",
      "replacement_count_number",
      "replacement_count_float",
      "replacement_count_int"
    ],
    "name": "Text Find and Replace",
    "display_name": "Text Find and Replace",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Find": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "substring": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "pattern": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": "BOOLEAN",
    "output_is_list": [false, false, false, false, false, false, false],
    "output_name": "found",
    "name": "Text Find",
    "display_name": "Text Find",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Input Switch": {
    "input": {
      "required": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Input Switch",
    "display_name": "Text Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Text List": {
    "input": {
      "required": {

      },
      "optional": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_e": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_f": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_g": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LIST"
    ],
    "output_is_list": [false],
    "output_name": [
      "LIST"
    ],
    "name": "Text List",
    "display_name": "Text List",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text List Concatenate": {
    "input": {
      "required": {

      },
      "optional": {
        "list_a": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "list_b": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "list_c": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "list_d": [
          "LIST",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LIST"
    ],
    "output_is_list": [false],
    "output_name": [
      "LIST"
    ],
    "name": "Text List Concatenate",
    "display_name": "Text List Concatenate",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text List to Text": {
    "input": {
      "required": {
        "delimiter": [
          "STRING",
          {
            "default": ", "
          }
        ],
        "text_list": [
          "LIST",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text List to Text",
    "display_name": "Text List to Text",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Load Line From File": {
    "input": {
      "required": {
        "file_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": false
          }
        ],
        "label": [
          "STRING",
          {
            "default": "TextBatch",
            "multiline": false
          }
        ],
        "mode": [
          [
            "automatic",
            "index"
          ]
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "multiline_text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "line_text",
      "dictionary"
    ],
    "name": "Text Load Line From File",
    "display_name": "Text Load Line From File",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Multiline": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true,
            "dynamicPrompts": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Multiline",
    "display_name": "Text Multiline",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Parse A1111 Embeddings": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse A1111 Embeddings",
    "display_name": "Text Parse A1111 Embeddings",
    "description": "",
    "category": "WAS Suite/Text/Parse",
    "output_node": false
  },
  "Text Parse Noodle Soup Prompts": {
    "input": {
      "required": {
        "mode": [
          [
            "Noodle Soup Prompts",
            "Wildcards"
          ]
        ],
        "noodle_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ],
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse Noodle Soup Prompts",
    "display_name": "Text Parse Noodle Soup Prompts",
    "description": "",
    "category": "WAS Suite/Text/Parse",
    "output_node": true
  },
  "Text Parse Tokens": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse Tokens",
    "display_name": "Text Parse Tokens",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": false
  },
  "Text Random Line": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Random Line",
    "display_name": "Text Random Line",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Random Prompt": {
    "input": {
      "required": {
        "search_seed": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Random Prompt",
    "display_name": "Text Random Prompt",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "text_b": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_c": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_d": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "name": "Text String",
    "display_name": "Text String",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Contains": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "sub_text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "case_insensitive": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [false],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "Text Contains",
    "display_name": "Text Contains",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Text Shuffle": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "separator": [
          "STRING",
          {
            "default": ",",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e+19
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text Shuffle",
    "display_name": "Text Shuffle",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to Conditioning": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [false],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "Text to Conditioning",
    "display_name": "Text to Conditioning",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to Console": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "label": [
          "STRING",
          {
            "default": "Text Output",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text to Console",
    "display_name": "Text to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Text to Number": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [false],
    "output_name": [
      "NUMBER"
    ],
    "name": "Text to Number",
    "display_name": "Text to Number",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [false],
    "output_name": [
      "STRING"
    ],
    "name": "Text to String",
    "display_name": "Text to String",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text String Truncate": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "truncate_by": [
          [
            "characters",
            "words"
          ]
        ],
        "truncate_from": [
          [
            "end",
            "beginning"
          ]
        ],
        "truncate_to": [
          "INT",
          {
            "default": 10,
            "min": -99999999,
            "max": 99999999,
            "step": 1
          }
        ]
      },
      "optional": {
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false],
    "output_name": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "name": "Text String Truncate",
    "display_name": "Text String Truncate",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "True Random.org Number Generator": {
    "input": {
      "required": {
        "api_key": [
          "STRING",
          {
            "default": "00000000-0000-0000-0000-000000000000",
            "multiline": false
          }
        ],
        "minimum": [
          "FLOAT",
          {
            "default": 0,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "maximum": [
          "FLOAT",
          {
            "default": 10000000,
            "min": -1.8446744073709552e+19,
            "max": 1.8446744073709552e+19
          }
        ],
        "mode": [
          [
            "random",
            "fixed"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "True Random.org Number Generator",
    "display_name": "True Random.org Number Generator",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "unCLIP Checkpoint Loader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "3dAnimationDiffusion_v10.safetensors",
            "aniverse_v40.safetensors",
            "aniverse_v40Pruned.safetensors",
            "cinematix_l8.safetensors",
            "colorful_v80.safetensors",
            "colorfulxl_v42.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_b.safetensors",
            "comfyui_checkpoints/stable_cascade_stage_c.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "duchaitenPonyXLNo_ponyNoScoreV40.safetensors",
            "epic25D_v10.safetensors",
            "epicrealismXL_v7FinalDestination.safetensors",
            "illuminatiDiffusionV1_v11.safetensors",
            "juggernautXL_juggXRundiffusion.safetensors",
            "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
            "ponyRealism_v21VAE.safetensors",
            "realisticVisionV60B1_v51HyperVAE.safetensors",
            "sd21-unclip-h.ckpt",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_offset_example-lora_1.0.safetensors",
            "sd_xl_refiner_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/image_normalizer/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/sd21-unclip-h.ckpt",
            "stable-diffusion-2-1-unclip/sd21-unclip-l.ckpt",
            "stable-diffusion-2-1-unclip/text_encoder/model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/model.safetensors",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.bin",
            "stable-diffusion-2-1-unclip/text_encoder/pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/unet/diffusion_pytorch_model.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.bin",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.fp16.safetensors",
            "stable-diffusion-2-1-unclip/vae/diffusion_pytorch_model.safetensors",
            "svd.safetensors",
            "v1-5-pruned-emaonly.safetensors",
            "v2-1_768-ema-pruned.safetensors",
            "zavychromaxl_v70.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION",
      "NAME_STRING"
    ],
    "name": "unCLIP Checkpoint Loader",
    "display_name": "unCLIP Checkpoint Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Upscale Model Loader": {
    "input": {
      "required": {
        "model_name": [
          [
            "4x-UltraSharp.pth",
            "4x_NMKD-Siax_200k.pth",
            "4x_fatal_Anime_500000_G.pth"
          ]
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL",
      "STRING"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "UPSCALE_MODEL",
      "MODEL_NAME_TEXT"
    ],
    "name": "Upscale Model Loader",
    "display_name": "Upscale Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Upscale Model Switch": {
    "input": {
      "required": {
        "upscale_model_a": [
          "UPSCALE_MODEL"
        ],
        "upscale_model_b": [
          "UPSCALE_MODEL"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [false],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "name": "Upscale Model Switch",
    "display_name": "Upscale Model Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Write to GIF": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "image_delay_ms": [
          "FLOAT",
          {
            "default": 2500,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "/Volumes/CORSAIR/StabilityMatrix/Packages/ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph_writer",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "image_pass",
      "filepath_text",
      "filename_text"
    ],
    "name": "Write to GIF",
    "display_name": "Write to GIF",
    "description": "",
    "category": "WAS Suite/Animation/Writer",
    "output_node": false
  },
  "Write to Video": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 120,
            "step": 1
          }
        ],
        "image_delay_sec": [
          "FLOAT",
          {
            "default": 2.5,
            "min": 0.1,
            "max": 60000,
            "step": 0.1
          }
        ],
        "fps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 60,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1920,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "comfy_writer",
            "multiline": false
          }
        ],
        "codec": [
          [
            "AVC1",
            "FFV1",
            "H264",
            "MP4V"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false],
    "output_name": [
      "IMAGE_PASS",
      "filepath_text",
      "filename_text"
    ],
    "name": "Write to Video",
    "display_name": "Write to Video",
    "description": "",
    "category": "WAS Suite/Animation/Writer",
    "output_node": false
  },
  "VAE Input Switch": {
    "input": {
      "required": {
        "vae_a": [
          "VAE"
        ],
        "vae_b": [
          "VAE"
        ],
        "boolean": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [false],
    "output_name": [
      "VAE"
    ],
    "name": "VAE Input Switch",
    "display_name": "VAE Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Video Dump Frames": {
    "input": {
      "required": {
        "video_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/MyVideo.mp4",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/MyVideo",
            "multiline": false
          }
        ],
        "prefix": [
          "STRING",
          {
            "default": "frame_",
            "multiline": false
          }
        ],
        "filenumber_digits": [
          "INT",
          {
            "default": 4,
            "min": -1,
            "max": 8,
            "step": 1
          }
        ],
        "extension": [
          [
            "png",
            "jpg",
            "gif",
            "tiff"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER"
    ],
    "output_is_list": [false, false],
    "output_name": [
      "output_path",
      "processed_count"
    ],
    "name": "Video Dump Frames",
    "display_name": "Video Dump Frames",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "SaveImageWebsocket": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveImageWebsocket",
    "display_name": "SaveImageWebsocket",
    "description": "",
    "category": "api/image",
    "output_node": true
  }
}